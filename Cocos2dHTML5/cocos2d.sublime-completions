{
  "scope": "source.js",
  "completions":
  [
      {"trigger": "setEye", "contents": "setEye(${1:Number eyeX}, ${2:Number eyeY}, ${3:Number eyeZ})" },
      {"trigger": "nodeToWorldTransform", "contents": "nodeToWorldTransform()" },
      {"trigger": "fullScreen", "contents": "fullScreen()" },
      {"trigger": "isFull", "contents": "isFull()" },
      {"trigger": "setContentScaleFactor", "contents": "setContentScaleFactor(${1:Number scaleFactor})" },
      {"trigger": "removeQuadAtIndex", "contents": "removeQuadAtIndex(${1:Number index})" },
      {"trigger": "getTileGIDAt", "contents": "getTileGIDAt(${1:cc.Point pos})" },
      {"trigger": "unschedule", "contents": "unschedule(${1:function callback_fn})" },
      {"trigger": "scheduleOnce", "contents": "scheduleOnce(${1:function callback_fn}, ${2:Number delay})" },
      {"trigger": "setEndSpinVar", "contents": "setEndSpinVar(${1:Number endSpinVar})" },
      {"trigger": "setSubItems", "contents": "setSubItems(${1:cc.MenuItem SubItems})" },
      {"trigger": "getPixelsWide", "contents": "getPixelsWide()" },
      {"trigger": "setPosVar", "contents": "setPosVar(${1:cc.Point posVar})" },
      {"trigger": "setAccelerometerEnabled", "contents": "setAccelerometerEnabled(${1:Boolean enabled})" },
      {"trigger": "init", "contents": "init()" },
      {"trigger": "getForcedTarget", "contents": "getForcedTarget()" },
      {"trigger": "setOffset", "contents": "setOffset(${1:cc.Point offsets})" },
      {"trigger": "setChild", "contents": "setChild(${1: {cc.Node}})" },
      {"trigger": "getOpenGLView", "contents": "getOpenGLView()" },
      {"trigger": "isKeyboardEnabled", "contents": "isKeyboardEnabled()" },
      {"trigger": "setRotated", "contents": "setRotated(${1:Boolean bRotated})" },
      {"trigger": "setStartRadius", "contents": "setStartRadius(${1:Number startRadius})" },
      {"trigger": "getSelectedIndex", "contents": "getSelectedIndex()" },
      {"trigger": "setCenter", "contents": "setCenter(${1:Number centerX}, ${2:Number centerY}, ${3:Number centerZ})" },
      {"trigger": "getRectInPixels", "contents": "getRectInPixels()" },
      {"trigger": "getFileDataFromZip", "contents": "getFileDataFromZip(${1:String pszZipFilePath}, ${2:String fileName}, ${3:Number size})" },
      {"trigger": "setEndSize", "contents": "setEndSize(${1: endSize})" },
      {"trigger": "tmxParse", "contents": "tmxParse(${1: {String}})" },
      {"trigger": "getTextDefinition", "contents": "getTextDefinition()" },
      {"trigger": "drawQuadBezier", "contents": "drawQuadBezier(${1:cc.Point origin}, ${2:cc.Point control}, ${3:cc.Point destination}, ${4:Number segments})" },
      {"trigger": "removeAction", "contents": "removeAction(${1:cc.Action action})" },
      {"trigger": "rearrangeHandlers", "contents": "rearrangeHandlers(${1:Array array})" },
      {"trigger": "cellAtIndex", "contents": "cellAtIndex(${1: idx})" },
      {"trigger": "getAnimation", "contents": "getAnimation()" },
      {"trigger": "processKeycode", "contents": "processKeycode(${1:Number keyCode})" },
      {"trigger": "fullPathFromRelativeFile", "contents": "fullPathFromRelativeFile(${1:String filename}, ${2:String relativeFile})" },
      {"trigger": "setInputFlag", "contents": "setInputFlag(${1:Number inputFlag})" },
      {"trigger": "setUniformLocationWith3fv", "contents": "setUniformLocationWith3fv(${1:WebGLUniformLocation location}, ${2:Float32Array floatArray}, ${3:Number numberOfArrays})" },
      {"trigger": "setCenterXYZ", "contents": "setCenterXYZ(${1:Number centerX}, ${2:Number centerY}, ${3:Number centerZ})" },
      {"trigger": "getRadialAccelVar", "contents": "getRadialAccelVar()" },
      {"trigger": "setResourcePath", "contents": "setResourcePath(${1:String resourcePath})" },
      {"trigger": "setHorizontalAlignment", "contents": "setHorizontalAlignment(${1:cc.TEXT_ALIGNMENT_LEFT|cc.TEXT_ALIGNMENT_CENTER|cc.TEXT_ALIGNMENT_RIGHT alignment})" },
      {"trigger": "numberOfCellsInTableView", "contents": "numberOfCellsInTableView(${1:cc.TableView table})" },
      {"trigger": "getTouchPriority", "contents": "getTouchPriority()" },
      {"trigger": "setDuration", "contents": "setDuration(${1:Number duration})" },
      {"trigger": "replaceScene", "contents": "replaceScene(${1:cc.Scene scene})" },
      {"trigger": "scheduleCallbackForTarget", "contents": "scheduleCallbackForTarget(${1:cc.Class target}, ${2:function callback_fn}, ${3:Number interval}, ${4:Number repeat}, ${5:Number delay}, ${6:Boolean paused})" },
      {"trigger": "setTimeScale", "contents": "setTimeScale(${1:Number timeScale})" },
      {"trigger": "getMapTileSize", "contents": "getMapTileSize()" },
      {"trigger": "isBlendAdditive", "contents": "isBlendAdditive()" },
      {"trigger": "addImage", "contents": "addImage(${1:String path})" },
      {"trigger": "removeSpriteFramesFromFile", "contents": "removeSpriteFramesFromFile(${1:String plist})" },
      {"trigger": "getFntFile", "contents": "getFntFile()" },
      {"trigger": "getMaxTextureUnits", "contents": "getMaxTextureUnits()" },
      {"trigger": "addDelegate", "contents": "addDelegate(${1:cc.KeyboardDelegate delegate})" },
      {"trigger": "setDrawMode", "contents": "setDrawMode(${1:Number drawMode})" },
      {"trigger": "run", "contents": "run()" },
      {"trigger": "getSourcePosition", "contents": "getSourcePosition()" },
      {"trigger": "ctor", "contents": "ctor(${1:CanvasRenderingContext2D renderContext})" },
      {"trigger": "setLifeVar", "contents": "setLifeVar(${1:Number lifeVar})" },
      {"trigger": "isPopupNotify", "contents": "isPopupNotify()" },
      {"trigger": "setFontName", "contents": "setFontName(${1:String fontName})" },
      {"trigger": "canDetachWithIME", "contents": "canDetachWithIME()" },
      {"trigger": "useBatchNode", "contents": "useBatchNode(${1:cc.SpriteBatchNode batchNode})" },
      {"trigger": "bitsPerPixelForFormat", "contents": "bitsPerPixelForFormat()" },
      {"trigger": "addSpriteWithoutQuad", "contents": "addSpriteWithoutQuad(${1:cc.Sprite child}, ${2:Number z}, ${3:Number aTag})" },
      {"trigger": "setParent", "contents": "setParent(${1:cc.Node p})" },
      {"trigger": "setLensEffect", "contents": "setLensEffect(${1:Number lensEffect})" },
      {"trigger": "setBoudarySet", "contents": "setBoudarySet(${1:Boolean value})" },
      {"trigger": "updateQuadWithParticle", "contents": "updateQuadWithParticle(${1:cc.Particle particle}, ${2:cc.Point newPosition})" },
      {"trigger": "alignItemsHorizontallyWithPadding", "contents": "alignItemsHorizontallyWithPadding(${1:Number padding})" },
      {"trigger": "forceAddHandler", "contents": "forceAddHandler(${1:cc.TouchHandler handler}, ${2:Array array})" },
      {"trigger": "listenBackToForeground", "contents": "listenBackToForeground(${1:cc.Class obj})" },
      {"trigger": "changeWidthAndHeight", "contents": "changeWidthAndHeight(${1:Number w}, ${2:Number h})" },
      {"trigger": "popToSceneStackLevel", "contents": "popToSceneStackLevel(${1:Number level})" },
      {"trigger": "onTextFieldDeleteBackward", "contents": "onTextFieldDeleteBackward(${1:cc.TextFieldTTF sender}, ${2:String delText}, ${3:Number len})" },
      {"trigger": "getParentGID", "contents": "getParentGID()" },
      {"trigger": "setUp", "contents": "setUp(${1:Number upX}, ${2:Number upY}, ${3:Number upZ})" },
      {"trigger": "onTouchBegan", "contents": "onTouchBegan(${1:cc.Touch touch}, ${2:event event})" },
      {"trigger": "getFrames", "contents": "getFrames()" },
      {"trigger": "maxContainerOffset", "contents": "maxContainerOffset()" },
      {"trigger": "setTangentialAccelVar", "contents": "setTangentialAccelVar(${1:Number tangentialAccelVar})" },
      {"trigger": "drawRect", "contents": "drawRect(${1:cc.Point origin}, ${2:cc.Point destination})" },
      {"trigger": "insertText", "contents": "insertText(${1:String text}, ${2:Number len})" },
      {"trigger": "removeMouseDelegate", "contents": "removeMouseDelegate(${1: delegate})" },
      {"trigger": "reorderChild", "contents": "reorderChild(${1:cc.Node child}, ${2:Number zOrder})" },
      {"trigger": "getTimeScale", "contents": "getTimeScale()" },
      {"trigger": "setPositionOffset", "contents": "setPositionOffset(${1:cc.Point Var})" },
      {"trigger": "turnOffTile", "contents": "turnOffTile(${1:cc.Point pos})" },
      {"trigger": "transformTile", "contents": "transformTile(${1:cc.Point pos}, ${2:Number distance})" },
      {"trigger": "statusBarFrame", "contents": "statusBarFrame(${1:cc.Rect rect})" },
      {"trigger": "setForcedTarget", "contents": "setForcedTarget(${1:cc.Node forcedTarget})" },
      {"trigger": "getStartOpacity", "contents": "getStartOpacity()" },
      {"trigger": "getSetOfTouchesEndOrCancel", "contents": "getSetOfTouchesEndOrCancel(${1:Array arr}, ${2:Number num}, ${3:Number ids}, ${4:Number xs}, ${5:Number ys})" },
      {"trigger": "resizeCapacity", "contents": "resizeCapacity(${1:Number newCapacity})" },
      {"trigger": "initWithLayer", "contents": "initWithLayer(${1:cc.Layer layer})" },
      {"trigger": "setTouchInfo", "contents": "setTouchInfo(${1:Number id}, ${2: {Number}}, ${3: {Number}})" },
      {"trigger": "dictionaryWithContentsOfFileThreadSafe", "contents": "dictionaryWithContentsOfFileThreadSafe(${1:String fileName})" },
      {"trigger": "setAutoRemoveOnFinish", "contents": "setAutoRemoveOnFinish(${1:Boolean isAutoRemoveOnFinish})" },
      {"trigger": "drawStar", "contents": "drawStar(${1:CanvasRenderingContext2D ctx}, ${2:Number radius}, ${3:cc.Color3B|cc.Color4B|cc.Color4F color})" },
      {"trigger": "onKeyUp", "contents": "onKeyUp(${1:Integer keyCode})" },
      {"trigger": "disableStroke", "contents": "disableStroke(${1:Boolean [mustUpdateTexture=false]})" },
      {"trigger": "handleTouchesEnd", "contents": "handleTouchesEnd(${1:Number num}, ${2:Number ids}, ${3:Number xs}, ${4:Number ys})" },
      {"trigger": "resumeEffect", "contents": "resumeEffect(${1:Number audioID})" },
      {"trigger": "turnOnTile", "contents": "turnOnTile(${1:cc.Point pos})" },
      {"trigger": "setFloatForKey", "contents": "setFloatForKey(${1:String key}, ${2:Number value})" },
      {"trigger": "shuffle", "contents": "shuffle(${1:Array array}, ${2:Number len})" },
      {"trigger": "convertToNodeSpaceAR", "contents": "convertToNodeSpaceAR(${1:cc.Point worldPoint})" },
      {"trigger": "addUIImage", "contents": "addUIImage(${1:HTMLImageElement|HTMLCanvasElement image}, ${2:String key})" },
      {"trigger": "setFilenameLookupDictionary", "contents": "setFilenameLookupDictionary(${1:Object filenameLookupDict})" },
      {"trigger": "getText", "contents": "getText()" },
      {"trigger": "setSourcePosition", "contents": "setSourcePosition(${1: sourcePosition})" },
      {"trigger": "getGroupName", "contents": "getGroupName()" },
      {"trigger": "parseXMLFile", "contents": "parseXMLFile(${1:String tmxFile}, ${2:boolean [isXmlString=false]})" },
      {"trigger": "setPriority", "contents": "setPriority(${1:Number priority})" },
      {"trigger": "initWithImageFile", "contents": "initWithImageFile(${1:String strPath}, ${2:Number imageType})" },
      {"trigger": "setLayerOrientation", "contents": "setLayerOrientation(${1:Number Var})" },
      {"trigger": "setAlphaBlending", "contents": "setAlphaBlending(${1:Boolean on})" },
      {"trigger": "tableCellHighlight", "contents": "tableCellHighlight(${1:cc.TableView table}, ${2:cc.TableViewCell cell})" },
      {"trigger": "loadFilenameLookup", "contents": "loadFilenameLookup(${1:String filename})" },
      {"trigger": "getTiles", "contents": "getTiles()" },
      {"trigger": "setGravity", "contents": "setGravity(${1:cc.Point gravity})" },
      {"trigger": "setUniformLocationWith1i", "contents": "setUniformLocationWith1i(${1:WebGLUniformLocation location}, ${2:Number i1})" },
      {"trigger": "getAnchorPointInPoints", "contents": "getAnchorPointInPoints()" },
      {"trigger": "isTextureFlipped", "contents": "isTextureFlipped()" },
      {"trigger": "setUniformLocationWith1f", "contents": "setUniformLocationWith1f(${1:WebGLUniformLocation location}, ${2:Number f1})" },
      {"trigger": "getEyeXYZ", "contents": "getEyeXYZ(${1:Number eyeX}, ${2:Number eyeY}, ${3:Number eyeZ})" },
      {"trigger": "drawInRect", "contents": "drawInRect(${1:cc.Rect rect})" },
      {"trigger": "getVector", "contents": "getVector()" },
      {"trigger": "setScheduler", "contents": "setScheduler(${1: scheduler})" },
      {"trigger": "getDesignResolutionSize", "contents": "getDesignResolutionSize()" },
      {"trigger": "rect", "contents": "rect()" },
      {"trigger": "getLensEffect", "contents": "getLensEffect()" },
      {"trigger": "getSkewY", "contents": "getSkewY()" },
      {"trigger": "setTargetCallback", "contents": "setTargetCallback(${1:object sel})" },
      {"trigger": "initWithPlaceHolder", "contents": "initWithPlaceHolder(${1:String placeholder}, ${2:cc.Size dimensions}, ${3:Number alignment}, ${4:String fontName}, ${5:Number fontSize})" },
      {"trigger": "getPeriod", "contents": "getPeriod()" },
      {"trigger": "attachWithIME", "contents": "attachWithIME()" },
      {"trigger": "setUniformLocationWith3iv", "contents": "setUniformLocationWith3iv(${1:WebGLUniformLocation location}, ${2:Int32Array intArray}, ${3:Number numberOfArrays})" },
      {"trigger": "setEnabled", "contents": "setEnabled(${1:Boolean enabled})" },
      {"trigger": "getDisplayedOpacity", "contents": "getDisplayedOpacity()" },
      {"trigger": "onKeyDown", "contents": "onKeyDown(${1:Integer keyCode})" },
      {"trigger": "setDoubleForKey", "contents": "setDoubleForKey(${1:String key}, ${2:Number value})" },
      {"trigger": "addMouseDelegate", "contents": "addMouseDelegate(${1: delegate}, ${2: priority})" },
      {"trigger": "setUniformLocationI32", "contents": "setUniformLocationI32(${1:WebGLUniformLocation location}, ${2:Number i1})" },
      {"trigger": "setStartColor", "contents": "setStartColor(${1:cc.Color3B color})" },
      {"trigger": "getPosition", "contents": "getPosition()" },
      {"trigger": "isBoundarySet", "contents": "isBoundarySet()" },
      {"trigger": "parse", "contents": "parse(${1:String textxml})" },
      {"trigger": "getUserInfo", "contents": "getUserInfo()" },
      {"trigger": "setZOrder", "contents": "setZOrder(${1:Number z})" },
      {"trigger": "addPVRImage", "contents": "addPVRImage(${1:String path})" },
      {"trigger": "setRate", "contents": "setRate(${1:Number rate})" },
      {"trigger": "setTilesets", "contents": "setTilesets(${1:cc.TMXTilesetInfo Var})" },
      {"trigger": "disableShadow", "contents": "disableShadow(${1:Boolean [mustUpdateTexture=false]})" },
      {"trigger": "isPaused", "contents": "isPaused()" },
      {"trigger": "setSpeedVar", "contents": "setSpeedVar(${1:Number speedVar})" },
      {"trigger": "setStartSpinVar", "contents": "setStartSpinVar(${1:Number startSpinVar})" },
      {"trigger": "getUp", "contents": "getUp()" },
      {"trigger": "getRotatePerSecond", "contents": "getRotatePerSecond()" },
      {"trigger": "getParentElement", "contents": "getParentElement()" },
      {"trigger": "lowestAtlasIndexInChild", "contents": "lowestAtlasIndexInChild(${1:cc.Sprite sprite})" },
      {"trigger": "setOffsetInPixels", "contents": "setOffsetInPixels(${1:cc.Point offsetInPixels})" },
      {"trigger": "getNormalImage", "contents": "getNormalImage()" },
      {"trigger": "getEmissionRate", "contents": "getEmissionRate()" },
      {"trigger": "getEndColor", "contents": "getEndColor()" },
      {"trigger": "removeChildAtIndex", "contents": "removeChildAtIndex(${1:Number index}, ${2:Boolean doCleanup})" },
      {"trigger": "setLineWidth", "contents": "setLineWidth(${1:Number width})" },
      {"trigger": "setIntegerForKey", "contents": "setIntegerForKey(${1:String key}, ${2:Number value})" },
      {"trigger": "increaseTotalQuadsWith", "contents": "increaseTotalQuadsWith(${1:Number amount})" },
      {"trigger": "getNotificationNode", "contents": "getNotificationNode()" },
      {"trigger": "setVertex", "contents": "setVertex(${1:cc.Point position}, ${2:cc.Vertex3F vertex})" },
      {"trigger": "getNumber", "contents": "getNumber(${1:string key}, ${2:number [default_value=0]})" },
      {"trigger": "isSendCleanupToScene", "contents": "isSendCleanupToScene()" },
      {"trigger": "getSelector", "contents": "getSelector()" },
      {"trigger": "getRect", "contents": "getRect()" },
      {"trigger": "setString", "contents": "setString(${1:String newString}, ${2:Boolean|null needUpdateLabel})" },
      {"trigger": "setOpacityModifyRGB", "contents": "setOpacityModifyRGB(${1:Boolean value})" },
      {"trigger": "initWithImageData", "contents": "initWithImageData(${1:Array data}, ${2:Number dataLen}, ${3:Number eFmt}, ${4:Number width}, ${5:Number height}, ${6:Number bitsPerComponent})" },
      {"trigger": "setTextureFlipped", "contents": "setTextureFlipped(${1:Boolean flipped})" },
      {"trigger": "initWithItems", "contents": "initWithItems(${1:Array args})" },
      {"trigger": "setGrid", "contents": "setGrid(${1:cc.GridBase grid})" },
      {"trigger": "tile", "contents": "tile(${1:cc.Point position})" },
      {"trigger": "getBoundingBox", "contents": "getBoundingBox()" },
      {"trigger": "setQuadsToDraw", "contents": "setQuadsToDraw(${1:Number quadsToDraw})" },
      {"trigger": "getBlendFunc", "contents": "getBlendFunc()" },
      {"trigger": "setUserObject", "contents": "setUserObject(${1:object newValue})" },
      {"trigger": "onDraw", "contents": "onDraw(${1:cc.TextFieldTTF sender})" },
      {"trigger": "getLayerAttribs", "contents": "getLayerAttribs()" },
      {"trigger": "removeFromParent", "contents": "removeFromParent(${1:Boolean cleanup})" },
      {"trigger": "clone", "contents": "clone()" },
      {"trigger": "getSpriteFrame", "contents": "getSpriteFrame()" },
      {"trigger": "playEffect", "contents": "playEffect(${1:String path}, ${2:Boolean loop})" },
      {"trigger": "setRadialAccel", "contents": "setRadialAccel(${1:Number radialAccel})" },
      {"trigger": "convertToNodeSpace", "contents": "convertToNodeSpace(${1:cc.Point worldPoint})" },
      {"trigger": "setFontSize", "contents": "setFontSize(${1:Number fontSize})" },
      {"trigger": "getScale", "contents": "getScale()" },
      {"trigger": "getDelayPerUnit", "contents": "getDelayPerUnit()" },
      {"trigger": "isAccelerometerEnabled", "contents": "isAccelerometerEnabled()" },
      {"trigger": "getClearColor", "contents": "getClearColor()" },
      {"trigger": "setPeriod", "contents": "setPeriod(${1:Number period})" },
      {"trigger": "initWithFile", "contents": "initWithFile(${1:String fileImage}, ${2:Number capacity})" },
      {"trigger": "addSpriteFrame", "contents": "addSpriteFrame(${1:cc.SpriteFrame frame})" },
      {"trigger": "parentToNodeTransform", "contents": "parentToNodeTransform()" },
      {"trigger": "getEndSpinVar", "contents": "getEndSpinVar()" },
      {"trigger": "setOriginalTarget", "contents": "setOriginalTarget(${1:cc.Node originalTarget})" },
      {"trigger": "setPercentage", "contents": "setPercentage(${1:Number percentage})" },
      {"trigger": "bounceTime", "contents": "bounceTime(${1:Number time1})" },
      {"trigger": "getEndRadiusVar", "contents": "getEndRadiusVar()" },
      {"trigger": "highestAtlasIndexInChild", "contents": "highestAtlasIndexInChild(${1:cc.Sprite sprite})" },
      {"trigger": "getBarChangeRate", "contents": "getBarChangeRate()" },
      {"trigger": "setZoomScale", "contents": "setZoomScale(${1:Number scale}, ${2:Boolean [animated=null]})" },
      {"trigger": "switchTo", "contents": "switchTo(${1:Number n})" },
      {"trigger": "getEye", "contents": "getEye()" },
      {"trigger": "getFragmentShaderLog", "contents": "getFragmentShaderLog()" },
      {"trigger": "getUserObject", "contents": "getUserObject()" },
      {"trigger": "initWithVertexShaderFilename", "contents": "initWithVertexShaderFilename(${1:String vShaderFilename}, ${2:String fShaderFileName})" },
      {"trigger": "handleTouchesMove", "contents": "handleTouchesMove(${1:Number num}, ${2:Number ids}, ${3:Number xs}, ${4:Number ys})" },
      {"trigger": "setOpacity", "contents": "setOpacity(${1:Number opacity})" },
      {"trigger": "getLayers", "contents": "getLayers()" },
      {"trigger": "setUniformLocationWith2fv", "contents": "setUniformLocationWith2fv(${1:WebGLUniformLocation location}, ${2:Float32Array floatArray}, ${3:Number numberOfArrays})" },
      {"trigger": "getBoundingBoxToWorld", "contents": "getBoundingBoxToWorld()" },
      {"trigger": "getEmitterMode", "contents": "getEmitterMode()" },
      {"trigger": "easeActionWithAction", "contents": "easeActionWithAction(${1:cc.ActionInterval action})" },
      {"trigger": "getBatchNode", "contents": "getBatchNode()" },
      {"trigger": "getTag", "contents": "getTag()" },
      {"trigger": "onOtherMouseUp", "contents": "onOtherMouseUp(${1: event})" },
      {"trigger": "initWithImageFileThreadSafe", "contents": "initWithImageFileThreadSafe(${1:String fullpath}, ${2:Number imageType})" },
      {"trigger": "stopMusic", "contents": "stopMusic(${1:Boolean releaseData})" },
      {"trigger": "initWithViewSize", "contents": "initWithViewSize(${1:cc.Size size}, ${2:cc.Node container})" },
      {"trigger": "convertToWorldSpaceAR", "contents": "convertToWorldSpaceAR(${1:cc.Point nodePoint})" },
      {"trigger": "setZoomScaleInDuration", "contents": "setZoomScaleInDuration(${1:Number s}, ${2:Number dt})" },
      {"trigger": "setOriginalSizeInPixels", "contents": "setOriginalSizeInPixels(${1:cc.Size sizeInPixels})" },
      {"trigger": "initWithNormalSprite", "contents": "initWithNormalSprite(${1:cc.Node normalSprite}, ${2:cc.Node selectedSprite}, ${3:cc.Node disabledSprite}, ${4:function|String callback}, ${5:cc.Node target})" },
      {"trigger": "textureForKey", "contents": "textureForKey(${1:String textureKeyName})" },
      {"trigger": "initWithString", "contents": "initWithString(${1:String strText}, ${2:String|cc.Texture2D charMapFile}, ${3:Number [itemWidth=0]}, ${4:Number [itemHeight=0]}, ${5:Number [startCharMap='']})" },
      {"trigger": "getStartSpinVar", "contents": "getStartSpinVar()" },
      {"trigger": "getSelectedImage", "contents": "getSelectedImage()" },
      {"trigger": "supportsNPOT", "contents": "supportsNPOT()" },
      {"trigger": "getTilesets", "contents": "getTilesets()" },
      {"trigger": "updateDisplayedOpacity", "contents": "updateDisplayedOpacity(${1:Number parentOpacity})" },
      {"trigger": "getLayerSize", "contents": "getLayerSize()" },
      {"trigger": "drawAtPoint", "contents": "drawAtPoint(${1:cc.Point point})" },
      {"trigger": "setEmitterMode", "contents": "setEmitterMode(${1:Number emitterMode})" },
      {"trigger": "addSpriteFrameWithFile", "contents": "addSpriteFrameWithFile(${1:String fileName})" },
      {"trigger": "setTangentialAccel", "contents": "setTangentialAccel(${1:Number tangentialAccel})" },
      {"trigger": "getDrawMode", "contents": "getDrawMode()" },
      {"trigger": "getPreviousLocation", "contents": "getPreviousLocation()" },
      {"trigger": "onTouchesEnded", "contents": "onTouchesEnded(${1:cc.Touch touch}, ${2:event event})" },
      {"trigger": "setDisplayFrameWithAnimationName", "contents": "setDisplayFrameWithAnimationName(${1: animationName}, ${2: frameIndex})" },
      {"trigger": "dequeueCell", "contents": "dequeueCell()" },
      {"trigger": "addSubItem", "contents": "addSubItem(${1:cc.MenuItem item})" },
      {"trigger": "setRotatePerSecond", "contents": "setRotatePerSecond(${1:Number degrees})" },
      {"trigger": "setCompressedInterpolation", "contents": "setCompressedInterpolation(${1:Boolean compress})" },
      {"trigger": "touchesMoved", "contents": "touchesMoved(${1:Array touches}, ${2:event event})" },
      {"trigger": "setAmplitude", "contents": "setAmplitude(${1:Number amplitude})" },
      {"trigger": "initWithSize", "contents": "initWithSize(${1:cc.Size gridSize}, ${2:Number duration})" },
      {"trigger": "isTextureRectRotated", "contents": "isTextureRectRotated()" },
      {"trigger": "setVector", "contents": "setVector(${1:cc.Point Var})" },
      {"trigger": "supportsDiscardFramebuffer", "contents": "supportsDiscardFramebuffer()" },
      {"trigger": "setOrientation", "contents": "setOrientation(${1:Number Var})" },
      {"trigger": "getSpeed", "contents": "getSpeed()" },
      {"trigger": "getMaxLength", "contents": "getMaxLength()" },
      {"trigger": "supportsShareableVAO", "contents": "supportsShareableVAO()" },
      {"trigger": "tintWithColor", "contents": "tintWithColor(${1:cc.Color3B colors})" },
      {"trigger": "getFloatForKey", "contents": "getFloatForKey(${1:String key}, ${2:Number defaultValue})" },
      {"trigger": "drawSolidRect", "contents": "drawSolidRect(${1:cc.Point origin}, ${2:cc.Point destination}, ${3:cc.Color4F color})" },
      {"trigger": "listenToForeground", "contents": "listenToForeground(${1:cc.Class obj})" },
      {"trigger": "initTexCoordsWithRect", "contents": "initTexCoordsWithRect(${1:cc.Rect pointRect})" },
      {"trigger": "setDisplayStats", "contents": "setDisplayStats(${1:Boolean displayStats})" },
      {"trigger": "addETCImage", "contents": "addETCImage(${1:String filename})" },
      {"trigger": "setAnimationInterval", "contents": "setAnimationInterval(${1:Number value})" },
      {"trigger": "setFrameSize", "contents": "setFrameSize(${1:Number width}, ${2:Number height})" },
      {"trigger": "setDelayUnits", "contents": "setDelayUnits(${1: delayUnits})" },
      {"trigger": "onMouseDragged", "contents": "onMouseDragged(${1: event})" },
      {"trigger": "getPosVar", "contents": "getPosVar()" },
      {"trigger": "stringForFormat", "contents": "stringForFormat()" },
      {"trigger": "drawPoints", "contents": "drawPoints(${1:Array points}, ${2:Number numberOfPoints})" },
      {"trigger": "getRotationX", "contents": "getRotationX()" },
      {"trigger": "getRotationY", "contents": "getRotationY()" },
      {"trigger": "initWithPosition", "contents": "initWithPosition(${1:cc.Point pos})" },
      {"trigger": "setPositionType", "contents": "setPositionType(${1:Number positionType})" },
      {"trigger": "getRotatePerSecondVar", "contents": "getRotatePerSecondVar()" },
      {"trigger": "description", "contents": "description()" },
      {"trigger": "getClearStencil", "contents": "getClearStencil()" },
      {"trigger": "touchesEnded", "contents": "touchesEnded(${1:Array touches}, ${2:event event})" },
      {"trigger": "getUserData", "contents": "getUserData()" },
      {"trigger": "setStartSpin", "contents": "setStartSpin(${1:Number startSpin})" },
      {"trigger": "initWithTarget", "contents": "initWithTarget(${1:cc.Node followedNode}, ${2:cc.Rect [rect=]})" },
      {"trigger": "setEndColorVar", "contents": "setEndColorVar(${1:cc.Color4F endColorVar})" },
      {"trigger": "setBlendAdditive", "contents": "setBlendAdditive(${1:Boolean isBlendAdditive})" },
      {"trigger": "dispatchKeyboardDidShow", "contents": "dispatchKeyboardDidShow(${1:cc.IMEKeyboardNotificationInfo info})" },
      {"trigger": "isTouchEnabled", "contents": "isTouchEnabled()" },
      {"trigger": "isFlippedY", "contents": "isFlippedY()" },
      {"trigger": "drawDot", "contents": "drawDot(${1:cc.Point pos}, ${2:Number radius}, ${3:cc.Color4F color})" },
      {"trigger": "initWithAnimation", "contents": "initWithAnimation(${1:cc.Animation animation})" },
      {"trigger": "getStartSize", "contents": "getStartSize()" },
      {"trigger": "propertyNamed", "contents": "propertyNamed(${1:String propertyName})" },
      {"trigger": "setTouchEnabled", "contents": "setTouchEnabled(${1:Boolean enabled})" },
      {"trigger": "removeTextureForKey", "contents": "removeTextureForKey(${1:String textureKeyName})" },
      {"trigger": "initWithTilesetInfo", "contents": "initWithTilesetInfo(${1:cc.TMXTilesetInfo tilesetInfo}, ${2:cc.TMXLayerInfo layerInfo}, ${3:cc.TMXMapInfo mapInfo})" },
      {"trigger": "setOpenGLView", "contents": "setOpenGLView(${1:* openGLView})" },
      {"trigger": "setSearchResolutionsOrder", "contents": "setSearchResolutionsOrder(${1:Array searchResolutionsOrder})" },
      {"trigger": "fullPathFromRelativePath", "contents": "fullPathFromRelativePath(${1:String pszRelativePath})" },
      {"trigger": "setLayerAttribs", "contents": "setLayerAttribs(${1:Number Var})" },
      {"trigger": "getStartRadiusVar", "contents": "getStartRadiusVar()" },
      {"trigger": "setDirty", "contents": "setDirty(${1: value})" },
      {"trigger": "setDelayPerUnit", "contents": "setDelayPerUnit(${1:Number delayPerUnit})" },
      {"trigger": "setPosition", "contents": "setPosition(${1:cc.Point position})" },
      {"trigger": "stopActionByTag", "contents": "stopActionByTag(${1:Number tag})" },
      {"trigger": "isActive", "contents": "isActive()" },
      {"trigger": "ignoreAnchorPointForPosition", "contents": "ignoreAnchorPointForPosition(${1:Boolean newValue})" },
      {"trigger": "insertQuad", "contents": "insertQuad(${1:cc.V2F_C4B_T2F_Quad quad}, ${2:Number index})" },
      {"trigger": "setUniformLocationWith4fv", "contents": "setUniformLocationWith4fv(${1:WebGLUniformLocation location}, ${2:Float32Array floatArray}, ${3:Number numberOfArrays})" },
      {"trigger": "getSearchPaths", "contents": "getSearchPaths()" },
      {"trigger": "scheduleUpdateForTarget", "contents": "scheduleUpdateForTarget(${1:cc.Class target}, ${2:Number priority}, ${3:Boolean paused})" },
      {"trigger": "getPoints", "contents": "getPoints()" },
      {"trigger": "rebuildIndexInOrder", "contents": "rebuildIndexInOrder(${1:cc.Sprite pobParent}, ${2:Number index})" },
      {"trigger": "getTotalFrames", "contents": "getTotalFrames()" },
      {"trigger": "getDescendants", "contents": "getDescendants()" },
      {"trigger": "initWithSpriteFrame", "contents": "initWithSpriteFrame(${1:cc.SpriteFrame spriteFrame}, ${2:Number delayUnits}, ${3:object userInfo})" },
      {"trigger": "attachDelegateWithIME", "contents": "attachDelegateWithIME(${1:cc.IMEDelegate delegate})" },
      {"trigger": "getHtmlElementObj", "contents": "getHtmlElementObj()" },
      {"trigger": "getTileSet", "contents": "getTileSet()" },
      {"trigger": "setTouchPriority", "contents": "setTouchPriority(${1:Number priority})" },
      {"trigger": "setUniformLocationWith4f", "contents": "setUniformLocationWith4f(${1:WebGLUniformLocation location}, ${2:Number f1}, ${3:Number f2}, ${4:Number f3}, ${5:Number f4})" },
      {"trigger": "setEffectsVolume", "contents": "setEffectsVolume(${1:Number volume})" },
      {"trigger": "getCurrentString", "contents": "getCurrentString()" },
      {"trigger": "getTangentialAccelVar", "contents": "getTangentialAccelVar()" },
      {"trigger": "dispatchKeyboardMSG", "contents": "dispatchKeyboardMSG(${1:event e}, ${2:Boolean keydown})" },
      {"trigger": "addAction", "contents": "addAction(${1:cc.Action action}, ${2:cc.Node target}, ${3:Boolean paused})" },
      {"trigger": "onTouchEnded", "contents": "onTouchEnded(${1:cc.Touch touch}, ${2:event event})" },
      {"trigger": "setContentOffsetInDuration", "contents": "setContentOffsetInDuration(${1:cc.Point offset}, ${2:Number dt})" },
      {"trigger": "numberOfRunningActionsInTarget", "contents": "numberOfRunningActionsInTarget(${1:object target})" },
      {"trigger": "isAutoRemoveOnFinish", "contents": "isAutoRemoveOnFinish()" },
      {"trigger": "setQuads", "contents": "setQuads(${1:Array quads})" },
      {"trigger": "getTarget", "contents": "getTarget()" },
      {"trigger": "getTotalParticles", "contents": "getTotalParticles()" },
      {"trigger": "postNotification", "contents": "postNotification(${1:String name}, ${2:cc.Class object})" },
      {"trigger": "fillText", "contents": "fillText(${1:String strText}, ${2:Number x}, ${3:Number y})" },
      {"trigger": "getContentTranslateLeftTop", "contents": "getContentTranslateLeftTop()" },
      {"trigger": "findDelegate", "contents": "findDelegate(${1:cc.IMEDelegate delegate})" },
      {"trigger": "getStencil", "contents": "getStencil()" },
      {"trigger": "getPlaceHolder", "contents": "getPlaceHolder()" },
      {"trigger": "setStep", "contents": "setStep(${1:cc.Point step})" },
      {"trigger": "getTouchMode", "contents": "getTouchMode()" },
      {"trigger": "getIntegerForKey", "contents": "getIntegerForKey(${1:String key}, ${2:Number defaultValue})" },
      {"trigger": "setRotationIsDir", "contents": "setRotationIsDir(${1:boolean t})" },
      {"trigger": "runAction", "contents": "runAction(${1:cc.Action action})" },
      {"trigger": "setVertexZ", "contents": "setVertexZ(${1:Number Var})" },
      {"trigger": "cacheImage", "contents": "cacheImage(${1:String path}, ${2:Image|HTMLImageElement|HTMLCanvasElement texture})" },
      {"trigger": "setInputMode", "contents": "setInputMode(${1:Number inputMode})" },
      {"trigger": "setDisabledColor", "contents": "setDisabledColor(${1:cc.Color3B color})" },
      {"trigger": "setMapTileSize", "contents": "setMapTileSize(${1:cc.Size Var})" },
      {"trigger": "getReuseGrid", "contents": "getReuseGrid()" },
      {"trigger": "getTotalDelayUnits", "contents": "getTotalDelayUnits()" },
      {"trigger": "addPVRTCImage", "contents": "addPVRTCImage(${1:String filename})" },
      {"trigger": "getList", "contents": "getList(${1:String key})" },
      {"trigger": "setConcave", "contents": "setConcave(${1:Boolean concave})" },
      {"trigger": "initWithTexture", "contents": "initWithTexture(${1:cc.Texture2D|HTMLImageElement|HTMLCanvasElement texture}, ${2:Number capacity})" },
      {"trigger": "setInterval", "contents": "setInterval(${1:Number interval})" },
      {"trigger": "setTarget", "contents": "setTarget(${1:cc.Node target})" },
      {"trigger": "getOriginalTarget", "contents": "getOriginalTarget()" },
      {"trigger": "unloadPlist", "contents": "unloadPlist(${1:String filePath})" },
      {"trigger": "setUserData", "contents": "setUserData(${1:object Var})" },
      {"trigger": "getCenter", "contents": "getCenter()" },
      {"trigger": "isDirty", "contents": "isDirty()" },
      {"trigger": "onOtherMouseDragged", "contents": "onOtherMouseDragged(${1: event})" },
      {"trigger": "setDelegate", "contents": "setDelegate(${1:cc.KeyboardDelegate delegate})" },
      {"trigger": "getOrderOfArrival", "contents": "getOrderOfArrival()" },
      {"trigger": "copy", "contents": "copy()" },
      {"trigger": "setTouchMode", "contents": "setTouchMode(${1:Number mode})" },
      {"trigger": "setReturnType", "contents": "setReturnType(${1:Number returnType})" },
      {"trigger": "isRunning", "contents": "isRunning()" },
      {"trigger": "getParent", "contents": "getParent()" },
      {"trigger": "initWithVertexShaderByteArray", "contents": "initWithVertexShaderByteArray(${1:String vertShaderStr}, ${2:String fragShaderStr})" },
      {"trigger": "setFontColor", "contents": "setFontColor(${1:cc.Color3B color})" },
      {"trigger": "getPositionY", "contents": "getPositionY()" },
      {"trigger": "getPositionX", "contents": "getPositionX()" },
      {"trigger": "getAtlasName", "contents": "getAtlasName()" },
      {"trigger": "removeChildByTag", "contents": "removeChildByTag(${1:Number tag}, ${2:Boolean cleanup})" },
      {"trigger": "getByteArrayFromFile", "contents": "getByteArrayFromFile(${1:String fileName}, ${2:String mode}, ${3:Number size})" },
      {"trigger": "setMaxLength", "contents": "setMaxLength(${1:Number maxLength})" },
      {"trigger": "onRightMouseDragged", "contents": "onRightMouseDragged(${1: event})" },
      {"trigger": "getInnerAction", "contents": "getInnerAction()" },
      {"trigger": "setTextureWithRect", "contents": "setTextureWithRect(${1:cc.Texture2D texture}, ${2:cc.Rect rect})" },
      {"trigger": "getQuad", "contents": "getQuad()" },
      {"trigger": "isAbsolutePath", "contents": "isAbsolutePath(${1:String strPath})" },
      {"trigger": "getPixelFormat", "contents": "getPixelFormat()" },
      {"trigger": "setVisible", "contents": "setVisible(${1:Boolean x})" },
      {"trigger": "getPositionOffset", "contents": "getPositionOffset()" },
      {"trigger": "setUpXYZ", "contents": "setUpXYZ(${1:Number upX}, ${2:Number upY}, ${3:Number upZ})" },
      {"trigger": "enableShadow", "contents": "enableShadow(${1:cc.Size shadowOffset}, ${2:Number shadowOpacity}, ${3:Number shadowBlur}, ${4:Boolean [mustUpdateTexture=false]})" },
      {"trigger": "setObjectGroups", "contents": "setObjectGroups(${1:Array Var})" },
      {"trigger": "isTargetPaused", "contents": "isTargetPaused(${1:cc.Class target})" },
      {"trigger": "getTileFlagsAt", "contents": "getTileFlagsAt(${1:cc.Point pos})" },
      {"trigger": "getString", "contents": "getString()" },
      {"trigger": "drawColorBall", "contents": "drawColorBall(${1:CanvasRenderingContext2D ctx}, ${2:Number radius}, ${3:cc.Color3B|cc.Color4B|cc.Color4F color})" },
      {"trigger": "setEmissionRate", "contents": "setEmissionRate(${1:Number emissionRate})" },
      {"trigger": "setFlippedY", "contents": "setFlippedY(${1:Boolean flippedY})" },
      {"trigger": "setFlippedX", "contents": "setFlippedX(${1:Boolean flippedX})" },
      {"trigger": "setStartOpacity", "contents": "setStartOpacity(${1:Number o})" },
      {"trigger": "getID", "contents": "getID()" },
      {"trigger": "setTextDefinition", "contents": "setTextDefinition(${1:cc.FontDefinition theDefinition})" },
      {"trigger": "isSwallowsTouches", "contents": "isSwallowsTouches()" },
      {"trigger": "initWithFNTfile", "contents": "initWithFNTfile(${1:String FNTfile})" },
      {"trigger": "onMouseMoved", "contents": "onMouseMoved(${1: event})" },
      {"trigger": "getChildByTag", "contents": "getChildByTag(${1:Number aTag})" },
      {"trigger": "getRotationIsDir", "contents": "getRotationIsDir()" },
      {"trigger": "stopEffect", "contents": "stopEffect(${1:Number audioID})" },
      {"trigger": "setOrderOfArrival", "contents": "setOrderOfArrival(${1:Number Var})" },
      {"trigger": "getUniformLocationForName", "contents": "getUniformLocationForName(${1:String name})" },
      {"trigger": "getSubItems", "contents": "getSubItems()" },
      {"trigger": "updateCellAtIndex", "contents": "updateCellAtIndex(${1: idx})" },
      {"trigger": "getTotalQuads", "contents": "getTotalQuads()" },
      {"trigger": "setStartSizeVar", "contents": "setStartSizeVar(${1:Number startSizeVar})" },
      {"trigger": "runWithScene", "contents": "runWithScene(${1:cc.Scene scene})" },
      {"trigger": "setSelectedSpriteFrame", "contents": "setSelectedSpriteFrame(${1:cc.SpriteFrame frame})" },
      {"trigger": "removeCellAtIndex", "contents": "removeCellAtIndex(${1: idx})" },
      {"trigger": "getSprite", "contents": "getSprite()" },
      {"trigger": "addParticle", "contents": "addParticle()" },
      {"trigger": "isAutoDraw", "contents": "isAutoDraw()" },
      {"trigger": "touchesBegan", "contents": "touchesBegan(${1:Array touches}, ${2:event event})" },
      {"trigger": "initWithTextureFilename", "contents": "initWithTextureFilename(${1:string filename}, ${2:cc.Rect rect}, ${3:Boolean rotated}, ${4:cc.Point [offset=cc.p(0,0)]}, ${5:cc.Size [originalSize=rect.size]})" },
      {"trigger": "cellSizeForTable", "contents": "cellSizeForTable(${1:cc.TableView table})" },
      {"trigger": "getCharCount", "contents": "getCharCount()" },
      {"trigger": "initWithCallback", "contents": "initWithCallback(${1:function|String callback}, ${2:cc.Node target})" },
      {"trigger": "setSwallowsTouches", "contents": "setSwallowsTouches(${1:Boolean swallowsTouches})" },
      {"trigger": "setSearchPaths", "contents": "setSearchPaths(${1:Array searchPaths})" },
      {"trigger": "setSelectedImage", "contents": "setSelectedImage(${1:cc.Sprite selectedImage})" },
      {"trigger": "resumeTarget", "contents": "resumeTarget(${1:cc.Class target})" },
      {"trigger": "setViewName", "contents": "setViewName(${1:String viewName})" },
      {"trigger": "initWithPVRFile", "contents": "initWithPVRFile(${1:String file})" },
      {"trigger": "initWithFade", "contents": "initWithFade(${1:Number fade}, ${2:Number minSeg}, ${3:Number stroke}, ${4:Number color}, ${5:string|cc.Texture2D texture})" },
      {"trigger": "setVertexRect", "contents": "setVertexRect(${1:cc.Rect rect})" },
      {"trigger": "worldToNodeTransform", "contents": "worldToNodeTransform()" },
      {"trigger": "dispatchInsertText", "contents": "dispatchInsertText(${1:String text}, ${2:Number len})" },
      {"trigger": "setNextDeltaTimeZero", "contents": "setNextDeltaTimeZero(${1:Boolean nextDeltaTimeZero})" },
      {"trigger": "setMapSize", "contents": "setMapSize(${1:cc.Size Var})" },
      {"trigger": "setText", "contents": "setText(${1:string text})" },
      {"trigger": "drawCardinalSpline", "contents": "drawCardinalSpline(${1:Array config}, ${2:Number tension}, ${3:Number segments})" },
      {"trigger": "getTGAInfo", "contents": "getTGAInfo()" },
      {"trigger": "removeSuffixFromFile", "contents": "removeSuffixFromFile(${1:String path})" },
      {"trigger": "supportsPVRTC", "contents": "supportsPVRTC()" },
      {"trigger": "drawPoint", "contents": "drawPoint(${1:cc.Point point})" },
      {"trigger": "setTag", "contents": "setTag(${1:Number tag})" },
      {"trigger": "switchToAndReleaseMe", "contents": "switchToAndReleaseMe(${1:Number n})" },
      {"trigger": "getAlphaThreshold", "contents": "getAlphaThreshold()" },
      {"trigger": "onTouchesCancelled", "contents": "onTouchesCancelled(${1: touch}, ${2: event})" },
      {"trigger": "pushScene", "contents": "pushScene(${1:cc.Scene scene})" },
      {"trigger": "getShapeType", "contents": "getShapeType()" },
      {"trigger": "unscheduleCallbackForTarget", "contents": "unscheduleCallbackForTarget(${1:cc.Class target}, ${2:function callback_fn})" },
      {"trigger": "setLabel", "contents": "setLabel(${1:cc.Node label})" },
      {"trigger": "reorderBatch", "contents": "reorderBatch(${1:Boolean reorder})" },
      {"trigger": "getTMXFileName", "contents": "getTMXFileName()" },
      {"trigger": "getStartSizeVar", "contents": "getStartSizeVar()" },
      {"trigger": "getStringFromFile", "contents": "getStringFromFile(${1:String fileName})" },
      {"trigger": "initWithETCFile", "contents": "initWithETCFile(${1:String file})" },
      {"trigger": "touchesCancelled", "contents": "touchesCancelled(${1:Array touches}, ${2:event event})" },
      {"trigger": "isFormatSupported", "contents": "isFormatSupported(${1:String ext})" },
      {"trigger": "getSecondsPerFrame", "contents": "getSecondsPerFrame()" },
      {"trigger": "updateString", "contents": "updateString(${1:Boolean fromUpdate})" },
      {"trigger": "getChildren", "contents": "getChildren()" },
      {"trigger": "getLabel", "contents": "getLabel()" },
      {"trigger": "removeTexture", "contents": "removeTexture(${1:Image texture})" },
      {"trigger": "addImageAsync", "contents": "addImageAsync(${1:String path}, ${2:cc.Node target}, ${3:Function selector})" },
      {"trigger": "getDoubleForKey", "contents": "getDoubleForKey(${1:String key}, ${2:Number defaultValue})" },
      {"trigger": "moveQuadsFromIndex", "contents": "moveQuadsFromIndex(${1:Number oldIndex}, ${2:Number amount}, ${3:Number newIndex})" },
      {"trigger": "touches", "contents": "touches(${1:Array touches}, ${2:event event}, ${3:Number index})" },
      {"trigger": "rectForGID", "contents": "rectForGID(${1:Number gid})" },
      {"trigger": "isOpacityModifyRGB", "contents": "isOpacityModifyRGB()" },
      {"trigger": "copyWithZone", "contents": "copyWithZone(${1:cc.Animation pZone})" },
      {"trigger": "setRotatePerSecondVar", "contents": "setRotatePerSecondVar(${1: degrees})" },
      {"trigger": "isEnabled", "contents": "isEnabled()" },
      {"trigger": "getTexture", "contents": "getTexture()" },
      {"trigger": "getCenterXYZ", "contents": "getCenterXYZ(${1:Number centerX}, ${2:Number centerY}, ${3:Number centerZ})" },
      {"trigger": "setUniformLocationWith3f", "contents": "setUniformLocationWith3f(${1:WebGLUniformLocation location}, ${2:Number f1}, ${3:Number f2}, ${4:Number f3})" },
      {"trigger": "releaseResources", "contents": "releaseResources(${1: resources})" },
      {"trigger": "setMidpoint", "contents": "setMidpoint(${1:cc.Point mpoint})" },
      {"trigger": "getTextFileData", "contents": "getTextFileData(${1:String fileUrl})" },
      {"trigger": "insertSortedObject", "contents": "insertSortedObject(${1:object addObject})" },
      {"trigger": "setRotation", "contents": "setRotation(${1:Number newRotation})" },
      {"trigger": "setPlaceholderFontColor", "contents": "setPlaceholderFontColor(${1:cc.Color3B color})" },
      {"trigger": "getMidpoint", "contents": "getMidpoint()" },
      {"trigger": "getMaxTextureSize", "contents": "getMaxTextureSize()" },
      {"trigger": "isDone", "contents": "isDone()" },
      {"trigger": "setSpriteFrame", "contents": "setSpriteFrame(${1:cc.SpriteFrame spriteFrame})" },
      {"trigger": "startWithTarget", "contents": "startWithTarget(${1:cc.Node target})" },
      {"trigger": "setScaleY", "contents": "setScaleY(${1:Number y})" },
      {"trigger": "setScaleX", "contents": "setScaleX(${1:Number x})" },
      {"trigger": "getInterval", "contents": "getInterval()" },
      {"trigger": "getPriority", "contents": "getPriority()" },
      {"trigger": "setDesignResolutionSize", "contents": "setDesignResolutionSize(${1:Number width}, ${2:Number height}, ${3:Number resolutionPolicy})" },
      {"trigger": "getColor", "contents": "getColor()" },
      {"trigger": "getObjectGroups", "contents": "getObjectGroups()" },
      {"trigger": "preloadSound", "contents": "preloadSound(${1:String path})" },
      {"trigger": "getGravity", "contents": "getGravity()" },
      {"trigger": "originalVertex", "contents": "originalVertex(${1:cc.Point position})" },
      {"trigger": "getCharacterSet", "contents": "getCharacterSet()" },
      {"trigger": "isRotated", "contents": "isRotated()" },
      {"trigger": "initWithTwoActions", "contents": "initWithTwoActions(${1:cc.FiniteTimeAction actionOne}, ${2:cc.FiniteTimeAction actionTwo})" },
      {"trigger": "insertCellAtIndex", "contents": "insertCellAtIndex(${1: idx})" },
      {"trigger": "unloadEffect", "contents": "unloadEffect(${1:String path})" },
      {"trigger": "setTileProperties", "contents": "setTileProperties(${1:object tileProperties})" },
      {"trigger": "addAnimation", "contents": "addAnimation(${1:cc.Animation animation}, ${2:String name})" },
      {"trigger": "setEndOpacity", "contents": "setEndOpacity(${1:Number o})" },
      {"trigger": "tableCellUnhighlight", "contents": "tableCellUnhighlight(${1:cc.TableView table}, ${2:cc.TableViewCell cell})" },
      {"trigger": "isFlippedX", "contents": "isFlippedX()" },
      {"trigger": "convertToWorldSpace", "contents": "convertToWorldSpace(${1:cc.Point nodePoint})" },
      {"trigger": "initWithNormalImage", "contents": "initWithNormalImage(${1:string|null normalImage}, ${2:string|null selectedImage}, ${3:string|null disabledImage}, ${4:function|string|null callback}, ${5:cc.Node|null target})" },
      {"trigger": "insertQuads", "contents": "insertQuads(${1:Array quads}, ${2:Number index}, ${3:Number amount})" },
      {"trigger": "releaseData", "contents": "releaseData(${1:Array data})" },
      {"trigger": "setSkewX", "contents": "setSkewX(${1:Number x})" },
      {"trigger": "setSkewY", "contents": "setSkewY(${1:Number y})" },
      {"trigger": "requestFullScreen", "contents": "requestFullScreen(${1:Element element}, ${2:Function onFullScreenChange})" },
      {"trigger": "setShapeType", "contents": "setShapeType(${1:Number shapeType})" },
      {"trigger": "setTileSize", "contents": "setTileSize(${1:cc.Size Var})" },
      {"trigger": "setAmplitudeRate", "contents": "setAmplitudeRate(${1:Number amplitudeRate})" },
      {"trigger": "convertTouchToNodeSpace", "contents": "convertTouchToNodeSpace(${1:cc.Touch touch})" },
      {"trigger": "removeAllChildren", "contents": "removeAllChildren(${1:Boolean | null  cleanup})" },
      {"trigger": "setMusicVolume", "contents": "setMusicVolume(${1:Number volume})" },
      {"trigger": "getStringForKey", "contents": "getStringForKey(${1:String key}, ${2:String defaultValue})" },
      {"trigger": "setMapOrientation", "contents": "setMapOrientation(${1:Number Var})" },
      {"trigger": "getEndRadius", "contents": "getEndRadius()" },
      {"trigger": "getPixelsHigh", "contents": "getPixelsHigh()" },
      {"trigger": "initWithLayers", "contents": "initWithLayers(${1:Array args})" },
      {"trigger": "tableCellWillRecycle", "contents": "tableCellWillRecycle(${1: table}, ${2: cell})" },
      {"trigger": "checkForGLExtension", "contents": "checkForGLExtension(${1:String searchName})" },
      {"trigger": "setTotalParticles", "contents": "setTotalParticles(${1:Number tp})" },
      {"trigger": "getName", "contents": "getName(${1:String filePath})" },
      {"trigger": "setPlaceholderFontSize", "contents": "setPlaceholderFontSize(${1:Number fontSize})" },
      {"trigger": "setOriginalSize", "contents": "setOriginalSize(${1:cc.Size sizeInPixels})" },
      {"trigger": "initWithTMXFile", "contents": "initWithTMXFile(${1:String tmxFile}, ${2:String [resourcePath=]})" },
      {"trigger": "isSelected", "contents": "isSelected()" },
      {"trigger": "playMusic", "contents": "playMusic(${1:String path}, ${2:Boolean loop})" },
      {"trigger": "getUpXYZ", "contents": "getUpXYZ(${1:Number upX}, ${2:Number upY}, ${3:Number upZ})" },
      {"trigger": "drawSegment", "contents": "drawSegment(${1:cc.Point from}, ${2:cc.Point to}, ${3:Number radius}, ${4:cc.Color4F color})" },
      {"trigger": "setUniformLocationWith3i", "contents": "setUniformLocationWith3i(${1:WebGLUniformLocation location}, ${2:Number i1}, ${3:Number i2}, ${4:Number i3})" },
      {"trigger": "setObjects", "contents": "setObjects(${1:object objects})" },
      {"trigger": "propertiesForGID", "contents": "propertiesForGID(${1:Number GID})" },
      {"trigger": "findHandler", "contents": "findHandler(${1:Array||cc.TouchDelegate array}, ${2:cc.TouchDelegate delegate})" },
      {"trigger": "getProperties", "contents": "getProperties()" },
      {"trigger": "onMouseExited", "contents": "onMouseExited(${1: theEvent})" },
      {"trigger": "setSpriteBatchNode", "contents": "setSpriteBatchNode(${1:cc.SpriteBatchNode spriteBatchNode})" },
      {"trigger": "tableCellSizeForIndex", "contents": "tableCellSizeForIndex(${1:cc.TableView table}, ${2:Number idx})" },
      {"trigger": "setUniformLocationWith4iv", "contents": "setUniformLocationWith4iv(${1:WebGLUniformLocation location}, ${2:Int32Array intArray}, ${3:Number numberOfArrays})" },
      {"trigger": "preloadEffect", "contents": "preloadEffect(${1:String path})" },
      {"trigger": "setAtlasIndex", "contents": "setAtlasIndex(${1:Number atlasIndex})" },
      {"trigger": "getGrid", "contents": "getGrid()" },
      {"trigger": "drawCircle", "contents": "drawCircle(${1:cc.Point center}, ${2:Number radius}, ${3:Number angle}, ${4:Number segments}, ${5:Boolean drawLineToCenter})" },
      {"trigger": "getDuration", "contents": "getDuration()" },
      {"trigger": "setPlaceHolder", "contents": "setPlaceHolder(${1:string text})" },
      {"trigger": "getExt", "contents": "getExt(${1:String filePath})" },
      {"trigger": "setAlphaThreshold", "contents": "setAlphaThreshold(${1:Number alphaThreshold})" },
      {"trigger": "getEndSpin", "contents": "getEndSpin()" },
      {"trigger": "getDelegate", "contents": "getDelegate()" },
      {"trigger": "setRadialAccelVar", "contents": "setRadialAccelVar(${1:Number radialAccelVar})" },
      {"trigger": "reverse", "contents": "reverse()" },
      {"trigger": "getObjectGroup", "contents": "getObjectGroup(${1:String groupName})" },
      {"trigger": "setInverted", "contents": "setInverted(${1:Boolean inverted})" },
      {"trigger": "setSpeed", "contents": "setSpeed(${1:Number speed})" },
      {"trigger": "getTileProperties", "contents": "getTileProperties()" },
      {"trigger": "getStartSpin", "contents": "getStartSpin()" },
      {"trigger": "setUserInfo", "contents": "setUserInfo(${1:object userInfo})" },
      {"trigger": "beginWithClear", "contents": "beginWithClear(${1:Number r}, ${2:Number g}, ${3:Number b}, ${4:Number a}, ${5:Number [depthValue=]}, ${6:Number [stencilValue=]})" },
      {"trigger": "drawCubicBezier", "contents": "drawCubicBezier(${1:cc.Point origin}, ${2:cc.Point control1}, ${3:cc.Point control2}, ${4:cc.Point destination}, ${5:Number segments})" },
      {"trigger": "getChildrenCount", "contents": "getChildrenCount()" },
      {"trigger": "pauseAllTargetsWithMinPriority", "contents": "pauseAllTargetsWithMinPriority(${1: minPriority})" },
      {"trigger": "getShaderProgram", "contents": "getShaderProgram()" },
      {"trigger": "getFontSize", "contents": "getFontSize()" },
      {"trigger": "setBarChangeRate", "contents": "setBarChangeRate(${1:cc.Point barChangeRate})" },
      {"trigger": "initParticle", "contents": "initParticle(${1:cc.Particle particle})" },
      {"trigger": "getDisabledColor", "contents": "getDisabledColor()" },
      {"trigger": "isMusicPlaying", "contents": "isMusicPlaying()" },
      {"trigger": "getEffectsVolume", "contents": "getEffectsVolume()" },
      {"trigger": "fragmentShaderLog", "contents": "fragmentShaderLog()" },
      {"trigger": "getTangentialAccel", "contents": "getTangentialAccel()" },
      {"trigger": "handleTouchesBegin", "contents": "handleTouchesBegin(${1:Number num}, ${2:Number ids}, ${3:Number xs}, ${4:Number ys})" },
      {"trigger": "getOriginalSizeInPixels", "contents": "getOriginalSizeInPixels()" },
      {"trigger": "getRotation", "contents": "getRotation()" },
      {"trigger": "removeDelegate", "contents": "removeDelegate(${1:cc.KeyboardDelegate delegate})" },
      {"trigger": "updatePosition", "contents": "updatePosition(${1:cc.Point newPos})" },
      {"trigger": "setLife", "contents": "setLife(${1:Number life})" },
      {"trigger": "setAngleVar", "contents": "setAngleVar(${1: angleVar})" },
      {"trigger": "setObject", "contents": "setObject(${1:string key}, ${2:Object value})" },
      {"trigger": "isInverted", "contents": "isInverted()" },
      {"trigger": "getZOrder", "contents": "getZOrder()" },
      {"trigger": "atlasIndexForChild", "contents": "atlasIndexForChild(${1:cc.Sprite sprite}, ${2:Number nZ})" },
      {"trigger": "onRightMouseUp", "contents": "onRightMouseUp(${1: event})" },
      {"trigger": "forceAddDelegate", "contents": "forceAddDelegate(${1:cc.KeyboardDelegate delegate})" },
      {"trigger": "getStep", "contents": "getStep()" },
      {"trigger": "setHandlerPriority", "contents": "setHandlerPriority(${1:Number newPriority})" },
      {"trigger": "editBoxReturn", "contents": "editBoxReturn(${1:cc.EditBox sender})" },
      {"trigger": "getChild", "contents": "getChild()" },
      {"trigger": "setParentGID", "contents": "setParentGID(${1:Number Var})" },
      {"trigger": "getKeyByTexture", "contents": "getKeyByTexture(${1:Image texture})" },
      {"trigger": "setRotationX", "contents": "setRotationX(${1:Number rotationX})" },
      {"trigger": "setRotationY", "contents": "setRotationY(${1: rotationY})" },
      {"trigger": "setTextureAtlas", "contents": "setTextureAtlas(${1:cc.TextureAtlas value})" },
      {"trigger": "getBool", "contents": "getBool(${1:string key}, ${2:boolean|null [default_value=false]})" },
      {"trigger": "removeAllObservers", "contents": "removeAllObservers(${1:cc.Class target})" },
      {"trigger": "onTouchCancelled", "contents": "onTouchCancelled(${1:cc.Touch touch}, ${2:event event})" },
      {"trigger": "getScheduler", "contents": "getScheduler()" },
      {"trigger": "willPlayMusic", "contents": "willPlayMusic()" },
      {"trigger": "actionWithSize", "contents": "actionWithSize(${1:cc.Size size})" },
      {"trigger": "drawNumberOfQuads", "contents": "drawNumberOfQuads(${1:Number n}, ${2:Number start})" },
      {"trigger": "setCurrentString", "contents": "setCurrentString(${1:String currentString})" },
      {"trigger": "addSearchPath", "contents": "addSearchPath(${1:String path})" },
      {"trigger": "setContentSize", "contents": "setContentSize(${1:cc.Size size})" },
      {"trigger": "setActionManager", "contents": "setActionManager(${1:cc.ActionManager actionManager})" },
      {"trigger": "setColor", "contents": "setColor(${1:cc.Color3B color3})" },
      {"trigger": "setGridSize", "contents": "setGridSize(${1:cc.Size gridSize})" },
      {"trigger": "getOffset", "contents": "getOffset()" },
      {"trigger": "setSelectedIndex", "contents": "setSelectedIndex(${1:Number SelectedIndex})" },
      {"trigger": "setDisabledImage", "contents": "setDisabledImage(${1:cc.Sprite disabledImage})" },
      {"trigger": "listenToBackground", "contents": "listenToBackground(${1:cc.Class obj})" },
      {"trigger": "getEndSize", "contents": "getEndSize()" },
      {"trigger": "getVisibleSize", "contents": "getVisibleSize()" },
      {"trigger": "onTextFieldAttachWithIME", "contents": "onTextFieldAttachWithIME(${1:cc.TextFieldTTF sender})" },
      {"trigger": "initWithAnimationFrames", "contents": "initWithAnimationFrames(${1:Array arrayOfAnimationFrames}, ${2:Number delayPerUnit}, ${3:Number loops})" },
      {"trigger": "pauseEffect", "contents": "pauseEffect(${1:Number audioID})" },
      {"trigger": "programLog", "contents": "programLog()" },
      {"trigger": "getQuads", "contents": "getQuads()" },
      {"trigger": "dispatchKeyboardDidHide", "contents": "dispatchKeyboardDidHide(${1:cc.IMEKeyboardNotificationInfo info})" },
      {"trigger": "drawPoly", "contents": "drawPoly(${1:Array vertices}, ${2:Number numOfVertices}, ${3:Boolean closePolygon}, ${4:Boolean fill})" },
      {"trigger": "getLife", "contents": "getLife()" },
      {"trigger": "setTMXFileName", "contents": "setTMXFileName(${1:String fileName})" },
      {"trigger": "testFunc", "contents": "testFunc(${1:cc.Size pos}, ${2:Number time})" },
      {"trigger": "getRatio", "contents": "getRatio()" },
      {"trigger": "setDimensions", "contents": "setDimensions(${1:cc.Size dim})" },
      {"trigger": "getPositionAt", "contents": "getPositionAt(${1:cc.Point pos})" },
      {"trigger": "getEndColorVar", "contents": "getEndColorVar()" },
      {"trigger": "getVertexZ", "contents": "getVertexZ()" },
      {"trigger": "setAccelerometerInterval", "contents": "setAccelerometerInterval(${1:Number interval})" },
      {"trigger": "setAtlasName", "contents": "setAtlasName(${1:String atlasName})" },
      {"trigger": "hasPremultipliedAlpha", "contents": "hasPremultipliedAlpha()" },
      {"trigger": "setTile", "contents": "setTile(${1:cc.Point position}, ${2:cc.Quad3 coords})" },
      {"trigger": "unscheduleAllCallbacksWithMinPriority", "contents": "unscheduleAllCallbacksWithMinPriority(${1:Number minPriority})" },
      {"trigger": "getRadialAccel", "contents": "getRadialAccel()" },
      {"trigger": "removeActionByTag", "contents": "removeActionByTag(${1:Number tag}, ${2:object target})" },
      {"trigger": "getFrameSize", "contents": "getFrameSize()" },
      {"trigger": "getHorizontalAlignment", "contents": "getHorizontalAlignment()" },
      {"trigger": "getScaleY", "contents": "getScaleY()" },
      {"trigger": "getScaleX", "contents": "getScaleX()" },
      {"trigger": "onTouchesBegan", "contents": "onTouchesBegan(${1:cc.Touch touch}, ${2:event event})" },
      {"trigger": "setDepthTest", "contents": "setDepthTest(${1:Boolean on})" },
      {"trigger": "convertToUI", "contents": "convertToUI(${1:cc.Point glPoint})" },
      {"trigger": "initWithSpriteFrameName", "contents": "initWithSpriteFrameName(${1:String spriteFrameName})" },
      {"trigger": "onMouseUp", "contents": "onMouseUp(${1: event})" },
      {"trigger": "changeWidth", "contents": "changeWidth(${1:Number w})" },
      {"trigger": "setProperties", "contents": "setProperties(${1:Array Var})" },
      {"trigger": "getClearDepth", "contents": "getClearDepth()" },
      {"trigger": "onRightMouseDown", "contents": "onRightMouseDown(${1: event})" },
      {"trigger": "getParticleCount", "contents": "getParticleCount()" },
      {"trigger": "getTileAt", "contents": "getTileAt(${1:cc.Point position})" },
      {"trigger": "setStartColorVar", "contents": "setStartColorVar(${1:cc.Color4F startColorVar})" },
      {"trigger": "getCString", "contents": "getCString(${1:String key}, ${2:String [default_value=null]})" },
      {"trigger": "getSpriteBatchNode", "contents": "getSpriteBatchNode()" },
      {"trigger": "getOrientation", "contents": "getOrientation()" },
      {"trigger": "convertToGL", "contents": "convertToGL(${1:cc.Point uiPoint})" },
      {"trigger": "action", "contents": "action()" },
      {"trigger": "setPlaceholderFont", "contents": "setPlaceholderFont(${1:String fontName}, ${2:Number fontSize})" },
      {"trigger": "removeAllActionsFromTarget", "contents": "removeAllActionsFromTarget(${1:object target}, ${2:boolean forceDelete})" },
      {"trigger": "getDimensions", "contents": "getDimensions()" },
      {"trigger": "handleTouchesCancel", "contents": "handleTouchesCancel(${1:Number num}, ${2:Number ids}, ${3:Number xs}, ${4:Number ys})" },
      {"trigger": "setPoints", "contents": "setPoints(${1:Array points})" },
      {"trigger": "onMouseEntered", "contents": "onMouseEntered(${1: theEvent})" },
      {"trigger": "initWithTileFile", "contents": "initWithTileFile(${1:String tile}, ${2:Number tileWidth}, ${3:Number tileHeight}, ${4:Number itemsToRender})" },
      {"trigger": "setBlendFunc", "contents": "setBlendFunc(${1:Number | cc.BlendFunc src}, ${2:Number dst})" },
      {"trigger": "setLayerSize", "contents": "setLayerSize(${1:cc.Size Var})" },
      {"trigger": "setPopupNotify", "contents": "setPopupNotify(${1:Boolean notify})" },
      {"trigger": "getRestoreOriginalFrame", "contents": "getRestoreOriginalFrame()" },
      {"trigger": "tableCellAtIndex", "contents": "tableCellAtIndex(${1:cc.TableView table}, ${2: idx})" },
      {"trigger": "getWritablePath", "contents": "getWritablePath()" },
      {"trigger": "insertQuadFromIndex", "contents": "insertQuadFromIndex(${1:Number fromIndex}, ${2:Number newIndex})" },
      {"trigger": "detachDelegateWithIME", "contents": "detachDelegateWithIME(${1:cc.IMEDelegate delegate})" },
      {"trigger": "onTouchesMoved", "contents": "onTouchesMoved(${1:cc.Touch touch}, ${2:event event})" },
      {"trigger": "stopAction", "contents": "stopAction(${1:cc.Action action})" },
      {"trigger": "getActionManager", "contents": "getActionManager()" },
      {"trigger": "addChild", "contents": "addChild(${1:cc.Node child}, ${2:Number [zOrder=]}, ${3:Number [tag=]})" },
      {"trigger": "removeComponent", "contents": "removeComponent(${1:String name})" },
      {"trigger": "performSelector", "contents": "performSelector(${1:cc.Class obj})" },
      {"trigger": "isDispatchEvents", "contents": "isDispatchEvents()" },
      {"trigger": "setAnchorPoint", "contents": "setAnchorPoint(${1:object point})" },
      {"trigger": "drawLine", "contents": "drawLine(${1:cc.Point origin}, ${2:cc.Point destination})" },
      {"trigger": "canAttachWithIME", "contents": "canAttachWithIME()" },
      {"trigger": "getContentScaleFactor", "contents": "getContentScaleFactor()" },
      {"trigger": "setTouchDelegate", "contents": "setTouchDelegate(${1:cc.TouchDispatcher delegate})" },
      {"trigger": "getAmplitudeRate", "contents": "getAmplitudeRate()" },
      {"trigger": "setStoringCharacters", "contents": "setStoringCharacters(${1:Boolean Var})" },
      {"trigger": "initWithResources", "contents": "initWithResources(${1:Array resources}, ${2:Function|String selector}, ${3:Object target})" },
      {"trigger": "getId", "contents": "getId()" },
      {"trigger": "didFinishLaunchingWithOptions", "contents": "didFinishLaunchingWithOptions()" },
      {"trigger": "setReuseGrid", "contents": "setReuseGrid(${1: reuseGrid})" },
      {"trigger": "addAnimations", "contents": "addAnimations(${1:String plist})" },
      {"trigger": "getStartColor", "contents": "getStartColor()" },
      {"trigger": "getPositionType", "contents": "getPositionType()" },
      {"trigger": "addSpriteFrameWithTexture", "contents": "addSpriteFrameWithTexture(${1:cc.Texture2D texture}, ${2:cc.Rect rect})" },
      {"trigger": "isIgnoreAnchorPointForPosition", "contents": "isIgnoreAnchorPointForPosition()" },
      {"trigger": "removeObserver", "contents": "removeObserver(${1:cc.Class target}, ${2:String name})" },
      {"trigger": "getPercentage", "contents": "getPercentage()" },
      {"trigger": "setDrawColor4F", "contents": "setDrawColor4F(${1:Number r}, ${2:Number g}, ${3:Number b}, ${4:Number a})" },
      {"trigger": "getRate", "contents": "getRate()" },
      {"trigger": "setDrawColor4B", "contents": "setDrawColor4B(${1:Number r}, ${2:Number g}, ${3:Number b}, ${4:Number a})" },
      {"trigger": "getRenderContext", "contents": "getRenderContext()" },
      {"trigger": "getEndSizeVar", "contents": "getEndSizeVar()" },
      {"trigger": "setFntFile", "contents": "setFntFile(${1:String fntFile})" },
      {"trigger": "setLayerName", "contents": "setLayerName(${1:String layerName})" },
      {"trigger": "onTextFieldInsertText", "contents": "onTextFieldInsertText(${1:cc.TextFieldTTF sender}, ${2:String text}, ${3:Number len})" },
      {"trigger": "setLineBreakWithoutSpace", "contents": "setLineBreakWithoutSpace(${1:Boolean })" },
      {"trigger": "getDisabledImage", "contents": "getDisabledImage()" },
      {"trigger": "getDelta", "contents": "getDelta(${1:cc.Size pos})" },
      {"trigger": "getLocation", "contents": "getLocation()" },
      {"trigger": "sphericalRadius", "contents": "sphericalRadius()" },
      {"trigger": "createDictionaryWithContentsOfFile", "contents": "createDictionaryWithContentsOfFile(${1: filename})" },
      {"trigger": "scheduleUpdateWithPriority", "contents": "scheduleUpdateWithPriority(${1:Number priority})" },
      {"trigger": "getDelayUnits", "contents": "getDelayUnits()" },
      {"trigger": "setParentElement", "contents": "setParentElement(${1:Number Var})" },
      {"trigger": "setCallback", "contents": "setCallback(${1:function|String callback}, ${2:cc.Node target})" },
      {"trigger": "setLoops", "contents": "setLoops(${1:Number value})" },
      {"trigger": "getStartColorVar", "contents": "getStartColorVar()" },
      {"trigger": "setStencil", "contents": "setStencil(${1:cc.Node stencil})" },
      {"trigger": "setLayers", "contents": "setLayers(${1:cc.TMXLayerInfo Var})" },
      {"trigger": "getTileSize", "contents": "getTileSize()" },
      {"trigger": "setEndRadius", "contents": "setEndRadius(${1:Number endRadius})" },
      {"trigger": "onTextFieldDetachWithIME", "contents": "onTextFieldDetachWithIME(${1:cc.TextFieldTTF sender})" },
      {"trigger": "getAngle", "contents": "getAngle()" },
      {"trigger": "isDisplayStats", "contents": "isDisplayStats()" },
      {"trigger": "initWithDelegate", "contents": "initWithDelegate(${1:cc.KeyboardDelegate delegate})" },
      {"trigger": "onOtherMouseDown", "contents": "onOtherMouseDown(${1: event})" },
      {"trigger": "setNormalImage", "contents": "setNormalImage(${1:cc.Sprite normalImage})" },
      {"trigger": "setCString", "contents": "setCString(${1: label})" },
      {"trigger": "setParallaxArray", "contents": "setParallaxArray(${1:Array value})" },
      {"trigger": "setRect", "contents": "setRect(${1:cc.Rect rect})" },
      {"trigger": "removeChild", "contents": "removeChild(${1:cc.Node child}, ${2:Boolean|null [cleanup=null]})" },
      {"trigger": "setEndColor", "contents": "setEndColor(${1:cc.Color3B color})" },
      {"trigger": "editBoxTextChanged", "contents": "editBoxTextChanged(${1:cc.EditBox sender}, ${2:String text})" },
      {"trigger": "addLayer", "contents": "addLayer(${1:cc.Layer layer})" },
      {"trigger": "getSearchResolutionsOrder", "contents": "getSearchResolutionsOrder()" },
      {"trigger": "initWithTotalParticles", "contents": "initWithTotalParticles(${1:Number numberOfParticles})" },
      {"trigger": "setInnerAction", "contents": "setInnerAction(${1:cc.ActionInterval action})" },
      {"trigger": "getOpacity", "contents": "getOpacity()" },
      {"trigger": "fontName", "contents": "fontName()" },
      {"trigger": "fontSize", "contents": "fontSize()" },
      {"trigger": "setRatio", "contents": "setRatio(${1: {cc.Point}})" },
      {"trigger": "objectNamed", "contents": "objectNamed(${1:String objectName})" },
      {"trigger": "parseXMLString", "contents": "parseXMLString(${1:String xmlString})" },
      {"trigger": "getSpeedVar", "contents": "getSpeedVar()" },
      {"trigger": "setTGAInfo", "contents": "setTGAInfo(${1: {cc.ImageTGA}})" },
      {"trigger": "getStoringCharacters", "contents": "getStoringCharacters()" },
      {"trigger": "setPlaceholderFontName", "contents": "setPlaceholderFontName(${1:String fontName})" },
      {"trigger": "initWithCCPoint", "contents": "initWithCCPoint(${1: {cc.Point}}, ${2: {cc.Point}})" },
      {"trigger": "forceRemoveDelegate", "contents": "forceRemoveDelegate(${1:cc.KeyboardDelegate delegate})" },
      {"trigger": "supportsBGRA8888", "contents": "supportsBGRA8888()" },
      {"trigger": "setPointSize", "contents": "setPointSize(${1:Number pointSize})" },
      {"trigger": "isOpenGLReady", "contents": "isOpenGLReady()" },
      {"trigger": "getOffsetPosition", "contents": "getOffsetPosition()" },
      {"trigger": "initWithData", "contents": "initWithData(${1:Array data}, ${2:Number pixelFormat}, ${3:Number pixelsWide}, ${4:Number pixelsHigh}, ${5:cc.Size contentSize})" },
      {"trigger": "dictionaryWithContentsOfFile", "contents": "dictionaryWithContentsOfFile(${1: fileName})" },
      {"trigger": "setSprite", "contents": "setSprite(${1:cc.Sprite sprite})" },
      {"trigger": "setDispatchEvents", "contents": "setDispatchEvents(${1:Boolean dispatchEvents})" },
      {"trigger": "setUniformLocationWith4i", "contents": "setUniformLocationWith4i(${1:WebGLUniformLocation location}, ${2:Number i1}, ${3:Number i2}, ${4:Number i3}, ${5:Number i4})" },
      {"trigger": "changeHeight", "contents": "changeHeight(${1:Number h})" },
      {"trigger": "getProgram", "contents": "getProgram()" },
      {"trigger": "getCapacity", "contents": "getCapacity()" },
      {"trigger": "drawCatmullRom", "contents": "drawCatmullRom(${1:Array points}, ${2:Number segments})" },
      {"trigger": "getAtlasIndex", "contents": "getAtlasIndex()" },
      {"trigger": "enableStroke", "contents": "enableStroke(${1:cc.Color3B strokeColor}, ${2:Number strokeSize}, ${3:Boolean [mustUpdateTexture=false]})" },
      {"trigger": "setRestoreOriginalFrame", "contents": "setRestoreOriginalFrame(${1:Boolean restOrigFrame})" },
      {"trigger": "setTexParameters", "contents": "setTexParameters(${1: texParams})" },
      {"trigger": "setDisabledSpriteFrame", "contents": "setDisabledSpriteFrame(${1:cc.SpriteFrame frame})" },
      {"trigger": "dispatchKeyboardWillShow", "contents": "dispatchKeyboardWillShow(${1:cc.IMEKeyboardNotificationInfo info})" },
      {"trigger": "*initializestheactionwiththestd:", "contents": "*initializestheactionwiththestd:(${1:function func})" },
      {"trigger": "getProjection", "contents": "getProjection()" },
      {"trigger": "schedule", "contents": "schedule(${1:function callback_fn}, ${2:Number interval}, ${3:Number repeat}, ${4:Number delay})" },
      {"trigger": "setColorSpaceHolder", "contents": "setColorSpaceHolder(${1:cc.Color3B value})" },
      {"trigger": "isNextDeltaTimeZero", "contents": "isNextDeltaTimeZero()" },
      {"trigger": "removeAllChildrenWithCleanup", "contents": "removeAllChildrenWithCleanup(${1:Boolean | null  cleanup})" },
      {"trigger": "editBoxEditingDidEnd", "contents": "editBoxEditingDidEnd(${1:cc.EditBox sender})" },
      {"trigger": "setVerticalAlignment", "contents": "setVerticalAlignment(${1:cc.VERTICAL_TEXT_ALIGNMENT_TOP|cc.VERTICAL_TEXT_ALIGNMENT_CENTER|cc.VERTICAL_TEXT_ALIGNMENT_BOTTOM verticalAlignment})" },
      {"trigger": "step", "contents": "step(${1:Number dt})" },
      {"trigger": "setGroupName", "contents": "setGroupName(${1:String groupName})" },
      {"trigger": "removeFromParentAndCleanup", "contents": "removeFromParentAndCleanup(${1:Boolean cleanup})" },
      {"trigger": "setSearchPath", "contents": "setSearchPath(${1:Array searchPaths})" },
      {"trigger": "getScissorRect", "contents": "getScissorRect()" },
      {"trigger": "getMapOrientation", "contents": "getMapOrientation()" },
      {"trigger": "setGLServerState", "contents": "setGLServerState(${1:Number state})" },
      {"trigger": "drawSolidPoly", "contents": "drawSolidPoly(${1:Array poli}, ${2:Number numberOfPoints}, ${3:cc.Color4F color})" },
      {"trigger": "unscheduleAllCallbacksForTarget", "contents": "unscheduleAllCallbacksForTarget(${1:cc.Class target})" },
      {"trigger": "setPositionY", "contents": "setPositionY(${1:Number y})" },
      {"trigger": "setPositionX", "contents": "setPositionX(${1:Number x})" },
      {"trigger": "setEyeXYZ", "contents": "setEyeXYZ(${1:Number eyeX}, ${2:Number eyeY}, ${3:Number eyeZ})" },
      {"trigger": "setStartSize", "contents": "setStartSize(${1:Number startSize})" },
      {"trigger": "getAnchorPoint", "contents": "getAnchorPoint()" },
      {"trigger": "setTileSet", "contents": "setTileSet(${1:cc.TMXTilesetInfo Var})" },
      {"trigger": "getNumberOfRunningActions", "contents": "getNumberOfRunningActions()" },
      {"trigger": "getClearFlags", "contents": "getClearFlags()" },
      {"trigger": "isVisible", "contents": "isVisible()" },
      {"trigger": "initWithDictionary", "contents": "initWithDictionary(${1:object dictionary}, ${2:String dirname})" },
      {"trigger": "setAlignment", "contents": "setAlignment(${1:Number alignment})" },
      {"trigger": "addObserver", "contents": "addObserver(${1:cc.Class target}, ${2:String selector}, ${3:String name}, ${4:cc.Class obj})" },
      {"trigger": "addSpriteFrames", "contents": "addSpriteFrames(${1:String filePath}, ${2:HTMLImageElement|cc.Texture2D|string texture})" },
      {"trigger": "getOffsetInPixels", "contents": "getOffsetInPixels()" },
      {"trigger": "getContentText", "contents": "getContentText()" },
      {"trigger": "unscheduleUpdateForTarget", "contents": "unscheduleUpdateForTarget(${1:cc.Class target})" },
      {"trigger": "addComponent", "contents": "addComponent(${1:cc.Component component})" },
      {"trigger": "fullPathForFilename", "contents": "fullPathForFilename(${1:String filename})" },
      {"trigger": "initWithFlipX", "contents": "initWithFlipX(${1:Boolean x})" },
      {"trigger": "initWithFlipY", "contents": "initWithFlipY(${1:Boolean Y})" },
      {"trigger": "removeSpriteFrameByName", "contents": "removeSpriteFrameByName(${1:String name})" },
      {"trigger": "initWithImage", "contents": "initWithImage(${1: uiImage})" },
      {"trigger": "setShaderProgram", "contents": "setShaderProgram(${1:cc.GLProgram newShaderProgram})" },
      {"trigger": "getMaxModelviewStackDepth", "contents": "getMaxModelviewStackDepth()" },
      {"trigger": "getWinSizeInPixels", "contents": "getWinSizeInPixels()" },
      {"trigger": "setTexture", "contents": "setTexture(${1:cc.Texture2D texture})" },
      {"trigger": "getEnabledSelectors", "contents": "getEnabledSelectors()" },
      {"trigger": "dispatchKeyboardWillHide", "contents": "dispatchKeyboardWillHide(${1:cc.IMEKeyboardNotificationInfo info})" },
      {"trigger": "getAmplitude", "contents": "getAmplitude()" },
      {"trigger": "setScissorInPoints", "contents": "setScissorInPoints(${1:Number x}, ${2:Number y}, ${3:Number w}, ${4:Number h})" },
      {"trigger": "setWidth", "contents": "setWidth(${1:Number width})" },
      {"trigger": "loadConfigFile", "contents": "loadConfigFile(${1:string filename})" },
      {"trigger": "getWinSize", "contents": "getWinSize()" },
      {"trigger": "disableParticle", "contents": "disableParticle(${1:Number particleIndex})" },
      {"trigger": "getVisibleOrigin", "contents": "getVisibleOrigin()" },
      {"trigger": "getBoolForKey", "contents": "getBoolForKey(${1:String key}, ${2:Boolean defaultValue})" },
      {"trigger": "setContentOffset", "contents": "setContentOffset(${1:cc.Point offset}, ${2:Number [animated=]})" },
      {"trigger": "setUniformLocationWith2iv", "contents": "setUniformLocationWith2iv(${1:WebGLUniformLocation location}, ${2:Int32Array intArray}, ${3:Number numberOfArrays})" },
      {"trigger": "setEndSizeVar", "contents": "setEndSizeVar(${1:Number endSizeVar})" },
      {"trigger": "getEndOpacity", "contents": "getEndOpacity()" },
      {"trigger": "setTileGID", "contents": "setTileGID(${1:Number gid}, ${2:cc.Point pos}, ${3:Number flags})" },
      {"trigger": "getLayerOrientation", "contents": "getLayerOrientation()" },
      {"trigger": "setDisplayFrame", "contents": "setDisplayFrame(${1:cc.SpriteFrame spriteFrame})" },
      {"trigger": "getRunningScene", "contents": "getRunningScene()" },
      {"trigger": "editBoxEditingDidBegin", "contents": "editBoxEditingDidBegin(${1:cc.EditBox sender})" },
      {"trigger": "removeTileAt", "contents": "removeTileAt(${1:cc.Point pos})" },
      {"trigger": "setBatchNode", "contents": "setBatchNode(${1:cc.ParticleBatchNode batchNode})" },
      {"trigger": "getActionByTag", "contents": "getActionByTag(${1:Number tag}, ${2:object target})" },
      {"trigger": "setContentTranslateLeftTop", "contents": "setContentTranslateLeftTop(${1:Number offsetLeft}, ${2:Number offsetTop})" },
      {"trigger": "saveToFile", "contents": "saveToFile(${1:Number filePath}, ${2:Number format})" },
      {"trigger": "getSkewX", "contents": "getSkewX()" },
      {"trigger": "initWithDuration", "contents": "initWithDuration(${1:Number t}, ${2:Number radius}, ${3:Number deltaRadius}, ${4:Number angleZ}, ${5:Number deltaAngleZ}, ${6:Number angleX}, ${7:Number deltaAngleX})" },
      {"trigger": "preloadPlist", "contents": "preloadPlist(${1:String filePath})" },
      {"trigger": "setActive", "contents": "setActive(${1:Number active})" },
      {"trigger": "isCompressedInterpolation", "contents": "isCompressedInterpolation()" },
      {"trigger": "setNotificationNode", "contents": "setNotificationNode(${1:cc.Node node})" },
      {"trigger": "initWithSizeAndBackgroundSprite", "contents": "initWithSizeAndBackgroundSprite(${1:cc.Size size}, ${2:cc.Color3B | cc.Scale9Sprite normal9SpriteBg})" },
      {"trigger": "getAngleVar", "contents": "getAngleVar()" },
      {"trigger": "setFastMode", "contents": "setFastMode(${1:Boolean fastMode})" },
      {"trigger": "getVerticalAlignment", "contents": "getVerticalAlignment()" },
      {"trigger": "setBoolForKey", "contents": "setBoolForKey(${1:String key}, ${2:Boolean value})" },
      {"trigger": "tableCellTouched", "contents": "tableCellTouched(${1:cc.TableView table}, ${2:cc.TableViewCell cell})" },
      {"trigger": "getOriginalSize", "contents": "getOriginalSize()" },
      {"trigger": "getLayer", "contents": "getLayer(${1:String layerName})" },
      {"trigger": "getProperty", "contents": "getProperty(${1:String propertyName})" },
      {"trigger": "getLayerName", "contents": "getLayerName()" },
      {"trigger": "setEnalbedSelectors", "contents": "setEnalbedSelectors(${1:Number value})" },
      {"trigger": "isNodeVisible", "contents": "isNodeVisible(${1:cc.Node node})" },
      {"trigger": "setUniformLocationWith2f", "contents": "setUniformLocationWith2f(${1:WebGLUniformLocation location}, ${2:Number f1}, ${3:Number f2})" },
      {"trigger": "getObjects", "contents": "getObjects()" },
      {"trigger": "getTargetCallback", "contents": "getTargetCallback()" },
      {"trigger": "exitFullScreen", "contents": "exitFullScreen()" },
      {"trigger": "onMouseDown", "contents": "onMouseDown(${1: event})" },
      {"trigger": "alignItemsVerticallyWithPadding", "contents": "alignItemsVerticallyWithPadding(${1:Number padding})" },
      {"trigger": "clear", "contents": "clear(${1:Number|cc.Rect r}, ${2:Number g}, ${3:Number b}, ${4:Number a})" },
      {"trigger": "setUniformLocationWith2i", "contents": "setUniformLocationWith2i(${1:WebGLUniformLocation location}, ${2:Number i1}, ${3:Number i2})" },
      {"trigger": "getOpacityModifyRGB", "contents": "getOpacityModifyRGB()" },
      {"trigger": "setDirtyRecursively", "contents": "setDirtyRecursively(${1:Boolean value})" },
      {"trigger": "updateQuad", "contents": "updateQuad(${1:cc.V2F_C4B_T2F_Quad quad}, ${2:Number index})" },
      {"trigger": "getMusicVolume", "contents": "getMusicVolume()" },
      {"trigger": "setAngle", "contents": "setAngle(${1:Number angle})" },
      {"trigger": "setNormalSpriteFrame", "contents": "setNormalSpriteFrame(${1:cc.SpriteFrame frame})" },
      {"trigger": "setScale", "contents": "setScale(${1:object|Number scale}, ${2:Number scaleY})" },
      {"trigger": "addAttribute", "contents": "addAttribute(${1:String attributeName}, ${2:Number index})" },
      {"trigger": "getObject", "contents": "getObject(${1:string key})" },
      {"trigger": "getAnimationInterval", "contents": "getAnimationInterval()" },
      {"trigger": "vertexShaderLog", "contents": "vertexShaderLog()" },
      {"trigger": "initWithSpriteFrames", "contents": "initWithSpriteFrames(${1:Array frames}, ${2:Number delay})" },
      {"trigger": "detachWithIME", "contents": "detachWithIME()" },
      {"trigger": "setAnimation", "contents": "setAnimation(${1:cc.Animation animation})" },
      {"trigger": "displayFrame", "contents": "displayFrame()" },
      {"trigger": "getViewName", "contents": "getViewName()" },
      {"trigger": "getLifeVar", "contents": "getLifeVar()" },
      {"trigger": "removeAnimation", "contents": "removeAnimation(${1: {String}})" },
      {"trigger": "link", "contents": "link()" },
      {"trigger": "getVertexShaderLog", "contents": "getVertexShaderLog()" },
      {"trigger": "placeTile", "contents": "placeTile(${1:cc.Point pos}, ${2:cc.Tile tile})" },
      {"trigger": "setRectInPixels", "contents": "setRectInPixels(${1:cc.Rect rectInPixels})" },
      {"trigger": "initWithTimes", "contents": "initWithTimes(${1:Number times})" },
      {"trigger": "getGridSize", "contents": "getGridSize()" },
      {"trigger": "initWithAction", "contents": "initWithAction(${1:cc.ActionInterval action}, ${2:Number speed})" },
      {"trigger": "setTiles", "contents": "setTiles(${1:Array Var})" },
      {"trigger": "initWithLabel", "contents": "initWithLabel(${1:cc.Node label}, ${2:function|String selector}, ${3:cc.Node target})" },
      {"trigger": "getMapSize", "contents": "getMapSize()" },
      {"trigger": "insertChild", "contents": "insertChild(${1:cc.ParticleSystem pSystem}, ${2:Number index})" },
      {"trigger": "getComponent", "contents": "getComponent(${1:String name})" },
      {"trigger": "getContentSize", "contents": "getContentSize()" },
      {"trigger": "removeSpriteFramesFromTexture", "contents": "removeSpriteFramesFromTexture(${1:HTMLImageElement|HTMLCanvasElement|cc.Texture2D texture})" },
      {"trigger": "resumeTargets", "contents": "resumeTargets(${1: targetsToResume})" },
      {"trigger": "initWithXML", "contents": "initWithXML(${1:String tmxString}, ${2:String resourcePath})" },
      {"trigger": "setParticleCount", "contents": "setParticleCount(${1:Number particleCount})" },
      {"trigger": "getStartRadius", "contents": "getStartRadius()" },
      {"trigger": "getFontName", "contents": "getFontName()" },
      {"trigger": "getTextureColors", "contents": "getTextureColors(${1:Image texture})" },
      {"trigger": "preloadMusic", "contents": "preloadMusic(${1:String path})" },
      {"trigger": "onTouchMoved", "contents": "onTouchMoved(${1:cc.Touch touch}, ${2:event event})" },
      {"trigger": "draw", "contents": "draw(${1:CanvasRenderingContext2D ctx})" },
      {"trigger": "getType", "contents": "getType()" },
      {"trigger": "getClaimedTouches", "contents": "getClaimedTouches()" },
      {"trigger": "getColorSpaceHolder", "contents": "getColorSpaceHolder()" },
      {"trigger": "convertTouchToNodeSpaceAR", "contents": "convertTouchToNodeSpaceAR(${1:cc.Touch touch})" },
      {"trigger": "setFrames", "contents": "setFrames(${1:Array frames})" },
      {"trigger": "vertex", "contents": "vertex(${1:cc.Point position})" },
      {"trigger": "update", "contents": "update(${1:Number dt})" },
      {"trigger": "setUniformLocationWithMatrix4fv", "contents": "setUniformLocationWithMatrix4fv(${1:WebGLUniformLocation location}, ${2:Float32Array matrixArray}, ${3:Number numberOfMatrices})" },
      {"trigger": "getSearchPath", "contents": "getSearchPath()" },
      {"trigger": "fillWithEmptyQuadsFromIndex", "contents": "fillWithEmptyQuadsFromIndex(${1:Number index}, ${2:Number amount})" },
      {"trigger": "getQuadsToDraw", "contents": "getQuadsToDraw()" },
      {"trigger": "getLoops", "contents": "getLoops()" },
      {"trigger": "setViewPortInPoints", "contents": "setViewPortInPoints(${1:Number x}, ${2:Number y}, ${3:Number w}, ${4:Number h})" },
      {"trigger": "pauseTarget", "contents": "pauseTarget(${1:cc.Class target})" },
      {"trigger": "getTextureRect", "contents": "getTextureRect()" },
      {"trigger": "setEndRadiusVar", "contents": "setEndRadiusVar(${1: endRadiusVar})" },
      {"trigger": "setKeyboardEnabled", "contents": "setKeyboardEnabled(${1:Boolean enabled})" },
      {"trigger": "setRenderContext", "contents": "setRenderContext(${1: context})" },
      {"trigger": "setProjection", "contents": "setProjection(${1:Number projection})" },
      {"trigger": "getProgramLog", "contents": "getProgramLog()" },
      {"trigger": "setStartRadiusVar", "contents": "setStartRadiusVar(${1:Number startRadiusVar})" },
      {"trigger": "selectedItem", "contents": "selectedItem()" },
      {"trigger": "getTextureAtlas", "contents": "getTextureAtlas()" },
      {"trigger": "getCamera", "contents": "getCamera()" },
      {"trigger": "minContainerOffset", "contents": "minContainerOffset()" },
      {"trigger": "onScrollWheel", "contents": "onScrollWheel(${1: event})" },
      {"trigger": "originalTile", "contents": "originalTile(${1:cc.Point position})" },
      {"trigger": "setStringForKey", "contents": "setStringForKey(${1:String key}, ${2:String value})" },
      {"trigger": "addAnimationsWithDictionary", "contents": "addAnimationsWithDictionary(${1:object dictionary})" },
      {"trigger": "setFont", "contents": "setFont(${1:String fontName}, ${2:Number fontSize})" },
      {"trigger": "getGLServerState", "contents": "getGLServerState()" },
      {"trigger": "setEndSpin", "contents": "setEndSpin(${1:Number endSpin})" },
      {"trigger": "getElapsed", "contents": "getElapsed()" },
      {"trigger": "cc.TextureAtlas.create", "contents": "TextureAtlas.create(${1:String file}, ${2:Number capacity})" },
      {"trigger": "cc.rectUnion", "contents": "rectUnion(${1:Rect rectA}, ${2:Rect rectB})" },
      {"trigger": "cc.pToAngle", "contents": "pToAngle(${1:Point v})" },
      {"trigger": "cc.pSub", "contents": "pSub(${1:Point v1}, ${2:Point v2})" },
      {"trigger": "cc.EaseElastic.create", "contents": "EaseElastic.create(${1:ActionInterval action}, ${2:Number [period=0.3]})" },
      {"trigger": "cc.$new", "contents": "cc.$new(${1:String x})" },
      {"trigger": "cc.SIZE_POINTS_TO_PIXELS", "contents": "SIZE_POINTS_TO_PIXELS(${1:Size sizeInPoints})" },
      {"trigger": "cc.ParticleSnow.create", "contents": "ParticleSnow.create()" },
      {"trigger": "cc.pCompOp", "contents": "pCompOp(${1:Point p}, ${2:Function opFunc})" },
      {"trigger": "cc.ArrayAppendObject", "contents": "cc.ArrayAppendObject(${1:Array arr}, ${2:* addObj})" },
      {"trigger": "cc.KeyboardDispatcher.purgeSharedDispatcher", "contents": "KeyboardDispatcher.purgeSharedDispatcher()" },
      {"trigger": "cc.Loader.purgeCachedData", "contents": "Loader.purgeCachedData(${1:Array resources})" },
      {"trigger": "cc.NextPOT", "contents": "cc.NextPOT(${1:Number x})" },
      {"trigger": "cc.V3F_C4B_T2F_QuadZero", "contents": "cc.V3F_C4B_T2F_QuadZero()" },
      {"trigger": "cc.FlipY3D.create", "contents": "FlipY3D.create(${1:Number duration})" },
      {"trigger": "cc.kmMat4ExtractRotation", "contents": "cc.kmMat4ExtractRotation()" },
      {"trigger": "cc.Sprite.createWithTexture", "contents": "Sprite.createWithTexture(${1:Texture2D texture}, ${2:Rect rect})" },
      {"trigger": "cc.FadeTo.create", "contents": "FadeTo.create(${1:Number duration}, ${2:Number opacity})" },
      {"trigger": "cc.PageTurn3D.create", "contents": "PageTurn3D.create(${1:Number duration}, ${2:Size gridSize})" },
      {"trigger": "cc.PointZero", "contents": "cc.PointZero()" },
      {"trigger": "cc.RectApplyAffineTransform", "contents": "RectApplyAffineTransform(${1:Rect rect}, ${2:AffineTransform anAffineTransform})" },
      {"trigger": "cc.Vertex3F", "contents": "cc.Vertex3F(${1:Number x1}, ${2:Number y1}, ${3:Number z1})" },
      {"trigger": "cc.ParticleFire.create", "contents": "ParticleFire.create()" },
      {"trigger": "cc.PhysicsSprite.createWithSpriteFrame", "contents": "PhysicsSprite.createWithSpriteFrame(${1:SpriteFrame spriteFrame})" },
      {"trigger": "cc.LabelTTF.create", "contents": "LabelTTF.create(${1:String label}, ${2:String fontName}, ${3:Number fontSize}, ${4:Size [dimensions=SIZE_ZERO]}, ${5:Number [hAlignment]}, ${6:Number [vAlignment=VERTICAL_TEXT_ALIGNMENT_TOP]})" },
      {"trigger": "cc.SizeMake", "contents": "cc.SizeMake(${1:Number width}, ${2:Number height})" },
      {"trigger": "cc.JumpBy.create", "contents": "JumpBy.create(${1:Number duration}, ${2:Point position}, ${3:Number height}, ${4:Number jumps})" },
      {"trigger": "cc.Particle", "contents": "Particle(${1:Point [pos=PointZero()]}, ${2:Point [startPos=PointZero()]}, ${3:Color4F [color=}, ${4:Color4F [deltaColor=Color4F(0,}, ${5:Size [size=0]}, ${6:Size [deltaSize=0]}, ${7:Number [rotation=0]}, ${8:Number [deltaRotation=0]}, ${9:Number [timeToLive=0]}, ${10:Number [atlasIndex=0]}, ${11:Particle.ModeA [modeA=]}, ${12:Particle.ModeA [modeB=]})" },
      {"trigger": "cc.SIZE_PIXELS_TO_POINTS", "contents": "SIZE_PIXELS_TO_POINTS(${1:Size sizeInPixels})" },
      {"trigger": "cc.Twirl.create", "contents": "Twirl.create(${1:Number duration}, ${2:Size gridSize}, ${3:Point position}, ${4:Number twirls}, ${5:Number amplitude})" },
      {"trigger": "cc.vertexLineToPolygon", "contents": "cc.vertexLineToPolygon(${1:Float32Array points}, ${2:Number stroke}, ${3:Float32Array vertices}, ${4:Number offset}, ${5:Number nuPoints})" },
      {"trigger": "cc.TransitionScene.create", "contents": "TransitionScene.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.Sprite.createWithSpriteFrameName", "contents": "Sprite.createWithSpriteFrameName(${1:String spriteFrameName})" },
      {"trigger": "cc.ArrayGetIndexOfValue", "contents": "cc.ArrayGetIndexOfValue(${1:Array arr}, ${2:* value})" },
      {"trigger": "cc.kmMat4LookAt", "contents": "cc.kmMat4LookAt()" },
      {"trigger": "cc.GridAction.create", "contents": "GridAction.create(${1:Number duration}, ${2:Size gridSize})" },
      {"trigger": "cc.V3F_C4B_T2F", "contents": "V3F_C4B_T2F(${1:Vertex3F vertices1}, ${2:Color4B colors1}, ${3:Tex2F texCoords1})" },
      {"trigger": "cc.Acceleration", "contents": "cc.Acceleration()" },
      {"trigger": "cc.pAdd", "contents": "pAdd(${1:Point v1}, ${2:Point v2})" },
      {"trigger": "cc.SpriteBatchNode.createWithTexture", "contents": "SpriteBatchNode.createWithTexture(${1:Texture2D texture}, ${2:Number capacity})" },
      {"trigger": "cc.PointApplyAffineTransform", "contents": "PointApplyAffineTransform(${1:Point point}, ${2:AffineTransform t})" },
      {"trigger": "cc.Application.getInstance", "contents": "Application.getInstance()" },
      {"trigger": "cc.AudioEngine.end", "contents": "AudioEngine.end()" },
      {"trigger": "cc.TableView.create", "contents": "TableView.create(${1:TableViewDataSource dataSource}, ${2:Size size}, ${3:Node [container]})" },
      {"trigger": "cc.TouchHandler.create", "contents": "TouchHandler.create(${1:TouchDelegate delegate}, ${2:Number priority})" },
      {"trigger": "cc.EaseInOut.create", "contents": "EaseInOut.create(${1:ActionInterval action}, ${2:Number rate})" },
      {"trigger": "cc.HashUpdateEntry", "contents": "HashUpdateEntry(${1:ListEntry list}, ${2:ListEntry entry}, ${3:Class target}, ${4:Array hh})" },
      {"trigger": "cc.SkewBy.create", "contents": "SkewBy.create(${1:Number t}, ${2:Number sx}, ${3:Number sy})" },
      {"trigger": "cc.LayerColor.create", "contents": "LayerColor.create(${1:Color4B color}, ${2:Number|Null [width=]}, ${3:Number|Null [height=]})" },
      {"trigger": "cc.ParticleSpiral.create", "contents": "ParticleSpiral.create()" },
      {"trigger": "cc.DrawNode.create", "contents": "DrawNode.create()" },
      {"trigger": "cc.setProjectionMatrixDirty", "contents": "cc.setProjectionMatrixDirty()" },
      {"trigger": "cc.AffineTransformMakeIdentity", "contents": "cc.AffineTransformMakeIdentity()" },
      {"trigger": "cc.V3F_C4B_T2F_Quad", "contents": "V3F_C4B_T2F_Quad(${1:V3F_C4B_T2F tl1}, ${2:V3F_C4B_T2F bl1}, ${3:V3F_C4B_T2F tr1}, ${4:V3F_C4B_T2F br1})" },
      {"trigger": "cc.TintTo.create", "contents": "TintTo.create(${1:Number duration}, ${2:Number red}, ${3:Number green}, ${4:Number blue})" },
      {"trigger": "cc.generateTintImage2", "contents": "generateTintImage2(${1:HTMLImageElement texture}, ${2:Color3B|Color4F color}, ${3:Rect rect})" },
      {"trigger": "cc.TextFieldTTF.create", "contents": "TextFieldTTF.create(${1:String placeholder}, ${2:Size dimensions}, ${3:Number alignment}, ${4:String fontName}, ${5:Number fontSize})" },
      {"trigger": "cc.Place.create", "contents": "Place.create(${1:Point pos})" },
      {"trigger": "cc.pForAngle", "contents": "cc.pForAngle(${1:Number a})" },
      {"trigger": "cc.BezierBy.create", "contents": "BezierBy.create(${1:Number t}, ${2:Array c})" },
      {"trigger": "cc.TransitionFadeTR.create", "contents": "TransitionFadeTR.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.RADIANS_TO_DEGREES", "contents": "cc.RADIANS_TO_DEGREES(${1:Number angle})" },
      {"trigger": "cc.pDistance", "contents": "pDistance(${1:Point v1}, ${2:Point v2})" },
      {"trigger": "cc.ParticleBatchNode.create", "contents": "ParticleBatchNode.create(${1:String fileImage}, ${2: capacity})" },
      {"trigger": "cc.FlipX3D.create", "contents": "FlipX3D.create(${1:Number duration})" },
      {"trigger": "cc.ParticleFlower.create", "contents": "ParticleFlower.create()" },
      {"trigger": "cc.TransitionProgressVertical.create", "contents": "TransitionProgressVertical.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.pCross", "contents": "pCross(${1:Point v1}, ${2:Point v2})" },
      {"trigger": "cc.SWAP", "contents": "cc.SWAP(${1: x}, ${2: y}, ${3: ref})" },
      {"trigger": "cc.kmMat4GetForwardVec3", "contents": "cc.kmMat4GetForwardVec3()" },
      {"trigger": "cc.V2F_C4B_T2F_Triangle", "contents": "V2F_C4B_T2F_Triangle(${1:V2F_C4B_T2F a}, ${2:V2F_C4B_T2F b}, ${3:V2F_C4B_T2F c})" },
      {"trigger": "cc.MenuItemFont.setFontSize", "contents": "MenuItemFont.setFontSize(${1:Number fontSize})" },
      {"trigger": "cc.EaseBounceOut.create", "contents": "EaseBounceOut.create(${1:ActionInterval action})" },
      {"trigger": "cc.AppController.shareAppController", "contents": "AppController.shareAppController()" },
      {"trigger": "cc.TMXTiledMap.create", "contents": "TMXTiledMap.create(${1:String tmxFile}, ${2:String resourcePath})" },
      {"trigger": "cc.Codec.Base64.decodeAsArray", "contents": "Codec.Base64.decodeAsArray(${1:String input}, ${2:Number bytes})" },
      {"trigger": "cc.pUnrotate", "contents": "pUnrotate(${1: {Point}}, ${2: {Point}})" },
      {"trigger": "cc.Codec.Base64.decode", "contents": "Codec.Base64.decode(${1:String input})" },
      {"trigger": "cc.kmMat4Translation", "contents": "cc.kmMat4Translation()" },
      {"trigger": "cc.TransitionProgressRadialCCW.create", "contents": "TransitionProgressRadialCCW.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.ScaleTo.create", "contents": "ScaleTo.create(${1:Number duration}, ${2:Number sx}, ${3:Number [sy=]})" },
      {"trigger": "cc.RANDOM_0_1", "contents": "cc.RANDOM_0_1()" },
      {"trigger": "cc.TintBy.create", "contents": "TintBy.create(${1:Number duration}, ${2:Number deltaRed}, ${3:Number deltaGreen}, ${4:Number deltaBlue})" },
      {"trigger": "cc.loadImage", "contents": "cc.loadImage(${1:String imageUrl})" },
      {"trigger": "cc.Shaky3D.create", "contents": "Shaky3D.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number range}, ${4:Boolean shakeZ})" },
      {"trigger": "cc.generateTintImage", "contents": "generateTintImage(${1:HTMLImageElement texture}, ${2:Array tintedImgCache}, ${3:Color3B|Color4F color}, ${4:Rect rect}, ${5:HTMLCanvasElement [renderCanvas]})" },
      {"trigger": "cc.RectZero", "contents": "cc.RectZero()" },
      {"trigger": "cc.AffineTransformEqualToTransform", "contents": "AffineTransformEqualToTransform(${1:AffineTransform t1}, ${2:AffineTransform t2})" },
      {"trigger": "cc.AnimationCache.getInstance", "contents": "AnimationCache.getInstance()" },
      {"trigger": "cc.kmAABB", "contents": "cc.kmAABB()" },
      {"trigger": "cc.T2F_Quad", "contents": "T2F_Quad(${1:Tex2F bl}, ${2:Tex2F br}, ${3:Tex2F tl}, ${4:Tex2F tr})" },
      {"trigger": "cc.MoveBy.create", "contents": "MoveBy.create(${1:Number duration}, ${2:Point deltaPosition})" },
      {"trigger": "cc.EaseIn.create", "contents": "EaseIn.create(${1:ActionInterval action}, ${2:Number rate})" },
      {"trigger": "cc.MenuItemFont.setFontName", "contents": "MenuItemFont.setFontName(${1: name})" },
      {"trigger": "cc.ClippingNode.create", "contents": "ClippingNode.create(${1:Node [stencil=null]})" },
      {"trigger": "cc.pIntersectPoint", "contents": "pIntersectPoint(${1:Point A}, ${2:Point B}, ${3:Point C}, ${4:Point D})" },
      {"trigger": "cc.TransitionFlipAngular.create", "contents": "TransitionFlipAngular.create(${1:Number t}, ${2:Scene scene}, ${3:TRANSITION_ORIENTATION_LEFT_OVER|TRANSITION_ORIENTATION_RIGHT_OVER|TRANSITION_ORIENTATION_UP_OVER|TRANSITION_ORIENTATION_DOWN_OVER o})" },
      {"trigger": "cc.less", "contents": "less(${1:TouchHandler p1}, ${2:TouchHandler p2})" },
      {"trigger": "cc.unzip", "contents": "cc.unzip(${1:Array input})" },
      {"trigger": "cc.Liquid.create", "contents": "Liquid.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number waves}, ${4:Number amplitude})" },
      {"trigger": "cc.kmAABBContainsPoint", "contents": "cc.kmAABBContainsPoint()" },
      {"trigger": "cc.TransitionFlipX.create", "contents": "TransitionFlipX.create(${1:Number t}, ${2:Scene scene}, ${3:TRANSITION_ORIENTATION_LEFT_OVER|TRANSITION_ORIENTATION_RIGHT_OVER|TRANSITION_ORIENTATION_UP_OVER|TRANSITION_ORIENTATION_DOWN_OVER o})" },
      {"trigger": "cc.SizeFromString", "contents": "cc.SizeFromString(${1:String content})" },
      {"trigger": "cc.glDeleteTexture", "contents": "cc.glDeleteTexture(${1:WebGLTexture textureId})" },
      {"trigger": "cc.KeyboardHandler.create", "contents": "KeyboardHandler.create(${1: delegate})" },
      {"trigger": "cc.SizeZero", "contents": "cc.SizeZero()" },
      {"trigger": "cc.TargetedAction.create", "contents": "TargetedAction.create(${1:Node target}, ${2:FiniteTimeAction action})" },
      {"trigger": "cc.setContextMenuEnable", "contents": "cc.setContextMenuEnable(${1:Boolean enabled})" },
      {"trigger": "cc.MenuItemAtlasFont.create", "contents": "MenuItemAtlasFont.create(${1:String value}, ${2:String charMapFile}, ${3:Number itemWidth}, ${4:Number itemHeight}, ${5:String startCharMap}, ${6:function|String|Null [callback=null]}, ${7:Node|Null [target=]})" },
      {"trigger": "cc.TMXTiledMap.createWithXML", "contents": "TMXTiledMap.createWithXML(${1:String tmxString}, ${2:String resourcePath})" },
      {"trigger": "cc.ReuseGrid.create", "contents": "ReuseGrid.create(${1:Number times})" },
      {"trigger": "cc.Tex2F", "contents": "cc.Tex2F(${1:Number u1}, ${2:Number v1})" },
      {"trigger": "cc.ToggleVisibility.create", "contents": "ToggleVisibility.create()" },
      {"trigger": "cc.DOM.setTransform", "contents": "DOM.setTransform(${1: x})" },
      {"trigger": "cc.Speed.create", "contents": "Speed.create(${1:ActionInterval action}, ${2:Number speed})" },
      {"trigger": "cc.ENABLE_DEFAULT_GL_STATES", "contents": "cc.ENABLE_DEFAULT_GL_STATES()" },
      {"trigger": "cc.CatmullRomTo.create", "contents": "CatmullRomTo.create(${1:Number dt}, ${2:Array points})" },
      {"trigger": "cc.ScrollView.create", "contents": "ScrollView.create(${1:Size size}, ${2:Node container})" },
      {"trigger": "cc.PhysicsSprite.createWithSpriteFrameName", "contents": "PhysicsSprite.createWithSpriteFrameName(${1:String spriteFrameName})" },
      {"trigger": "cc.TransitionJumpZoom.create", "contents": "TransitionJumpZoom.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.reverseControlPoints", "contents": "cc.reverseControlPoints()" },
      {"trigger": "cc.TransitionFlipY.create", "contents": "TransitionFlipY.create(${1:Number t}, ${2:Scene scene}, ${3:TRANSITION_ORIENTATION_LEFT_OVER|TRANSITION_ORIENTATION_RIGHT_OVER|TRANSITION_ORIENTATION_UP_OVER|TRANSITION_ORIENTATION_DOWN_OVER o})" },
      {"trigger": "cc.RotateBy.create", "contents": "RotateBy.create(${1:Number duration}, ${2:Number deltaAngleX}, ${3:Number [deltaAngleY=]})" },
      {"trigger": "cc.FadeOutDownTiles.create", "contents": "FadeOutDownTiles.create(${1:Number duration}, ${2:Size gridSize})" },
      {"trigger": "cc.FadeOutUpTiles.create", "contents": "FadeOutUpTiles.create(${1:Number duration}, ${2:Size gridSize})" },
      {"trigger": "cc.glEnableVertexAttribs", "contents": "glEnableVertexAttribs(${1:VERTEX_ATTRIB_FLAG_POSITION | VERTEX_ATTRIB_FLAG_COLOR | VERTEX_ATTRIB_FLAG_TEXCOORDS flags})" },
      {"trigger": "cc.FlipX.create", "contents": "FlipX.create(${1:Boolean x})" },
      {"trigger": "cc.unzipAsArray", "contents": "cc.unzipAsArray(${1:Array input}, ${2:Number bytes})" },
      {"trigger": "cc.MoveTo.create", "contents": "MoveTo.create(${1:Number duration}, ${2:Point position})" },
      {"trigger": "cc.Codec.GZip", "contents": "Codec.GZip(${1:Array | String data})" },
      {"trigger": "cc.Animation.createWithAnimationFrames", "contents": "Animation.createWithAnimationFrames(${1:Array arrayOfAnimationFrameNames}, ${2:Number delayPerUnit}, ${3:Number loops})" },
      {"trigger": "cc.SimpleSFX", "contents": "cc.SimpleSFX()" },
      {"trigger": "cc.getControlPointAt", "contents": "cc.getControlPointAt(${1:Array controlPoints}, ${2:Number pos})" },
      {"trigger": "cc.LabelAtlas.create", "contents": "LabelAtlas.create(${1:String strText}, ${2:String charMapFile}, ${3:Number [itemWidth=0]}, ${4:Number [itemHeight=0]}, ${5:Number [startCharMap='']})" },
      {"trigger": "cc.UserDefault.getInstance", "contents": "UserDefault.getInstance()" },
      {"trigger": "cc.Sprite.createWithSpriteFrame", "contents": "Sprite.createWithSpriteFrame(${1:SpriteFrame spriteFrame})" },
      {"trigger": "cc.convertColor3BtoHexString", "contents": "cc.convertColor3BtoHexString(${1: clr})" },
      {"trigger": "cc.ArrayAppendObjectsToIndex", "contents": "cc.ArrayAppendObjectsToIndex(${1:Array arr}, ${2:Array addObjs}, ${3:Number index})" },
      {"trigger": "cc.SAXParser.getInstance", "contents": "SAXParser.getInstance()" },
      {"trigger": "cc.V2F_C4F_T2F_Quad", "contents": "V2F_C4F_T2F_Quad(${1:V2F_C4F_T2F bl1}, ${2:V2F_C4F_T2F br1}, ${3:V2F_C4F_T2F tl1}, ${4:V2F_C4F_T2F tr1})" },
      {"trigger": "cc.kmMat4Identity", "contents": "cc.kmMat4Identity()" },
      {"trigger": "cc.pDistanceSQ", "contents": "pDistanceSQ(${1:Point point1}, ${2:Point point2})" },
      {"trigger": "cc.pAngle", "contents": "pAngle(${1:Point a}, ${2:Point b})" },
      {"trigger": "cc.g", "contents": "cc.g(${1:Number x}, ${2:Number y})" },
      {"trigger": "cc.tgaLoad", "contents": "cc.tgaLoad(${1: filename})" },
      {"trigger": "cc.Show.create", "contents": "Show.create()" },
      {"trigger": "cc.pRotateByAngle", "contents": "pRotateByAngle(${1:Point v}, ${2:Point pivot}, ${3:Number angle})" },
      {"trigger": "cc.c4FEqual", "contents": "c4FEqual(${1:Color4F a}, ${2:Color4F b})" },
      {"trigger": "cc.kmMat4Inverse", "contents": "cc.kmMat4Inverse()" },
      {"trigger": "cc.SpriteBatchNode.create", "contents": "SpriteBatchNode.create(${1:String fileImage}, ${2:Number capacity})" },
      {"trigger": "cc.splitWithForm", "contents": "cc.splitWithForm(${1:String content}, ${2:String strs})" },
      {"trigger": "cc.TransitionZoomFlipX.create", "contents": "TransitionZoomFlipX.create(${1:Number t}, ${2:Scene scene}, ${3:TRANSITION_ORIENTATION_LEFT_OVER|TRANSITION_ORIENTATION_RIGHT_OVER|TRANSITION_ORIENTATION_UP_OVER|TRANSITION_ORIENTATION_DOWN_OVER o})" },
      {"trigger": "cc.ParallaxNode.create", "contents": "ParallaxNode.create()" },
      {"trigger": "cc.pMult", "contents": "pMult(${1:Point point}, ${2:Number floatVar})" },
      {"trigger": "cc.TransitionShrinkGrow.create", "contents": "TransitionShrinkGrow.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.LabelBMFont.purgeCachedData", "contents": "LabelBMFont.purgeCachedData()" },
      {"trigger": "cc.glDeleteProgram", "contents": "cc.glDeleteProgram(${1:WebGLProgram program})" },
      {"trigger": "cc.TouchDispatcher.registerHtmlElementEvent", "contents": "TouchDispatcher.registerHtmlElementEvent(${1:HTMLCanvasElement|HTMLDivElement element})" },
      {"trigger": "cc.PointObject.create", "contents": "PointObject.create(${1:Point ratio}, ${2:Point offset})" },
      {"trigger": "cc.Texture2D.setDefaultAlphaPixelFormat", "contents": "Texture2D.setDefaultAlphaPixelFormat(${1:Number format})" },
      {"trigger": "cc.EaseBackInOut.create", "contents": "EaseBackInOut.create(${1:ActionInterval action})" },
      {"trigger": "cc.ShaderCache.getInstance", "contents": "ShaderCache.getInstance()" },
      {"trigger": "cc.log", "contents": "cc.log(${1:String message})" },
      {"trigger": "cc.EditBox.create", "contents": "EditBox.create(${1:Size size}, ${2:Color3B | Scale9Sprite  normal9SpriteBg})" },
      {"trigger": "cc.SizeApplyAffineTransform", "contents": "SizeApplyAffineTransform(${1:Size size}, ${2:AffineTransform t})" },
      {"trigger": "cc.ShakyTiles3D.create", "contents": "ShakyTiles3D.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number range}, ${4:Boolean shakeZ})" },
      {"trigger": "cc.ActionTween.create", "contents": "ActionTween.create(${1:Number duration}, ${2:String key}, ${3:Number from}, ${4:Number to})" },
      {"trigger": "cc.reverseControlPointsInline", "contents": "cc.reverseControlPointsInline()" },
      {"trigger": "cc.glBindTexture2DN", "contents": "glBindTexture2DN(${1:Number textureUnit}, ${2:Texture2D textureId})" },
      {"trigger": "cc.RepeatForever.create", "contents": "RepeatForever.create(${1: action})" },
      {"trigger": "cc.TurnOffTiles.create", "contents": "TurnOffTiles.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number|Null [seed=0]})" },
      {"trigger": "cc.TargetedTouchHandler.create", "contents": "TargetedTouchHandler.create(${1:Object delegate}, ${2:Number priority}, ${3:Boolean swallow})" },
      {"trigger": "cc.Loader.preload", "contents": "Loader.preload(${1:Array resources}, ${2:Function|String selector}, ${3:Object target})" },
      {"trigger": "cc.glBindTexture2D", "contents": "glBindTexture2D(${1:Texture2D textureId})" },
      {"trigger": "cc.ArrayRemoveArray", "contents": "cc.ArrayRemoveArray(${1:Array arr}, ${2:Array minusArr})" },
      {"trigger": "cc.associateWithNative", "contents": "cc.associateWithNative(${1:object jsObj}, ${2:object superclass})" },
      {"trigger": "cc.rectGetMinX", "contents": "rectGetMinX(${1:Rect rect})" },
      {"trigger": "cc.rectGetMinY", "contents": "rectGetMinY(${1:Rect rect})" },
      {"trigger": "cc.AtlasNode.create", "contents": "AtlasNode.create(${1:String tile}, ${2:Number tileWidth}, ${3:Number tileHeight}, ${4:Number itemsToRender})" },
      {"trigger": "cc.pLerp", "contents": "pLerp(${1:Point a}, ${2:Point b}, ${3:Number alpha})" },
      {"trigger": "cc.kmMat4Transpose", "contents": "cc.kmMat4Transpose()" },
      {"trigger": "cc.Loader.preloadAsync", "contents": "Loader.preloadAsync(${1:Array resources}, ${2:Function|String selector}, ${3:Object target})" },
      {"trigger": "cc.Hide.create", "contents": "Hide.create()" },
      {"trigger": "cc.MenuItemSprite.create", "contents": "MenuItemSprite.create(${1:Image normalSprite}, ${2:Image|Null selectedSprite}, ${3:Image|Node|Null three}, ${4:String|function|Node|Null four}, ${5:String|function|Null five})" },
      {"trigger": "cc.ParticleMeteor.create", "contents": "ParticleMeteor.create()" },
      {"trigger": "cc.kmMat4RotationAxisAngle", "contents": "cc.kmMat4RotationAxisAngle()" },
      {"trigger": "cc.RANDOM_MINUS1_1", "contents": "cc.RANDOM_MINUS1_1()" },
      {"trigger": "cc.KeyboardDispatcher.getInstance", "contents": "KeyboardDispatcher.getInstance()" },
      {"trigger": "cc.UserDefault.purgeInstanceUserDefault", "contents": "UserDefault.purgeInstanceUserDefault()" },
      {"trigger": "cc.Action.create", "contents": "Action.create()" },
      {"trigger": "cc.ShatteredTiles3D.create", "contents": "ShatteredTiles3D.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number range}, ${4:Boolean shatterZ})" },
      {"trigger": "cc.Configuration.getInstance", "contents": "Configuration.getInstance()" },
      {"trigger": "cc.glDeleteTextureN", "contents": "cc.glDeleteTextureN(${1:Number textureUnit}, ${2:WebGLTexture textureId})" },
      {"trigger": "cc.c4FFromccc4B", "contents": "c4FFromccc4B(${1:Color4B c})" },
      {"trigger": "cc.pLineIntersect", "contents": "pLineIntersect(${1:Point A}, ${2:Point B}, ${3:Point C}, ${4:Point D}, ${5:Point retP})" },
      {"trigger": "cc.Assert", "contents": "cc.Assert(${1:Boolean cond}, ${2:String message})" },
      {"trigger": "cc.TileMapAtlas.create", "contents": "TileMapAtlas.create(${1:String tile}, ${2:String mapFile}, ${3:Number tileWidth}, ${4:Number tileHeight})" },
      {"trigger": "cc.JumpTo.create", "contents": "JumpTo.create(${1:Number duration}, ${2:Point position}, ${3:Number height}, ${4:Number jumps})" },
      {"trigger": "cc.AffineTransformScale", "contents": "AffineTransformScale(${1:AffineTransform t}, ${2:Number sx}, ${3:Number sy})" },
      {"trigger": "cc.EaseOut.create", "contents": "EaseOut.create(${1:ActionInterval action}, ${2:Number rate})" },
      {"trigger": "cc.FadeOutBLTiles.create", "contents": "FadeOutBLTiles.create(${1: duration}, ${2: gridSize})" },
      {"trigger": "cc.BezierTo.create", "contents": "BezierTo.create(${1:Number t}, ${2:Array c})" },
      {"trigger": "cc.lerp", "contents": "cc.lerp(${1:Number a}, ${2:Number b}, ${3:Number r})" },
      {"trigger": "cc.setup", "contents": "cc.setup()" },
      {"trigger": "cc.ParticleSystem.createWithTotalParticles", "contents": "ParticleSystem.createWithTotalParticles(${1:Number number_of_particles})" },
      {"trigger": "cc.BMFontConfiguration.create", "contents": "BMFontConfiguration.create(${1:String FNTfile})" },
      {"trigger": "cc.pRotate", "contents": "pRotate(${1: {Point}}, ${2: {Point}})" },
      {"trigger": "cc.TransitionTurnOffTiles.create", "contents": "TransitionTurnOffTiles.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.ShuffleTiles.create", "contents": "ShuffleTiles.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number seed})" },
      {"trigger": "cc.AnimationFrameData", "contents": "AnimationFrameData(${1:T2F_Quad texCoords}, ${2: delay}, ${3: size})" },
      {"trigger": "cc.FadeOut.create", "contents": "FadeOut.create(${1:Number d})" },
      {"trigger": "cc.TiledGrid3D.create", "contents": "TiledGrid3D.create(${1:Size gridSize}, ${2:Texture2D [texture=]}, ${3:Boolean [flipped=]})" },
      {"trigger": "cc.Lens3D.create", "contents": "Lens3D.create(${1:Number duration}, ${2:Size gridSize}, ${3:Point position}, ${4:Number radius})" },
      {"trigger": "cc.tgaLoadImageData", "contents": "tgaLoadImageData(${1:Array buffer}, ${2:Number bufSize}, ${3:ImageTGA psInfo})" },
      {"trigger": "cc.DISABLE_DEFAULT_GL_STATES", "contents": "cc.DISABLE_DEFAULT_GL_STATES()" },
      {"trigger": "cc.FNTConfigRemoveCache", "contents": "cc.FNTConfigRemoveCache()" },
      {"trigger": "cc.TransformValues", "contents": "TransformValues(${1:Point pos}, ${2:Point scale}, ${3:Number rotation}, ${4:Point skew}, ${5:Point ap}, ${6:Boolean visible})" },
      {"trigger": "cc.LayerMultiplex.create", "contents": "LayerMultiplex.create()" },
      {"trigger": "cc.HASH_FIND_INT", "contents": "HASH_FIND_INT(${1:Array arr}, ${2:ListEntry|HashUpdateEntry findInt})" },
      {"trigger": "cc.kmMat4GetRightVec3", "contents": "cc.kmMat4GetRightVec3()" },
      {"trigger": "cc.EaseBounceIn.create", "contents": "EaseBounceIn.create(${1:ActionInterval action})" },
      {"trigger": "cc.TransitionSlideInT.create", "contents": "TransitionSlideInT.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.EaseBackOut.create", "contents": "EaseBackOut.create(${1:ActionInterval action})" },
      {"trigger": "cc.JumpTiles3D.create", "contents": "JumpTiles3D.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number numberOfJumps}, ${4:Number amplitude})" },
      {"trigger": "cc.rectIntersection", "contents": "rectIntersection(${1:Rect rectA}, ${2:Rect rectB})" },
      {"trigger": "cc.LabelBMFont.create", "contents": "LabelBMFont.create(${1:String str}, ${2:String fntFile}, ${3:String width}, ${4:Number alignment}, ${5:Point imageOffset})" },
      {"trigger": "cc.pProject", "contents": "pProject(${1:Point v1}, ${2:Point v2})" },
      {"trigger": "cc.ActionEase.create", "contents": "ActionEase.create(${1:ActionInterval action})" },
      {"trigger": "cc.INCREMENT_GL_DRAWS", "contents": "cc.INCREMENT_GL_DRAWS(${1:Number addNumber})" },
      {"trigger": "cc.ShaderCache.purgeSharedShaderCache", "contents": "ShaderCache.purgeSharedShaderCache()" },
      {"trigger": "cc.Layer.create", "contents": "Layer.create()" },
      {"trigger": "cc.TextureCache.purgeSharedTextureCache", "contents": "TextureCache.purgeSharedTextureCache()" },
      {"trigger": "cc.TransitionMoveInR.create", "contents": "TransitionMoveInR.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.TransitionSplitRows.create", "contents": "TransitionSplitRows.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.glBlendResetToCache", "contents": "cc.glBlendResetToCache()" },
      {"trigger": "cc.PhysicsSprite.create", "contents": "PhysicsSprite.create(${1:String fileName}, ${2:Rect rect})" },
      {"trigger": "cc.Node.create", "contents": "Node.create()" },
      {"trigger": "cc.tgaRGBtogreyscale", "contents": "tgaRGBtogreyscale(${1:ImageTGA psInfo})" },
      {"trigger": "cc.pNeg", "contents": "pNeg(${1:Point point})" },
      {"trigger": "cc.utf8_trim_ws", "contents": "cc.utf8_trim_ws(${1:Array str})" },
      {"trigger": "cc.POINT_PIXELS_TO_POINTS", "contents": "cc.POINT_PIXELS_TO_POINTS(${1: pixels})" },
      {"trigger": "cc.GridBase.create", "contents": "GridBase.create(${1:Size gridSize}, ${2:Texture2D [texture=]}, ${3:Boolean [flipped=]})" },
      {"trigger": "cc.V2F_C4B_T2F_Quad", "contents": "V2F_C4B_T2F_Quad(${1:V2F_C4B_T2F bl1}, ${2:V2F_C4B_T2F br1}, ${3:V2F_C4B_T2F tl1}, ${4:V2F_C4B_T2F tr1})" },
      {"trigger": "cc.TransitionProgress.create", "contents": "TransitionProgress.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.rectGetMaxX", "contents": "rectGetMaxX(${1:Rect rect})" },
      {"trigger": "cc.rectGetMaxY", "contents": "rectGetMaxY(${1:Rect rect})" },
      {"trigger": "cc.TMXLayer.create", "contents": "TMXLayer.create(${1:TMXTilesetInfo tilesetInfo}, ${2:TMXLayerInfo layerInfo}, ${3:TMXMapInfo mapInfo})" },
      {"trigger": "cc.kmMat4RotationPitchYawRoll", "contents": "cc.kmMat4RotationPitchYawRoll()" },
      {"trigger": "cc.Sequence._actionOneTwo", "contents": "Sequence._actionOneTwo(${1:FiniteTimeAction actionOne}, ${2:FiniteTimeAction actionTwo})" },
      {"trigger": "cc.TMXMapInfo.createWithXML", "contents": "TMXMapInfo.createWithXML(${1:String tmxString}, ${2:String resourcePath})" },
      {"trigger": "cc.NotificationCenter.getInstance", "contents": "NotificationCenter.getInstance()" },
      {"trigger": "cc.c3BEqual", "contents": "c3BEqual(${1:Color3B color1}, ${2:Color3B color2})" },
      {"trigger": "cc.TransitionSlideInR.create", "contents": "TransitionSlideInR.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.Spawn._actionOneTwo", "contents": "Spawn._actionOneTwo(${1:FiniteTimeAction action1}, ${2:FiniteTimeAction action2})" },
      {"trigger": "cc.TransitionSplitCols.create", "contents": "TransitionSplitCols.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.MenuItemFont.fontSize", "contents": "MenuItemFont.fontSize()" },
      {"trigger": "cc.SpriteFrame.createWithTexture", "contents": "SpriteFrame.createWithTexture(${1:Texture2D texture}, ${2:Rect rect}, ${3:Boolean [rotated=]}, ${4:Point [offset=]}, ${5:Size [originalSize=]})" },
      {"trigger": "cc.kmPlaneClassifyPoint", "contents": "cc.kmPlaneClassifyPoint()" },
      {"trigger": "cc.kmMat4RotationTranslation", "contents": "cc.kmMat4RotationTranslation()" },
      {"trigger": "cc.TransitionZoomFlipAngular.create", "contents": "TransitionZoomFlipAngular.create(${1:Number t}, ${2:Scene scene}, ${3:TRANSITION_ORIENTATION_LEFT_OVER|TRANSITION_ORIENTATION_RIGHT_OVER|TRANSITION_ORIENTATION_UP_OVER|TRANSITION_ORIENTATION_DOWN_OVER o})" },
      {"trigger": "cc.TransitionMoveInB.create", "contents": "TransitionMoveInB.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.TouchHandlerHelperData", "contents": "cc.TouchHandlerHelperData(${1:Number type})" },
      {"trigger": "cc.TransitionMoveInL.create", "contents": "TransitionMoveInL.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.Application.getCurrentLanguage", "contents": "Application.getCurrentLanguage()" },
      {"trigger": "cc.registerTargetedDelegate", "contents": "cc.registerTargetedDelegate(${1:Number priority}, ${2:Boolean swallowsTouches}, ${3:Object delegate})" },
      {"trigger": "cc.AudioEngine.getInstance", "contents": "AudioEngine.getInstance()" },
      {"trigger": "cc.Waves3D.create", "contents": "Waves3D.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number waves}, ${4:Number amplitude})" },
      {"trigger": "cc.TouchDispatcher._getPreTouch", "contents": "TouchDispatcher._getPreTouch(${1:Touch touch})" },
      {"trigger": "cc.ArrayGetIndexOfObject", "contents": "cc.ArrayGetIndexOfObject(${1:Array arr}, ${2:* findObj})" },
      {"trigger": "cc.pLengthSQ", "contents": "pLengthSQ(${1: {Point}})" },
      {"trigger": "cc.ParticleSystem.ModeB", "contents": "ParticleSystem.ModeB(${1:Number startRadius}, ${2:Number startRadiusVar}, ${3:Number endRadius}, ${4:Number endRadiusVar}, ${5:Number rotatePerSecond}, ${6:Number rotatePerSecondVar})" },
      {"trigger": "cc.ParticleSystem.ModeA", "contents": "ParticleSystem.ModeA(${1:Point [gravity=]}, ${2:Number [speed=0]}, ${3:Number [speedVar=0]}, ${4:Number [tangentialAccel=0]}, ${5:Number [tangentialAccelVar=0]}, ${6:Number [radialAccel=0]}, ${7:Number [radialAccelVar=0]}, ${8:boolean [rotationIsDir=false]})" },
      {"trigger": "cc.EaseRateAction.create", "contents": "EaseRateAction.create(${1:ActionInterval action}, ${2:Number rate})" },
      {"trigger": "cc.pCompMult", "contents": "pCompMult(${1:Point a}, ${2:Point b})" },
      {"trigger": "cc.SplitCols.create", "contents": "SplitCols.create(${1:Number duration}, ${2:Number cols})" },
      {"trigger": "cc.Director.getInstance", "contents": "Director.getInstance()" },
      {"trigger": "cc.AnimationCache.purgeSharedAnimationCache", "contents": "AnimationCache.purgeSharedAnimationCache()" },
      {"trigger": "cc.pMidpoint", "contents": "pMidpoint(${1:Point v1}, ${2:Point v2})" },
      {"trigger": "cc.ActionInterval.create", "contents": "ActionInterval.create(${1:Number d})" },
      {"trigger": "cc.EaseExponentialInOut.create", "contents": "EaseExponentialInOut.create(${1:ActionInterval action})" },
      {"trigger": "cc.Particle.ModeB", "contents": "Particle.ModeB(${1:Number angle}, ${2:Number degreesPerSecond}, ${3:Number radius}, ${4:Number deltaRadius})" },
      {"trigger": "cc.Particle.ModeA", "contents": "Particle.ModeA(${1:Point dir}, ${2:Number radialAccel}, ${3:Number tangentialAccel})" },
      {"trigger": "cc.tgaDestroy", "contents": "tgaDestroy(${1:ImageTGA psInfo})" },
      {"trigger": "cc.rectGetMidX", "contents": "rectGetMidX(${1:Rect rect})" },
      {"trigger": "cc.rectGetMidY", "contents": "rectGetMidY(${1:Rect rect})" },
      {"trigger": "cc.SplitRows.create", "contents": "SplitRows.create(${1:Number duration}, ${2:Number rows})" },
      {"trigger": "cc.LoaderScene.preload", "contents": "LoaderScene.preload(${1:Array resources}, ${2:Function|String selector}, ${3:Object target})" },
      {"trigger": "cc.glBindVAO", "contents": "cc.glBindVAO(${1: vaoId})" },
      {"trigger": "cc.create3DContext", "contents": "cc.create3DContext(${1:HTMLCanvasElement canvas}, ${2:Object opt_attribs})" },
      {"trigger": "cc.TransitionFadeDown.create", "contents": "TransitionFadeDown.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.WavesTiles3D.create", "contents": "WavesTiles3D.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number waves}, ${4:Number amplitude})" },
      {"trigger": "cc.TransitionSlideInB.create", "contents": "TransitionSlideInB.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.TransitionCrossFade.create", "contents": "TransitionCrossFade.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.kmSQR", "contents": "cc.kmSQR(${1:Number s})" },
      {"trigger": "cc.TransitionSlideInL.create", "contents": "TransitionSlideInL.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.ArrayContainsObject", "contents": "cc.ArrayContainsObject(${1:Array arr}, ${2:* findObj})" },
      {"trigger": "cc.DOM.forSprite", "contents": "DOM.forSprite(${1: x})" },
      {"trigger": "cc.kmMat4Multiply", "contents": "cc.kmMat4Multiply()" },
      {"trigger": "cc.BlendFunc", "contents": "cc.BlendFunc(${1:Number src1}, ${2:Number dst1})" },
      {"trigger": "cc.AffineTransformInvert", "contents": "AffineTransformInvert(${1:AffineTransform t})" },
      {"trigger": "cc.Color4B", "contents": "cc.Color4B(${1:Number r1}, ${2:Number g1}, ${3:Number b1}, ${4:Number a1})" },
      {"trigger": "cc.kmMat4Assign", "contents": "cc.kmMat4Assign()" },
      {"trigger": "cc.pNormalize", "contents": "pNormalize(${1:Point v})" },
      {"trigger": "cc.Color4F", "contents": "cc.Color4F(${1:Number r1}, ${2:Number g1}, ${3:Number b1}, ${4:Number a1})" },
      {"trigger": "cc.unzipBase64AsArray", "contents": "cc.unzipBase64AsArray(${1:String input}, ${2:Number bytes})" },
      {"trigger": "cc.glBlendFunc", "contents": "cc.glBlendFunc(${1:Number sfactor}, ${2:Number dfactor})" },
      {"trigger": "cc.Sprite.create", "contents": "Sprite.create(${1:String fileName}, ${2:Rect rect})" },
      {"trigger": "cc.ParticleExplosion.create", "contents": "ParticleExplosion.create()" },
      {"trigger": "cc.SpriteFrameCache.getInstance", "contents": "SpriteFrameCache.getInstance()" },
      {"trigger": "cc.rectContainsPoint", "contents": "rectContainsPoint(${1:Rect rect}, ${2:Point point})" },
      {"trigger": "cc.AffineTransformRotate", "contents": "AffineTransformRotate(${1:AffineTransform aTransform}, ${2:Number anAngle})" },
      {"trigger": "cc.SpriteFrame.create", "contents": "SpriteFrame.create(${1:string filename}, ${2:Rect rect}, ${3:Boolean rotated}, ${4:Point offset}, ${5:Size originalSize})" },
      {"trigger": "cc.PointFromString", "contents": "cc.PointFromString(${1:String content})" },
      {"trigger": "cc.utf8_trim_from", "contents": "cc.utf8_trim_from(${1:Array str}, ${2:Number index})" },
      {"trigger": "cc.Animate.create", "contents": "Animate.create(${1:Animation animation})" },
      {"trigger": "cc.RectFromString", "contents": "cc.RectFromString(${1:String content})" },
      {"trigger": "cc.HashTimerEntry", "contents": "HashTimerEntry(${1:Array timers}, ${2:Class target}, ${3:Number timerIndex}, ${4:Timer currentTimer}, ${5:Boolean currentTimerSalvaged}, ${6:Boolean paused}, ${7:Array hh})" },
      {"trigger": "cc.TextureCache.getInstance", "contents": "TextureCache.getInstance()" },
      {"trigger": "cc.Vertex2", "contents": "cc.Vertex2(${1:Number x}, ${2:Number y})" },
      {"trigger": "cc.tgaLoadHeader", "contents": "tgaLoadHeader(${1:Array buffer}, ${2:Number bufSize}, ${3:ImageTGA psInfo})" },
      {"trigger": "cc.pLength", "contents": "pLength(${1: {Point}})" },
      {"trigger": "cc.ProgressFromTo.create", "contents": "ProgressFromTo.create(${1:Number duration}, ${2:Number fromPercentage}, ${3:Number toPercentage})" },
      {"trigger": "cc.unzipBase64", "contents": "cc.unzipBase64(${1:String input})" },
      {"trigger": "cc.PointSprite", "contents": "PointSprite(${1:Vertex2F pos1}, ${2:Color4B color1}, ${3:Number size1})" },
      {"trigger": "cc.AffineTransformIdentity", "contents": "cc.AffineTransformIdentity()" },
      {"trigger": "cc.EaseExponentialIn.create", "contents": "EaseExponentialIn.create(${1:ActionInterval action})" },
      {"trigger": "cc.rectContainsRect", "contents": "rectContainsRect(${1:Rect rect1}, ${2:Rect rect2})" },
      {"trigger": "cc.Texture2D.PVRImagesHavePremultipliedAlpha", "contents": "Texture2D.PVRImagesHavePremultipliedAlpha(${1: haveAlphaPremultiplied})" },
      {"trigger": "cc.Repeat.create", "contents": "Repeat.create(${1:FiniteTimeAction action}, ${2:Number times})" },
      {"trigger": "cc.EaseBackIn.create", "contents": "EaseBackIn.create(${1:ActionInterval action})" },
      {"trigger": "cc.DEGREES_TO_RADIANS", "contents": "cc.DEGREES_TO_RADIANS(${1:Number angle})" },
      {"trigger": "cc.EaseElasticIn.create", "contents": "EaseElasticIn.create(${1:ActionInterval action}, ${2:Number [period=]})" },
      {"trigger": "cc.DelayTime.create", "contents": "DelayTime.create(${1:Number d})" },
      {"trigger": "cc.kmPlaneFromPoints", "contents": "cc.kmPlaneFromPoints()" },
      {"trigger": "cc.TouchDispatcher._setPreTouch", "contents": "TouchDispatcher._setPreTouch(${1:Touch touch})" },
      {"trigger": "cc.TiledGrid3DAction.create", "contents": "TiledGrid3DAction.create(${1:Number duration}, ${2:Size gridSize})" },
      {"trigger": "cc.IMEKeyboardNotificationInfo", "contents": "IMEKeyboardNotificationInfo(${1:Rect begin}, ${2:Rect end}, ${3:Number duration})" },
      {"trigger": "cc.ImageTGA", "contents": "cc.ImageTGA(${1:Number status}, ${2:Number type}, ${3:Number pixelDepth}, ${4:Number width}, ${5:Number height}, ${6:Array imageData}, ${7:Number flipped})" },
      {"trigger": "cc.SkewTo.create", "contents": "SkewTo.create(${1:Number t}, ${2:Number sx}, ${3:Number sy})" },
      {"trigger": "cc.Scene.create", "contents": "Scene.create()" },
      {"trigger": "cc.StandardTouchHandler.create", "contents": "StandardTouchHandler.create(${1:Object delegate}, ${2:Number priority})" },
      {"trigger": "cc.p", "contents": "cc.p(${1:Number x}, ${2:Number y})" },
      {"trigger": "cc.Configuration.purgeConfiguration", "contents": "Configuration.purgeConfiguration()" },
      {"trigger": "cc.ParticleSystem.create", "contents": "ParticleSystem.create(${1:String plistFile})" },
      {"trigger": "cc.CardinalSplineAt", "contents": "CardinalSplineAt(${1:Point p0}, ${2:Point p1}, ${3:Point p2}, ${4:Point p3}, ${5:Number tension}, ${6:Number t})" },
      {"trigger": "cc.rectOverlapsRect", "contents": "rectOverlapsRect(${1:Rect rectA}, ${2:Rect rectB})" },
      {"trigger": "cc.GLProgram.create", "contents": "GLProgram.create(${1:String vShaderFileName}, ${2:String fShaderFileName})" },
      {"trigger": "cc.registerStandardDelegate", "contents": "cc.registerStandardDelegate(${1:Object delegate}, ${2:Number [priority=]})" },
      {"trigger": "cc.pSameAs", "contents": "pSameAs(${1:Point A}, ${2:Point B})" },
      {"trigger": "cc.TransitionSceneOriented.create", "contents": "TransitionSceneOriented.create(${1:Number t}, ${2:Scene scene}, ${3:TRANSITION_ORIENTATION_LEFT_OVER|TRANSITION_ORIENTATION_RIGHT_OVER|TRANSITION_ORIENTATION_UP_OVER|TRANSITION_ORIENTATION_DOWN_OVER orientation})" },
      {"trigger": "cc.DOM.convert", "contents": "DOM.convert(${1:Sprite|MenuItem|Array nodeObject})" },
      {"trigger": "cc.TouchDispatcher._deletePreTouchWithSameId", "contents": "TouchDispatcher._deletePreTouchWithSameId(${1:Touch touch})" },
      {"trigger": "cc.convertHexNumToColor3B", "contents": "cc.convertHexNumToColor3B(${1:String clrSt})" },
      {"trigger": "cc.glInvalidateStateCache", "contents": "cc.glInvalidateStateCache()" },
      {"trigger": "cc.StringToArray", "contents": "cc.StringToArray(${1:String input})" },
      {"trigger": "cc.PointMake", "contents": "cc.PointMake(${1:Number x}, ${2:Number y})" },
      {"trigger": "cc.Grid3D.create", "contents": "Grid3D.create(${1:Size gridSize}, ${2:Texture2D [texture=]}, ${3:Boolean [flipped=]})" },
      {"trigger": "cc.c3b", "contents": "cc.c3b(${1:Number r}, ${2:Number g}, ${3:Number b})" },
      {"trigger": "cc.TransitionProgressOutIn.create", "contents": "TransitionProgressOutIn.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.kmMat4RotationToAxisAngle", "contents": "cc.kmMat4RotationToAxisAngle()" },
      {"trigger": "cc.TransitionFadeUp.create", "contents": "TransitionFadeUp.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.ScaleBy.create", "contents": "ScaleBy.create(${1:Number duration}, ${2:Number sx}, ${3:Number|Null [sy=]})" },
      {"trigger": "cc.kmMat4RotationQuaternion", "contents": "cc.kmMat4RotationQuaternion()" },
      {"trigger": "cc.GridSize", "contents": "cc.GridSize(${1:Number x1}, ${2:Number y1})" },
      {"trigger": "cc.Vertex2F", "contents": "cc.Vertex2F(${1:Number x1}, ${2:Number y1})" },
      {"trigger": "cc.kmMat4IsIdentity", "contents": "cc.kmMat4IsIdentity()" },
      {"trigger": "cc.pRPerp", "contents": "pRPerp(${1:Point point})" },
      {"trigger": "cc.ArrayAppendObjectToIndex", "contents": "cc.ArrayAppendObjectToIndex(${1:Array arr}, ${2:* addObj}, ${3:Number index})" },
      {"trigger": "cc.Menu.create", "contents": "Menu.create()" },
      {"trigger": "cc.FileUtils.getInstance", "contents": "FileUtils.getInstance()" },
      {"trigger": "cc.EaseElasticOut.create", "contents": "EaseElasticOut.create(${1:ActionInterval action}, ${2:Number [period=0.3]})" },
      {"trigger": "cc._texParams", "contents": "cc._texParams()" },
      {"trigger": "cc.pClamp", "contents": "cc.pClamp(${1:Point p}, ${2:Number min_inclusive}, ${3:Number max_inclusive})" },
      {"trigger": "cc.DOM.placeHolder", "contents": "DOM.placeHolder(${1: x})" },
      {"trigger": "cc.RectMake", "contents": "cc.RectMake(${1:Number x}, ${2:Number y}, ${3:Number width}, ${4:Number height})" },
      {"trigger": "cc.ListEntry", "contents": "ListEntry(${1:ListEntry prev}, ${2:ListEntry next}, ${3:Class target}, ${4:Number priority}, ${5:Boolean paused}, ${6:Boolean markedForDeletion})" },
      {"trigger": "cc.RGB_PREMULTIPLY_APLHA", "contents": "cc.RGB_PREMULTIPLY_APLHA(${1:Number vr}, ${2:Number vg}, ${3:Number vb}, ${4:Number va})" },
      {"trigger": "cc.FadeOutTRTiles.create", "contents": "FadeOutTRTiles.create(${1: duration}, ${2: gridSize})" },
      {"trigger": "cc.vertexLineIntersect", "contents": "cc.vertexLineIntersect(${1:Number Ax}, ${2:Number Ay}, ${3:Number Bx}, ${4:Number By}, ${5:Number Cx}, ${6:Number Cy}, ${7:Number Dx}, ${8:Number Dy})" },
      {"trigger": "cc.clampf", "contents": "cc.clampf(${1:Number value}, ${2:Number min_inclusive}, ${3:Number max_inclusive})" },
      {"trigger": "cc.V2F_C4B_T2F_QuadZero", "contents": "cc.V2F_C4B_T2F_QuadZero()" },
      {"trigger": "cc.pDot", "contents": "pDot(${1:Point v1}, ${2:Point v2})" },
      {"trigger": "cc.Quad3", "contents": "Quad3(${1:Vertex3F bl1}, ${2:Vertex3F br1}, ${3:Vertex3F tl1}, ${4:Vertex3F tr1})" },
      {"trigger": "cc.Quad2", "contents": "Quad2(${1:Vertex2F tl1}, ${2:Vertex2F tr1}, ${3:Vertex2F bl1}, ${4:Vertex2F br1})" },
      {"trigger": "cc.ProgressTo.create", "contents": "ProgressTo.create(${1:Number duration}, ${2:Number percent})" },
      {"trigger": "cc.POINT_POINTS_TO_PIXELS", "contents": "POINT_POINTS_TO_PIXELS(${1:Point points})" },
      {"trigger": "cc.size", "contents": "cc.size(${1:Number w}, ${2:Number h})" },
      {"trigger": "cc.sizeEqualToSize", "contents": "sizeEqualToSize(${1:Size size1}, ${2:Size size2})" },
      {"trigger": "cc.glUseProgram", "contents": "cc.glUseProgram(${1:WebGLProgram program})" },
      {"trigger": "cc.TransitionZoomFlipY.create", "contents": "TransitionZoomFlipY.create(${1:Number t}, ${2:Scene scene}, ${3:TRANSITION_ORIENTATION_LEFT_OVER|TRANSITION_ORIENTATION_RIGHT_OVER|TRANSITION_ORIENTATION_UP_OVER|TRANSITION_ORIENTATION_DOWN_OVER o})" },
      {"trigger": "cc.CardinalSplineTo.create", "contents": "CardinalSplineTo.create(${1:Number duration}, ${2:Array points}, ${3:Number tension})" },
      {"trigger": "cc.MenuItemLabel.create", "contents": "MenuItemLabel.create(${1:Node label}, ${2:function|String|Null selector}, ${3:Node|Null target})" },
      {"trigger": "cc.pPerp", "contents": "pPerp(${1:Point point})" },
      {"trigger": "cc.ArrayVerifyType", "contents": "cc.ArrayVerifyType(${1:Array arr}, ${2:function type})" },
      {"trigger": "cc.CallFunc.create", "contents": "CallFunc.create(${1:function selector}, ${2:object|null [selectorTarget=]}, ${3:*|Null [data=]})" },
      {"trigger": "cc.unregisterTouchDelegate", "contents": "cc.unregisterTouchDelegate(${1: delegate})" },
      {"trigger": "cc.CatmullRomBy.create", "contents": "CatmullRomBy.create()" },
      {"trigger": "cc.clone", "contents": "cc.clone(${1:object|Array obj})" },
      {"trigger": "cc.MotionStreak.create", "contents": "MotionStreak.create(${1:Number fade}, ${2:Number minSeg}, ${3:Number stroke}, ${4:Number color}, ${5:string|Texture2D texture})" },
      {"trigger": "cc.SpriteFrameCache.purgeSharedSpriteFrameCache", "contents": "SpriteFrameCache.purgeSharedSpriteFrameCache()" },
      {"trigger": "cc.TextureAtlas.createWithTexture", "contents": "TextureAtlas.createWithTexture(${1:Image|Texture2D texture}, ${2:Number capacity})" },
      {"trigger": "cc.EaseExponentialOut.create", "contents": "EaseExponentialOut.create(${1:ActionInterval action})" },
      {"trigger": "cc.kmMat4GetUpVec3", "contents": "cc.kmMat4GetUpVec3()" },
      {"trigger": "cc.pFromSize", "contents": "pFromSize(${1:Size s})" },
      {"trigger": "cc.OrbitCamera.create", "contents": "OrbitCamera.create(${1:Number t}, ${2:Number radius}, ${3:Number deltaRadius}, ${4:Number angleZ}, ${5:Number deltaAngleZ}, ${6:Number angleX}, ${7:Number deltaAngleX})" },
      {"trigger": "cc.Screen.getInstance", "contents": "Screen.getInstance()" },
      {"trigger": "cc.rectIntersectsRect", "contents": "rectIntersectsRect(${1:Rect rectA}, ${2:Rect rectB})" },
      {"trigger": "cc.kmMat4Fill", "contents": "cc.kmMat4Fill()" },
      {"trigger": "cc.TransitionMoveInT.create", "contents": "TransitionMoveInT.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.isspace_unicode", "contents": "cc.isspace_unicode(${1:String ch})" },
      {"trigger": "cc.Sequence.create", "contents": "Sequence.create(${1:Array|FiniteTimeAction tempArray})" },
      {"trigger": "cc.MessageBox", "contents": "cc.MessageBox(${1:String message})" },
      {"trigger": "cc.MenuItemFont.fontName", "contents": "MenuItemFont.fontName()" },
      {"trigger": "cc.Ripple3D.create", "contents": "Ripple3D.create(${1:Number duration}, ${2:Size gridSize}, ${3:Point position}, ${4:Number radius}, ${5:Number waves}, ${6:Number amplitude})" },
      {"trigger": "cc.Follow.create", "contents": "Follow.create(${1:Node followedNode}, ${2:Rect rect})" },
      {"trigger": "cc.Codec.GZip.gunzip", "contents": "Codec.GZip.gunzip(${1: string})" },
      {"trigger": "cc.Loader.getInstance", "contents": "Loader.getInstance()" },
      {"trigger": "cc.StopGrid.create", "contents": "StopGrid.create()" },
      {"trigger": "cc.AffineTransform", "contents": "cc.AffineTransform(${1:Number a}, ${2:Number b}, ${3:Number c}, ${4:Number d}, ${5:Number tx}, ${6:Number ty})" },
      {"trigger": "cc.vertex3", "contents": "cc.vertex3(${1:Number x}, ${2:Number y}, ${3:Number z})" },
      {"trigger": "cc.pAngleSigned", "contents": "pAngleSigned(${1:Point a}, ${2:Point b})" },
      {"trigger": "cc.Camera.getZEye", "contents": "Camera.getZEye()" },
      {"trigger": "cc.Blink.create", "contents": "Blink.create(${1:Number duration}, ${2: blinks})" },
      {"trigger": "cc.ParticleRain.create", "contents": "ParticleRain.create()" },
      {"trigger": "cc.c4f", "contents": "cc.c4f(${1:Number r}, ${2:Number g}, ${3:Number b}, ${4:Number a})" },
      {"trigger": "cc.Texture2D.defaultAlphaPixelFormat", "contents": "Texture2D.defaultAlphaPixelFormat()" },
      {"trigger": "cc.AffineTransformMake", "contents": "cc.AffineTransformMake(${1:Number a}, ${2:Number b}, ${3:Number c}, ${4:Number d}, ${5:Number tx}, ${6:Number ty})" },
      {"trigger": "cc.LayerGradient.create", "contents": "LayerGradient.create(${1:Color3B start}, ${2:Color3B end}, ${3:Point|Null v})" },
      {"trigger": "cc.pFuzzyEqual", "contents": "pFuzzyEqual(${1:Point a}, ${2:Point b}, ${3:Number variance})" },
      {"trigger": "cc.MenuItemToggle.create", "contents": "MenuItemToggle.create()" },
      {"trigger": "cc.initDebugSetting", "contents": "cc.initDebugSetting()" },
      {"trigger": "cc.FlipY.create", "contents": "FlipY.create(${1:Boolean y})" },
      {"trigger": "cc.V2F_C4B_T2F", "contents": "V2F_C4B_T2F(${1:Vertex2F vertices1}, ${2:Color4B colors1}, ${3:Tex2F texCoords1})" },
      {"trigger": "cc.computeImageFormatType", "contents": "cc.computeImageFormatType(${1:String filename})" },
      {"trigger": "cc.ParticleSmoke.create", "contents": "ParticleSmoke.create()" },
      {"trigger": "cc.TransitionRotoZoom.create", "contents": "TransitionRotoZoom.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.EaseBounceInOut.create", "contents": "EaseBounceInOut.create(${1:ActionInterval action})" },
      {"trigger": "cc.kmMat4RotationZ", "contents": "cc.kmMat4RotationZ()" },
      {"trigger": "cc.kmMat4RotationX", "contents": "cc.kmMat4RotationX()" },
      {"trigger": "cc.kmMat4RotationY", "contents": "cc.kmMat4RotationY()" },
      {"trigger": "cc.ParticleFireworks.create", "contents": "ParticleFireworks.create()" },
      {"trigger": "cc.kmAABBAssign", "contents": "cc.kmAABBAssign()" },
      {"trigger": "cc.NODE_DRAW_SETUP", "contents": "NODE_DRAW_SETUP(${1:Node node})" },
      {"trigger": "cc.EaseSineOut.create", "contents": "EaseSineOut.create(${1:ActionInterval action})" },
      {"trigger": "cc.Tile", "contents": "Tile(${1:Point [position=Point_ZERO]}, ${2:Point [startPosition=Point_ZERO]}, ${3:Size [delta=Point_ZERO]})" },
      {"trigger": "cc.Spawn.create", "contents": "Spawn.create(${1:Array|FiniteTimeAction tempArray})" },
      {"trigger": "cc.c4BFromccc4F", "contents": "c4BFromccc4F(${1:Color4F c})" },
      {"trigger": "cc.TransitionPageTurn.create", "contents": "TransitionPageTurn.create(${1:Number t}, ${2:Scene scene}, ${3:Boolean backwards})" },
      {"trigger": "cc.MenuItem.create", "contents": "MenuItem.create(${1:function|String callback}, ${2:Node target})" },
      {"trigger": "cc.RotateTo.create", "contents": "RotateTo.create(${1:Number duration}, ${2:Number deltaAngleX}, ${3:Number [deltaAngleY=]})" },
      {"trigger": "cc.WebAudioSFX", "contents": "cc.WebAudioSFX()" },
      {"trigger": "cc.dumpConfig", "contents": "cc.dumpConfig()" },
      {"trigger": "cc.pSegmentIntersect", "contents": "pSegmentIntersect(${1:Point A}, ${2:Point B}, ${3:Point C}, ${4:Point D})" },
      {"trigger": "cc.rectEqualToRect", "contents": "rectEqualToRect(${1:Rect rect1}, ${2:Rect rect2})" },
      {"trigger": "cc.EaseSineIn.create", "contents": "EaseSineIn.create(${1:ActionInterval action})" },
      {"trigger": "cc.ParticleSun.create", "contents": "ParticleSun.create()" },
      {"trigger": "cc.tImageSource", "contents": "cc.tImageSource(${1:Array||String data}, ${2:Number size}, ${3:Number offset})" },
      {"trigger": "cc.TransitionProgressRadialCW.create", "contents": "TransitionProgressRadialCW.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.TransitionFadeBL.create", "contents": "TransitionFadeBL.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.Waves.create", "contents": "Waves.create(${1:Number duration}, ${2:Size gridSize}, ${3:Number waves}, ${4:Number amplitude}, ${5:Boolean horizontal}, ${6:Boolean vertical})" },
      {"trigger": "cc.ReverseTime.create", "contents": "ReverseTime.create(${1:FiniteTimeAction action})" },
      {"trigger": "cc.ArrayRemoveObject", "contents": "cc.ArrayRemoveObject(${1:Array arr}, ${2:* delObj})" },
      {"trigger": "cc.CardinalSplineBy.create", "contents": "CardinalSplineBy.create(${1:Number duration}, ${2:Array points}, ${3:Number tension})" },
      {"trigger": "cc.Animation.create", "contents": "Animation.create(${1:Array frames}, ${2:Number delay}, ${3:Number loops})" },
      {"trigger": "cc.AffineTransformTranslate", "contents": "AffineTransformTranslate(${1:AffineTransform t}, ${2:Number tx}, ${3:Number ty})" },
      {"trigger": "cc.MenuItemFont.create", "contents": "MenuItemFont.create(${1:String value}, ${2:String|function|Null callback}, ${3:Node|Null target})" },
      {"trigger": "cc.Color3B", "contents": "Color3B(${1:Number | Color3B r1}, ${2:Number g1}, ${3:Number b1})" },
      {"trigger": "cc.V2F_C4F_T2F", "contents": "V2F_C4F_T2F(${1:Vertex2F vertices1}, ${2:Color4F colors1}, ${3:Tex2F texCoords1})" },
      {"trigger": "cc.RenderTexture.create", "contents": "RenderTexture.create(${1:Number width}, ${2:Number height}, ${3:IMAGE_FORMAT_JPEG|IMAGE_FORMAT_PNG|IMAGE_FORMAT_RAWDATA format}, ${4:Number depthStencilFormat})" },
      {"trigger": "cc.bezierAt", "contents": "cc.bezierAt(${1:Number a}, ${2:Number b}, ${3:Number c}, ${4:Number d}, ${5:Number t})" },
      {"trigger": "cc.kmMat4PerspectiveProjection", "contents": "cc.kmMat4PerspectiveProjection()" },
      {"trigger": "cc.DOM.parentDOM", "contents": "DOM.parentDOM(${1: x})" },
      {"trigger": "cc.pointEqualToPoint", "contents": "pointEqualToPoint(${1:Point point1}, ${2:Point point2})" },
      {"trigger": "cc.Codec.GZip.prototype.gunzip", "contents": "Codec.GZip.prototype.gunzip()" },
      {"trigger": "cc.ParticleGalaxy.create", "contents": "ParticleGalaxy.create()" },
      {"trigger": "cc.MenuItemImage.create", "contents": "MenuItemImage.create(${1:String normalImage}, ${2:String selectedImage}, ${3:String|Node three}, ${4:String|function|Null four}, ${5:Node|String|function|Null five})" },
      {"trigger": "cc.ParticleBatchNode.createWithTexture", "contents": "ParticleBatchNode.createWithTexture(${1:Texture2D|HTMLImageElement|HTMLCanvasElement texture}, ${2:Number capacity})" },
      {"trigger": "cc.glEnable", "contents": "cc.glEnable(${1:Number flags})" },
      {"trigger": "cc.FNTConfigLoadFile", "contents": "cc.FNTConfigLoadFile(${1:String fntFile})" },
      {"trigger": "cc.TransitionProgressInOut.create", "contents": "TransitionProgressInOut.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.TransitionFade.create", "contents": "TransitionFade.create(${1:Number t}, ${2:Scene scene}, ${3:Color3B color})" },
      {"trigger": "cc.FadeIn.create", "contents": "FadeIn.create(${1:Number duration})" },
      {"trigger": "cc.Grid3DAction.create", "contents": "Grid3DAction.create(${1:Number duration}, ${2:Size gridSize})" },
      {"trigger": "cc.TMXMapInfo.create", "contents": "TMXMapInfo.create(${1:String tmxFile}, ${2:String resourcePath})" },
      {"trigger": "cc.EaseBounce.create", "contents": "EaseBounce.create(${1:ActionInterval action})" },
      {"trigger": "cc.LabelTTF.createWithFontDefinition", "contents": "LabelTTF.createWithFontDefinition(${1:String text}, ${2:FontDefinition textDefinition})" },
      {"trigger": "cc.IMEDispatcher.getInstance", "contents": "IMEDispatcher.getInstance()" },
      {"trigger": "cc.ArrayRemoveObjectAtIndex", "contents": "cc.ArrayRemoveObjectAtIndex(${1:Array arr}, ${2:Number index})" },
      {"trigger": "cc.c4FFromccc3B", "contents": "c4FFromccc3B(${1:Color3B c})" },
      {"trigger": "cc.ProgressTimer.create", "contents": "ProgressTimer.create(${1:Sprite sprite})" },
      {"trigger": "cc.kmAABBScale", "contents": "cc.kmAABBScale()" },
      {"trigger": "cc.EaseElasticInOut.create", "contents": "EaseElasticInOut.create(${1:ActionInterval action}, ${2:Number [period=0.3]})" },
      {"trigger": "cc.DOM.addMethods", "contents": "DOM.addMethods(${1: x})" },
      {"trigger": "cc.c4b", "contents": "cc.c4b(${1:Number r}, ${2:Number g}, ${3:Number b}, ${4:Number a})" },
      {"trigger": "cc.TransitionProgressHorizontal.create", "contents": "TransitionProgressHorizontal.create(${1:Number t}, ${2:Scene scene})" },
      {"trigger": "cc.tex2", "contents": "cc.tex2(${1:Number u}, ${2:Number v})" },
      {"trigger": "cc.kmMat4AreEqual", "contents": "cc.kmMat4AreEqual()" },
      {"trigger": "cc.EaseSineInOut.create", "contents": "EaseSineInOut.create(${1:ActionInterval action})" },
      {"trigger": "cc.AffineTransformConcat", "contents": "AffineTransformConcat(${1:AffineTransform t1}, ${2:AffineTransform t2})" },
      {"trigger": "cc.Camera", "contents": "cc.Camera" },
      {"trigger": "cc.Configuration", "contents": "cc.Configuration" },
      {"trigger": "cc.DirectorDelegate", "contents": "cc.DirectorDelegate" },
      {"trigger": "cc.Director", "contents": "cc.Director" },
      {"trigger": "cc.DisplayLinkDirector", "contents": "cc.DisplayLinkDirector" },
      {"trigger": "cc.DrawingPrimitive", "contents": "cc.DrawingPrimitive" },
      {"trigger": "cc.DrawingPrimitiveCanvas", "contents": "cc.DrawingPrimitiveCanvas" },
      {"trigger": "cc.DrawingPrimitiveWebGL", "contents": "cc.DrawingPrimitiveWebGL" },
      {"trigger": "cc.Loader", "contents": "cc.Loader" },
      {"trigger": "cc.LoaderScene", "contents": "cc.LoaderScene" },
      {"trigger": "cc.Timer", "contents": "cc.Timer" },
      {"trigger": "cc.Scheduler", "contents": "cc.Scheduler" },
      {"trigger": "cc.AudioEngine", "contents": "cc.AudioEngine" },
      {"trigger": "cc.SimpleAudioEngine", "contents": "cc.SimpleAudioEngine" },
      {"trigger": "cc.WebAudioEngine", "contents": "cc.WebAudioEngine" },
      {"trigger": "cc.Action", "contents": "cc.Action" },
      {"trigger": "cc.Speed", "contents": "cc.Speed" },
      {"trigger": "cc.ActionCamera", "contents": "cc.ActionCamera" },
      {"trigger": "cc.OrbitCamera", "contents": "cc.OrbitCamera" },
      {"trigger": "cc.CardinalSplineTo", "contents": "cc.CardinalSplineTo" },
      {"trigger": "cc.CardinalSplineBy", "contents": "cc.CardinalSplineBy" },
      {"trigger": "cc.CatmullRomTo", "contents": "cc.CatmullRomTo" },
      {"trigger": "cc.CatmullRomBy", "contents": "cc.CatmullRomBy" },
      {"trigger": "cc.EaseRateAction", "contents": "cc.EaseRateAction" },
      {"trigger": "cc.EaseIn", "contents": "cc.EaseIn" },
      {"trigger": "cc.EaseOut", "contents": "cc.EaseOut" },
      {"trigger": "cc.EaseInOut", "contents": "cc.EaseInOut" },
      {"trigger": "cc.EaseExponentialIn", "contents": "cc.EaseExponentialIn" },
      {"trigger": "cc.EaseExponentialOut", "contents": "cc.EaseExponentialOut" },
      {"trigger": "cc.EaseExponentialInOut", "contents": "cc.EaseExponentialInOut" },
      {"trigger": "cc.EaseSineIn", "contents": "cc.EaseSineIn" },
      {"trigger": "cc.EaseSineOut", "contents": "cc.EaseSineOut" },
      {"trigger": "cc.EaseSineInOut", "contents": "cc.EaseSineInOut" },
      {"trigger": "cc.EaseElastic", "contents": "cc.EaseElastic" },
      {"trigger": "cc.EaseElasticIn", "contents": "cc.EaseElasticIn" },
      {"trigger": "cc.EaseElasticOut", "contents": "cc.EaseElasticOut" },
      {"trigger": "cc.EaseElasticInOut", "contents": "cc.EaseElasticInOut" },
      {"trigger": "cc.EaseBounce", "contents": "cc.EaseBounce" },
      {"trigger": "cc.EaseBounceIn", "contents": "cc.EaseBounceIn" },
      {"trigger": "cc.EaseBounceOut", "contents": "cc.EaseBounceOut" },
      {"trigger": "cc.EaseBounceInOut", "contents": "cc.EaseBounceInOut" },
      {"trigger": "cc.EaseBackIn", "contents": "cc.EaseBackIn" },
      {"trigger": "cc.EaseBackOut", "contents": "cc.EaseBackOut" },
      {"trigger": "cc.EaseBackInOut", "contents": "cc.EaseBackInOut" },
      {"trigger": "cc.GridAction", "contents": "cc.GridAction" },
      {"trigger": "cc.Grid3DAction", "contents": "cc.Grid3DAction" },
      {"trigger": "cc.TiledGrid3DAction", "contents": "cc.TiledGrid3DAction" },
      {"trigger": "cc.StopGrid", "contents": "cc.StopGrid" },
      {"trigger": "cc.ReuseGrid", "contents": "cc.ReuseGrid" },
      {"trigger": "cc.Waves3D", "contents": "cc.Waves3D" },
      {"trigger": "cc.FlipX3D", "contents": "cc.FlipX3D" },
      {"trigger": "cc.FlipY3D", "contents": "cc.FlipY3D" },
      {"trigger": "cc.Lens3D", "contents": "cc.Lens3D" },
      {"trigger": "cc.Ripple3D", "contents": "cc.Ripple3D" },
      {"trigger": "cc.Shaky3D", "contents": "cc.Shaky3D" },
      {"trigger": "cc.Liquid", "contents": "cc.Liquid" },
      {"trigger": "cc.Waves", "contents": "cc.Waves" },
      {"trigger": "cc.Twirl", "contents": "cc.Twirl" },
      {"trigger": "cc.ActionInstant", "contents": "cc.ActionInstant" },
      {"trigger": "cc.Show", "contents": "cc.Show" },
      {"trigger": "cc.Hide", "contents": "cc.Hide" },
      {"trigger": "cc.ToggleVisibility", "contents": "cc.ToggleVisibility" },
      {"trigger": "cc.FlipX", "contents": "cc.FlipX" },
      {"trigger": "cc.FlipY", "contents": "cc.FlipY" },
      {"trigger": "cc.Place", "contents": "cc.Place" },
      {"trigger": "cc.CallFunc", "contents": "cc.CallFunc" },
      {"trigger": "cc.ActionInterval", "contents": "cc.ActionInterval" },
      {"trigger": "cc.Sequence", "contents": "cc.Sequence" },
      {"trigger": "cc.Repeat", "contents": "cc.Repeat" },
      {"trigger": "cc.Spawn", "contents": "cc.Spawn" },
      {"trigger": "cc.RotateTo", "contents": "cc.RotateTo" },
      {"trigger": "cc.RotateBy", "contents": "cc.RotateBy" },
      {"trigger": "cc.MoveBy", "contents": "cc.MoveBy" },
      {"trigger": "cc.MoveTo", "contents": "cc.MoveTo" },
      {"trigger": "cc.SkewTo", "contents": "cc.SkewTo" },
      {"trigger": "cc.SkewBy", "contents": "cc.SkewBy" },
      {"trigger": "cc.JumpBy", "contents": "cc.JumpBy" },
      {"trigger": "cc.JumpTo", "contents": "cc.JumpTo" },
      {"trigger": "cc.BezierBy", "contents": "cc.BezierBy" },
      {"trigger": "cc.BezierTo", "contents": "cc.BezierTo" },
      {"trigger": "cc.ScaleTo", "contents": "cc.ScaleTo" },
      {"trigger": "cc.ScaleBy", "contents": "cc.ScaleBy" },
      {"trigger": "cc.Blink", "contents": "cc.Blink" },
      {"trigger": "cc.FadeIn", "contents": "cc.FadeIn" },
      {"trigger": "cc.FadeOut", "contents": "cc.FadeOut" },
      {"trigger": "cc.FadeTo", "contents": "cc.FadeTo" },
      {"trigger": "cc.TintTo", "contents": "cc.TintTo" },
      {"trigger": "cc.TintBy", "contents": "cc.TintBy" },
      {"trigger": "cc.DelayTime", "contents": "cc.DelayTime" },
      {"trigger": "cc.ReverseTime", "contents": "cc.ReverseTime" },
      {"trigger": "cc.Animate", "contents": "cc.Animate" },
      {"trigger": "cc.TargetedAction", "contents": "cc.TargetedAction" },
      {"trigger": "cc.HashElement", "contents": "cc.HashElement" },
      {"trigger": "cc.ActionManager", "contents": "cc.ActionManager" },
      {"trigger": "cc.PageTurn3D", "contents": "cc.PageTurn3D" },
      {"trigger": "cc.ProgressTo", "contents": "cc.ProgressTo" },
      {"trigger": "cc.ProgressFromTo", "contents": "cc.ProgressFromTo" },
      {"trigger": "cc.ShakyTiles3D", "contents": "cc.ShakyTiles3D" },
      {"trigger": "cc.ShatteredTiles3D", "contents": "cc.ShatteredTiles3D" },
      {"trigger": "cc.ShuffleTiles", "contents": "cc.ShuffleTiles" },
      {"trigger": "cc.FadeOutTRTiles", "contents": "cc.FadeOutTRTiles" },
      {"trigger": "cc.FadeOutBLTiles", "contents": "cc.FadeOutBLTiles" },
      {"trigger": "cc.FadeOutUpTiles", "contents": "cc.FadeOutUpTiles" },
      {"trigger": "cc.FadeOutDownTiles", "contents": "cc.FadeOutDownTiles" },
      {"trigger": "cc.TurnOffTiles", "contents": "cc.TurnOffTiles" },
      {"trigger": "cc.WavesTiles3D", "contents": "cc.WavesTiles3D" },
      {"trigger": "cc.JumpTiles3D", "contents": "cc.JumpTiles3D" },
      {"trigger": "cc.SplitRows", "contents": "cc.SplitRows" },
      {"trigger": "cc.SplitCols", "contents": "cc.SplitCols" },
      {"trigger": "cc.ActionTweenDelegate", "contents": "cc.ActionTweenDelegate" },
      {"trigger": "cc.ActionTween", "contents": "cc.ActionTween" },
      {"trigger": "cc.AtlasNode", "contents": "cc.AtlasNode" },
      {"trigger": "cc.NodeRGBA", "contents": "cc.NodeRGBA" },
      {"trigger": "cc.DrawNodeCanvas", "contents": "cc.DrawNodeCanvas" },
      {"trigger": "cc.DrawNodeWebGL", "contents": "cc.DrawNodeWebGL" },
      {"trigger": "cc.GridBase", "contents": "cc.GridBase" },
      {"trigger": "cc.Grid3D", "contents": "cc.Grid3D" },
      {"trigger": "cc.TiledGrid3D", "contents": "cc.TiledGrid3D" },
      {"trigger": "cc.KeyboardDelegate", "contents": "cc.KeyboardDelegate" },
      {"trigger": "cc.KeyboardHandler", "contents": "cc.KeyboardHandler" },
      {"trigger": "cc.KeyboardDispatcher", "contents": "cc.KeyboardDispatcher" },
      {"trigger": "cc.LabelAtlas", "contents": "cc.LabelAtlas" },
      {"trigger": "cc.BMFontConfiguration", "contents": "cc.BMFontConfiguration" },
      {"trigger": "cc.LabelBMFont", "contents": "cc.LabelBMFont" },
      {"trigger": "cc.LabelTTF", "contents": "cc.LabelTTF" },
      {"trigger": "cc.Layer", "contents": "cc.Layer" },
      {"trigger": "cc.LayerRGBA", "contents": "cc.LayerRGBA" },
      {"trigger": "cc.LayerColor", "contents": "cc.LayerColor" },
      {"trigger": "cc.LayerGradient", "contents": "cc.LayerGradient" },
      {"trigger": "cc.LayerMultiplex", "contents": "cc.LayerMultiplex" },
      {"trigger": "cc.Scene", "contents": "cc.Scene" },
      {"trigger": "cc.TransitionEaseScene", "contents": "cc.TransitionEaseScene" },
      {"trigger": "cc.TransitionScene", "contents": "cc.TransitionScene" },
      {"trigger": "cc.TransitionSceneOriented", "contents": "cc.TransitionSceneOriented" },
      {"trigger": "cc.TransitionRotoZoom", "contents": "cc.TransitionRotoZoom" },
      {"trigger": "cc.TransitionJumpZoom", "contents": "cc.TransitionJumpZoom" },
      {"trigger": "cc.TransitionMoveInL", "contents": "cc.TransitionMoveInL" },
      {"trigger": "cc.TransitionMoveInR", "contents": "cc.TransitionMoveInR" },
      {"trigger": "cc.TransitionMoveInT", "contents": "cc.TransitionMoveInT" },
      {"trigger": "cc.TransitionMoveInB", "contents": "cc.TransitionMoveInB" },
      {"trigger": "cc.TransitionSlideInL", "contents": "cc.TransitionSlideInL" },
      {"trigger": "cc.TransitionSlideInR", "contents": "cc.TransitionSlideInR" },
      {"trigger": "cc.TransitionSlideInB", "contents": "cc.TransitionSlideInB" },
      {"trigger": "cc.TransitionSlideInT", "contents": "cc.TransitionSlideInT" },
      {"trigger": "cc.TransitionShrinkGrow", "contents": "cc.TransitionShrinkGrow" },
      {"trigger": "cc.TransitionFlipX", "contents": "cc.TransitionFlipX" },
      {"trigger": "cc.TransitionFlipY", "contents": "cc.TransitionFlipY" },
      {"trigger": "cc.TransitionFlipAngular", "contents": "cc.TransitionFlipAngular" },
      {"trigger": "cc.TransitionZoomFlipX", "contents": "cc.TransitionZoomFlipX" },
      {"trigger": "cc.TransitionZoomFlipY", "contents": "cc.TransitionZoomFlipY" },
      {"trigger": "cc.TransitionZoomFlipAngular", "contents": "cc.TransitionZoomFlipAngular" },
      {"trigger": "cc.TransitionFade", "contents": "cc.TransitionFade" },
      {"trigger": "cc.TransitionCrossFade", "contents": "cc.TransitionCrossFade" },
      {"trigger": "cc.TransitionTurnOffTiles", "contents": "cc.TransitionTurnOffTiles" },
      {"trigger": "cc.TransitionSplitCols", "contents": "cc.TransitionSplitCols" },
      {"trigger": "cc.TransitionSplitRows", "contents": "cc.TransitionSplitRows" },
      {"trigger": "cc.TransitionFadeTR", "contents": "cc.TransitionFadeTR" },
      {"trigger": "cc.TransitionFadeBL", "contents": "cc.TransitionFadeBL" },
      {"trigger": "cc.TransitionFadeUp", "contents": "cc.TransitionFadeUp" },
      {"trigger": "cc.TransitionFadeDown", "contents": "cc.TransitionFadeDown" },
      {"trigger": "cc.TransitionPageTurn", "contents": "cc.TransitionPageTurn" },
      {"trigger": "cc.TransitionProgress", "contents": "cc.TransitionProgress" },
      {"trigger": "cc.TransitionProgressRadialCCW", "contents": "cc.TransitionProgressRadialCCW" },
      {"trigger": "cc.TransitionProgressRadialCW", "contents": "cc.TransitionProgressRadialCW" },
      {"trigger": "cc.TransitionProgressHorizontal", "contents": "cc.TransitionProgressHorizontal" },
      {"trigger": "cc.TransitionProgressVertical", "contents": "cc.TransitionProgressVertical" },
      {"trigger": "cc.TransitionProgressInOut", "contents": "cc.TransitionProgressInOut" },
      {"trigger": "cc.TransitionProgressOutIn", "contents": "cc.TransitionProgressOutIn" },
      {"trigger": "cc.Menu", "contents": "cc.Menu" },
      {"trigger": "cc.MenuItem", "contents": "cc.MenuItem" },
      {"trigger": "cc.MenuItemLabel", "contents": "cc.MenuItemLabel" },
      {"trigger": "cc.MenuItemAtlasFont", "contents": "cc.MenuItemAtlasFont" },
      {"trigger": "cc.MenuItemFont", "contents": "cc.MenuItemFont" },
      {"trigger": "cc.MenuItemSprite", "contents": "cc.MenuItemSprite" },
      {"trigger": "cc.MenuItemImage", "contents": "cc.MenuItemImage" },
      {"trigger": "cc.MenuItemToggle", "contents": "cc.MenuItemToggle" },
      {"trigger": "cc.ClippingNode", "contents": "cc.ClippingNode" },
      {"trigger": "cc.MotionStreak", "contents": "cc.MotionStreak" },
      {"trigger": "cc.ProgressTimer", "contents": "cc.ProgressTimer" },
      {"trigger": "cc.RenderTexture", "contents": "cc.RenderTexture" },
      {"trigger": "cc.ParticleBatchNode", "contents": "cc.ParticleBatchNode" },
      {"trigger": "cc.ParticleFire", "contents": "cc.ParticleFire" },
      {"trigger": "cc.ParticleFireworks", "contents": "cc.ParticleFireworks" },
      {"trigger": "cc.ParticleSun", "contents": "cc.ParticleSun" },
      {"trigger": "cc.ParticleGalaxy", "contents": "cc.ParticleGalaxy" },
      {"trigger": "cc.ParticleFlower", "contents": "cc.ParticleFlower" },
      {"trigger": "cc.ParticleMeteor", "contents": "cc.ParticleMeteor" },
      {"trigger": "cc.ParticleSpiral", "contents": "cc.ParticleSpiral" },
      {"trigger": "cc.ParticleExplosion", "contents": "cc.ParticleExplosion" },
      {"trigger": "cc.ParticleSmoke", "contents": "cc.ParticleSmoke" },
      {"trigger": "cc.ParticleSnow", "contents": "cc.ParticleSnow" },
      {"trigger": "cc.ParticleRain", "contents": "cc.ParticleRain" },
      {"trigger": "cc.ParticleSystem", "contents": "cc.ParticleSystem" },
      {"trigger": "cc.AppController", "contents": "cc.AppController" },
      {"trigger": "cc.Accelerometer", "contents": "cc.Accelerometer" },
      {"trigger": "cc.AccelerometerDispatcher", "contents": "cc.AccelerometerDispatcher" },
      {"trigger": "cc.Application", "contents": "cc.Application" },
      {"trigger": "cc.EGLView", "contents": "cc.EGLView" },
      {"trigger": "cc.Image", "contents": "cc.Image" },
      {"trigger": "cc.SAXParser", "contents": "cc.SAXParser" },
      {"trigger": "cc.Screen", "contents": "cc.Screen" },
      {"trigger": "cc.GLProgram", "contents": "cc.GLProgram" },
      {"trigger": "cc.ShaderCache", "contents": "cc.ShaderCache" },
      {"trigger": "cc.AnimationFrame", "contents": "cc.AnimationFrame" },
      {"trigger": "cc.Animation", "contents": "cc.Animation" },
      {"trigger": "cc.AnimationCache", "contents": "cc.AnimationCache" },
      {"trigger": "cc.Sprite", "contents": "cc.Sprite" },
      {"trigger": "cc.SpriteBatchNode", "contents": "cc.SpriteBatchNode" },
      {"trigger": "cc.SpriteFrame", "contents": "cc.SpriteFrame" },
      {"trigger": "cc.SpriteFrameCache", "contents": "cc.SpriteFrameCache" },
      {"trigger": "cc.IMEDelegate", "contents": "cc.IMEDelegate" },
      {"trigger": "cc.IMEDispatcher", "contents": "cc.IMEDispatcher" },
      {"trigger": "cc.IMEDispatcher.Impl", "contents": "cc.IMEDispatcher.Impl" },
      {"trigger": "cc.TextFieldDelegate", "contents": "cc.TextFieldDelegate" },
      {"trigger": "cc.TextFieldTTF", "contents": "cc.TextFieldTTF" },
      {"trigger": "cc.Texture2DWebGL", "contents": "cc.Texture2DWebGL" },
      {"trigger": "cc.Texture2DCanvas", "contents": "cc.Texture2DCanvas" },
      {"trigger": "cc.TextureAtlas", "contents": "cc.TextureAtlas" },
      {"trigger": "cc.TextureCache", "contents": "cc.TextureCache" },
      {"trigger": "cc.PointObject", "contents": "cc.PointObject" },
      {"trigger": "cc.ParallaxNode", "contents": "cc.ParallaxNode" },
      {"trigger": "cc.TileMapAtlas", "contents": "cc.TileMapAtlas" },
      {"trigger": "cc.TMXLayer", "contents": "cc.TMXLayer" },
      {"trigger": "cc.TMXObjectGroup", "contents": "cc.TMXObjectGroup" },
      {"trigger": "cc.TMXTiledMap", "contents": "cc.TMXTiledMap" },
      {"trigger": "cc.TMXLayerInfo", "contents": "cc.TMXLayerInfo" },
      {"trigger": "cc.TMXTilesetInfo", "contents": "cc.TMXTilesetInfo" },
      {"trigger": "cc.TMXMapInfo", "contents": "cc.TMXMapInfo" },
      {"trigger": "cc.MouseHandler", "contents": "cc.MouseHandler" },
      {"trigger": "cc.Touch", "contents": "cc.Touch" },
      {"trigger": "cc.TouchDelegate", "contents": "cc.TouchDelegate" },
      {"trigger": "cc.TargetedTouchDelegate", "contents": "cc.TargetedTouchDelegate" },
      {"trigger": "cc.StandardTouchDelegate", "contents": "cc.StandardTouchDelegate" },
      {"trigger": "cc.TouchDispatcher", "contents": "cc.TouchDispatcher" },
      {"trigger": "cc.TouchHandler", "contents": "cc.TouchHandler" },
      {"trigger": "cc.StandardTouchHandler", "contents": "cc.StandardTouchHandler" },
      {"trigger": "cc.TargetedTouchHandler", "contents": "cc.TargetedTouchHandler" },
      {"trigger": "cc.DIRECTOR_PROJECTION_2D", "contents": "cc.DIRECTOR_PROJECTION_2D" },
      {"trigger": "cc.DIRECTOR_PROJECTION_3D", "contents": "cc.DIRECTOR_PROJECTION_3D" },
      {"trigger": "cc.DIRECTOR_PROJECTION_CUSTOM", "contents": "cc.DIRECTOR_PROJECTION_CUSTOM" },
      {"trigger": "cc.DIRECTOR_PROJECTION_DEFAULT", "contents": "cc.DIRECTOR_PROJECTION_DEFAULT" },
      {"trigger": "cc.DEVICE_ORIENTATION_PORTRAIT", "contents": "cc.DEVICE_ORIENTATION_PORTRAIT" },
      {"trigger": "cc.DEVICE_ORIENTATION_LANDSCAPE_LEFT", "contents": "cc.DEVICE_ORIENTATION_LANDSCAPE_LEFT" },
      {"trigger": "cc.DEVICE_ORIENTATION_PORTRAIT_UPSIDE_DOWN", "contents": "cc.DEVICE_ORIENTATION_PORTRAIT_UPSIDE_DOWN" },
      {"trigger": "cc.DEVICE_ORIENTATION_LANDSCAPE_RIGHT", "contents": "cc.DEVICE_ORIENTATION_LANDSCAPE_RIGHT" },
      {"trigger": "cc.DEVICE_MAX_ORIENTATIONS", "contents": "cc.DEVICE_MAX_ORIENTATIONS" },
      {"trigger": "cc.firstRun", "contents": "cc.firstRun" },
      {"trigger": "cc.defaultFPS", "contents": "cc.defaultFPS" },
      {"trigger": "cc.KEYBOARD_RETURNTYPE_DEFAULT", "contents": "cc.KEYBOARD_RETURNTYPE_DEFAULT" },
      {"trigger": "cc.KEYBOARD_RETURNTYPE_DONE", "contents": "cc.KEYBOARD_RETURNTYPE_DONE" },
      {"trigger": "cc.KEYBOARD_RETURNTYPE_SEND", "contents": "cc.KEYBOARD_RETURNTYPE_SEND" },
      {"trigger": "cc.KEYBOARD_RETURNTYPE_SEARCH", "contents": "cc.KEYBOARD_RETURNTYPE_SEARCH" },
      {"trigger": "cc.KEYBOARD_RETURNTYPE_GO", "contents": "cc.KEYBOARD_RETURNTYPE_GO" },
      {"trigger": "cc.EDITBOX_INPUT_MODE_ANY", "contents": "cc.EDITBOX_INPUT_MODE_ANY" },
      {"trigger": "cc.EDITBOX_INPUT_MODE_EMAILADDR", "contents": "cc.EDITBOX_INPUT_MODE_EMAILADDR" },
      {"trigger": "cc.EDITBOX_INPUT_MODE_NUMERIC", "contents": "cc.EDITBOX_INPUT_MODE_NUMERIC" },
      {"trigger": "cc.EDITBOX_INPUT_MODE_PHONENUMBER", "contents": "cc.EDITBOX_INPUT_MODE_PHONENUMBER" },
      {"trigger": "cc.EDITBOX_INPUT_MODE_URL", "contents": "cc.EDITBOX_INPUT_MODE_URL" },
      {"trigger": "cc.EDITBOX_INPUT_MODE_DECIMAL", "contents": "cc.EDITBOX_INPUT_MODE_DECIMAL" },
      {"trigger": "cc.EDITBOX_INPUT_MODE_SINGLELINE", "contents": "cc.EDITBOX_INPUT_MODE_SINGLELINE" },
      {"trigger": "cc.EDITBOX_INPUT_FLAG_PASSWORD", "contents": "cc.EDITBOX_INPUT_FLAG_PASSWORD" },
      {"trigger": "cc.EDITBOX_INPUT_FLAG_SENSITIVE", "contents": "cc.EDITBOX_INPUT_FLAG_SENSITIVE" },
      {"trigger": "cc.EDITBOX_INPUT_FLAG_INITIAL_CAPS_WORD", "contents": "cc.EDITBOX_INPUT_FLAG_INITIAL_CAPS_WORD" },
      {"trigger": "cc.EDITBOX_INPUT_FLAG_INITIAL_CAPS_SENTENCE", "contents": "cc.EDITBOX_INPUT_FLAG_INITIAL_CAPS_SENTENCE" },
      {"trigger": "cc.EDITBOX_INPUT_FLAG_INITIAL_CAPS_ALL_CHARACTERS", "contents": "cc.EDITBOX_INPUT_FLAG_INITIAL_CAPS_ALL_CHARACTERS" },
      {"trigger": "cc.PRIORITY_SYSTEM", "contents": "cc.PRIORITY_SYSTEM" },
      {"trigger": "cc.PRIORITY_NON_SYSTEM", "contents": "cc.PRIORITY_NON_SYSTEM" },
      {"trigger": "cc.ACTION_TAG_INVALID", "contents": "cc.ACTION_TAG_INVALID" },
      {"trigger": "cc.DOM", "contents": "cc.DOM" },
      {"trigger": "cc.NODE_TAG_INVALID", "contents": "cc.NODE_TAG_INVALID" },
      {"trigger": "cc.NODE_ON_ENTER", "contents": "cc.NODE_ON_ENTER" },
      {"trigger": "cc.NODE_ON_EXIT", "contents": "cc.NODE_ON_EXIT" },
      {"trigger": "cc.s_globalOrderOfArrival", "contents": "cc.s_globalOrderOfArrival" },
      {"trigger": "cc.Node.StateCallbackType", "contents": "cc.Node.StateCallbackType" },
      {"trigger": "cc.TYPE_BACK_CLICKED", "contents": "cc.TYPE_BACK_CLICKED" },
      {"trigger": "cc.TYPE_MENU_CLICKED", "contents": "cc.TYPE_MENU_CLICKED" },
      {"trigger": "cc.LABEL_AUTOMATIC_WIDTH", "contents": "cc.LABEL_AUTOMATIC_WIDTH" },
      {"trigger": "cc.LabelBMFont._configurations", "contents": "cc.LabelBMFont._configurations" },
      {"trigger": "cc.SCENE_FADE", "contents": "cc.SCENE_FADE" },
      {"trigger": "cc.TRANSITION_ORIENTATION_LEFT_OVER", "contents": "cc.TRANSITION_ORIENTATION_LEFT_OVER" },
      {"trigger": "cc.TRANSITION_ORIENTATION_RIGHT_OVER", "contents": "cc.TRANSITION_ORIENTATION_RIGHT_OVER" },
      {"trigger": "cc.TRANSITION_ORIENTATION_UP_OVER", "contents": "cc.TRANSITION_ORIENTATION_UP_OVER" },
      {"trigger": "cc.TRANSITION_ORIENTATION_DOWN_OVER", "contents": "cc.TRANSITION_ORIENTATION_DOWN_OVER" },
      {"trigger": "cc.ADJUST_FACTOR", "contents": "cc.ADJUST_FACTOR" },
      {"trigger": "cc.SCENE_RADIAL", "contents": "cc.SCENE_RADIAL" },
      {"trigger": "cc.MENU_STATE_WAITING", "contents": "cc.MENU_STATE_WAITING" },
      {"trigger": "cc.MENU_STATE_TRACKING_TOUCH", "contents": "cc.MENU_STATE_TRACKING_TOUCH" },
      {"trigger": "cc.MENU_HANDLER_PRIORITY", "contents": "cc.MENU_HANDLER_PRIORITY" },
      {"trigger": "cc.DEFAULT_PADDING", "contents": "cc.DEFAULT_PADDING" },
      {"trigger": "cc.ITEM_SIZE", "contents": "cc.ITEM_SIZE" },
      {"trigger": "cc.CURRENT_ITEM", "contents": "cc.CURRENT_ITEM" },
      {"trigger": "cc.ZOOM_ACTION_TAG", "contents": "cc.ZOOM_ACTION_TAG" },
      {"trigger": "cc.NORMAL_TAG", "contents": "cc.NORMAL_TAG" },
      {"trigger": "cc.SELECTED_TAG", "contents": "cc.SELECTED_TAG" },
      {"trigger": "cc.DISABLE_TAG", "contents": "cc.DISABLE_TAG" },
      {"trigger": "cc.PROGRESS_TIMER_TYPE_RADIAL", "contents": "cc.PROGRESS_TIMER_TYPE_RADIAL" },
      {"trigger": "cc.PROGRESS_TIMER_TYPE_BAR", "contents": "cc.PROGRESS_TIMER_TYPE_BAR" },
      {"trigger": "cc.PROGRESS_TEXTURE_COORDS_COUNT", "contents": "cc.PROGRESS_TEXTURE_COORDS_COUNT" },
      {"trigger": "cc.PROGRESS_TEXTURE_COORDS", "contents": "cc.PROGRESS_TEXTURE_COORDS" },
      {"trigger": "cc.IMAGE_FORMAT_JPEG", "contents": "cc.IMAGE_FORMAT_JPEG" },
      {"trigger": "cc.IMAGE_FORMAT_PNG", "contents": "cc.IMAGE_FORMAT_PNG" },
      {"trigger": "cc.IMAGE_FORMAT_RAWDATA", "contents": "cc.IMAGE_FORMAT_RAWDATA" },
      {"trigger": "cc.PARTICLE_DEFAULT_CAPACITY", "contents": "cc.PARTICLE_DEFAULT_CAPACITY" },
      {"trigger": "cc.PARTICLE_SHAPE_MODE", "contents": "cc.PARTICLE_SHAPE_MODE" },
      {"trigger": "cc.PARTICLE_TEXTURE_MODE", "contents": "cc.PARTICLE_TEXTURE_MODE" },
      {"trigger": "cc.PARTICLE_STAR_SHAPE", "contents": "cc.PARTICLE_STAR_SHAPE" },
      {"trigger": "cc.PARTICLE_BALL_SHAPE", "contents": "cc.PARTICLE_BALL_SHAPE" },
      {"trigger": "cc.PARTICLE_DURATION_INFINITY", "contents": "cc.PARTICLE_DURATION_INFINITY" },
      {"trigger": "cc.PARTICLE_START_SIZE_EQUAL_TO_END_SIZE", "contents": "cc.PARTICLE_START_SIZE_EQUAL_TO_END_SIZE" },
      {"trigger": "cc.PARTICLE_START_RADIUS_EQUAL_TO_END_RADIUS", "contents": "cc.PARTICLE_START_RADIUS_EQUAL_TO_END_RADIUS" },
      {"trigger": "cc.PARTICLE_MODE_GRAVITY", "contents": "cc.PARTICLE_MODE_GRAVITY" },
      {"trigger": "cc.PARTICLE_MODE_RADIUS", "contents": "cc.PARTICLE_MODE_RADIUS" },
      {"trigger": "cc.PARTICLE_TYPE_FREE", "contents": "cc.PARTICLE_TYPE_FREE" },
      {"trigger": "cc.PARTICLE_TYPE_RELATIVE", "contents": "cc.PARTICLE_TYPE_RELATIVE" },
      {"trigger": "cc.PARTICLE_TYPE_GROUPED", "contents": "cc.PARTICLE_TYPE_GROUPED" },
      {"trigger": "cc.sharedAppController", "contents": "cc.sharedAppController" },
      {"trigger": "cc.ORIENTATION_PORTRAIT", "contents": "cc.ORIENTATION_PORTRAIT" },
      {"trigger": "cc.ORIENTATION_PORTRAIT_UPSIDE_DOWN", "contents": "cc.ORIENTATION_PORTRAIT_UPSIDE_DOWN" },
      {"trigger": "cc.ORIENTATION_LANDSCAPE_LEFT", "contents": "cc.ORIENTATION_LANDSCAPE_LEFT" },
      {"trigger": "cc.ORIENTATION_LANDSCAPE_RIGHT", "contents": "cc.ORIENTATION_LANDSCAPE_RIGHT" },
      {"trigger": "cc.CANVAS", "contents": "cc.CANVAS" },
      {"trigger": "cc.WEBGL", "contents": "cc.WEBGL" },
      {"trigger": "cc.drawingUtil", "contents": "cc.drawingUtil" },
      {"trigger": "cc.renderContext", "contents": "cc.renderContext" },
      {"trigger": "cc.canvas", "contents": "cc.canvas" },
      {"trigger": "cc.gameDiv", "contents": "cc.gameDiv" },
      {"trigger": "cc.renderContextType", "contents": "cc.renderContextType" },
      {"trigger": "cc.originalCanvasSize", "contents": "cc.originalCanvasSize" },
      {"trigger": "cc.IS_SHOW_DEBUG_ON_PAGE", "contents": "cc.IS_SHOW_DEBUG_ON_PAGE" },
      {"trigger": "cc.LANGUAGE_ENGLISH", "contents": "cc.LANGUAGE_ENGLISH" },
      {"trigger": "cc.LANGUAGE_CHINESE", "contents": "cc.LANGUAGE_CHINESE" },
      {"trigger": "cc.LANGUAGE_FRENCH", "contents": "cc.LANGUAGE_FRENCH" },
      {"trigger": "cc.LANGUAGE_ITALIAN", "contents": "cc.LANGUAGE_ITALIAN" },
      {"trigger": "cc.LANGUAGE_GERMAN", "contents": "cc.LANGUAGE_GERMAN" },
      {"trigger": "cc.LANGUAGE_SPANISH", "contents": "cc.LANGUAGE_SPANISH" },
      {"trigger": "cc.LANGUAGE_RUSSIAN", "contents": "cc.LANGUAGE_RUSSIAN" },
      {"trigger": "cc.LANGUAGE_KOREAN", "contents": "cc.LANGUAGE_KOREAN" },
      {"trigger": "cc.LANGUAGE_JAPANESE", "contents": "cc.LANGUAGE_JAPANESE" },
      {"trigger": "cc.LANGUAGE_HUNGARIAN", "contents": "cc.LANGUAGE_HUNGARIAN" },
      {"trigger": "cc.LANGUAGE_PORTUGUESE", "contents": "cc.LANGUAGE_PORTUGUESE" },
      {"trigger": "cc.LANGUAGE_ARABIC", "contents": "cc.LANGUAGE_ARABIC" },
      {"trigger": "cc.LANGUAGE_NORWEGIAN", "contents": "cc.LANGUAGE_NORWEGIAN" },
      {"trigger": "cc.LANGUAGE_POLISH", "contents": "cc.LANGUAGE_POLISH" },
      {"trigger": "cc.keyDown[65]", "contents": "cc.keyDown[65]" },
      {"trigger": "cc.ENGINE_VERSION", "contents": "cc.ENGINE_VERSION" },
      {"trigger": "cc.FIX_ARTIFACTS_BY_STRECHING_TEXEL", "contents": "cc.FIX_ARTIFACTS_BY_STRECHING_TEXEL" },
      {"trigger": "cc.DIRECTOR_STATS_POSITION", "contents": "cc.DIRECTOR_STATS_POSITION" },
      {"trigger": "cc.DIRECTOR_FPS_INTERVAL", "contents": "cc.DIRECTOR_FPS_INTERVAL" },
      {"trigger": "cc.COCOSNODE_RENDER_SUBPIXEL", "contents": "cc.COCOSNODE_RENDER_SUBPIXEL" },
      {"trigger": "cc.SPRITEBATCHNODE_RENDER_SUBPIXEL", "contents": "cc.SPRITEBATCHNODE_RENDER_SUBPIXEL" },
      {"trigger": "cc.OPTIMIZE_BLEND_FUNC_FOR_PREMULTIPLIED_ALPHA", "contents": "cc.OPTIMIZE_BLEND_FUNC_FOR_PREMULTIPLIED_ALPHA" },
      {"trigger": "cc.TEXTURE_ATLAS_USE_TRIANGLE_STRIP", "contents": "cc.TEXTURE_ATLAS_USE_TRIANGLE_STRIP" },
      {"trigger": "cc.TEXTURE_ATLAS_USE_VAO", "contents": "cc.TEXTURE_ATLAS_USE_VAO" },
      {"trigger": "cc.TEXTURE_NPOT_SUPPORT", "contents": "cc.TEXTURE_NPOT_SUPPORT" },
      {"trigger": "cc.RETINA_DISPLAY_SUPPORT", "contents": "cc.RETINA_DISPLAY_SUPPORT" },
      {"trigger": "cc.RETINA_DISPLAY_FILENAME_SUFFIX", "contents": "cc.RETINA_DISPLAY_FILENAME_SUFFIX" },
      {"trigger": "cc.USE_LA88_LABELS", "contents": "cc.USE_LA88_LABELS" },
      {"trigger": "cc.SPRITE_DEBUG_DRAW", "contents": "cc.SPRITE_DEBUG_DRAW" },
      {"trigger": "cc.SPRITEBATCHNODE_DEBUG_DRAW", "contents": "cc.SPRITEBATCHNODE_DEBUG_DRAW" },
      {"trigger": "cc.LABELBMFONT_DEBUG_DRAW", "contents": "cc.LABELBMFONT_DEBUG_DRAW" },
      {"trigger": "cc.LABELATLAS_DEBUG_DRAW", "contents": "cc.LABELATLAS_DEBUG_DRAW" },
      {"trigger": "cc.IS_RETINA_DISPLAY_SUPPORTED", "contents": "cc.IS_RETINA_DISPLAY_SUPPORTED" },
      {"trigger": "cc.DEFAULT_ENGINE", "contents": "cc.DEFAULT_ENGINE" },
      {"trigger": "cc.ENABLE_STACKABLE_ACTIONS", "contents": "cc.ENABLE_STACKABLE_ACTIONS" },
      {"trigger": "cc.ENABLE_GL_STATE_CACHE", "contents": "cc.ENABLE_GL_STATE_CACHE" },
      {"trigger": "cc.SAX_NONE", "contents": "cc.SAX_NONE" },
      {"trigger": "cc.SAX_KEY", "contents": "cc.SAX_KEY" },
      {"trigger": "cc.SAX_DICT", "contents": "cc.SAX_DICT" },
      {"trigger": "cc.SAX_INT", "contents": "cc.SAX_INT" },
      {"trigger": "cc.SAX_REAL", "contents": "cc.SAX_REAL" },
      {"trigger": "cc.SAX_STRING", "contents": "cc.SAX_STRING" },
      {"trigger": "cc.SAX_ARRAY", "contents": "cc.SAX_ARRAY" },
      {"trigger": "cc.FMT_JPG", "contents": "cc.FMT_JPG" },
      {"trigger": "cc.FMT_PNG", "contents": "cc.FMT_PNG" },
      {"trigger": "cc.FMT_TIFF", "contents": "cc.FMT_TIFF" },
      {"trigger": "cc.FMT_RAWDATA", "contents": "cc.FMT_RAWDATA" },
      {"trigger": "cc.FMT_WEBP", "contents": "cc.FMT_WEBP" },
      {"trigger": "cc.FMT_UNKNOWN", "contents": "cc.FMT_UNKNOWN" },
      {"trigger": "cc.ALIGN_CENTER", "contents": "cc.ALIGN_CENTER" },
      {"trigger": "cc.ALIGN_TOP", "contents": "cc.ALIGN_TOP" },
      {"trigger": "cc.ALIGN_TOP_RIGHT", "contents": "cc.ALIGN_TOP_RIGHT" },
      {"trigger": "cc.ALIGN_RIGHT", "contents": "cc.ALIGN_RIGHT" },
      {"trigger": "cc.ALIGN_BOTTOM_RIGHT", "contents": "cc.ALIGN_BOTTOM_RIGHT" },
      {"trigger": "cc.ALIGN_BOTTOM", "contents": "cc.ALIGN_BOTTOM" },
      {"trigger": "cc.ALIGN_BOTTOM_LEFT", "contents": "cc.ALIGN_BOTTOM_LEFT" },
      {"trigger": "cc.ALIGN_LEFT", "contents": "cc.ALIGN_LEFT" },
      {"trigger": "cc.ALIGN_TOP_LEFT", "contents": "cc.ALIGN_TOP_LEFT" },
      {"trigger": "cc.INVALID_INDEX", "contents": "cc.INVALID_INDEX" },
      {"trigger": "cc.PI", "contents": "cc.PI" },
      {"trigger": "cc.FLT_MAX", "contents": "cc.FLT_MAX" },
      {"trigger": "cc.RAD", "contents": "cc.RAD" },
      {"trigger": "cc.DEG", "contents": "cc.DEG" },
      {"trigger": "cc.UINT_MAX", "contents": "cc.UINT_MAX" },
      {"trigger": "cc.REPEAT_FOREVER", "contents": "cc.REPEAT_FOREVER" },
      {"trigger": "cc.BLEND_SRC", "contents": "cc.BLEND_SRC" },
      {"trigger": "cc.BLEND_DST", "contents": "cc.BLEND_DST" },
      {"trigger": "cc.FLT_EPSILON", "contents": "cc.FLT_EPSILON" },
      {"trigger": "cc.TEXT_ALIGNMENT_LEFT", "contents": "cc.TEXT_ALIGNMENT_LEFT" },
      {"trigger": "cc.TEXT_ALIGNMENT_CENTER", "contents": "cc.TEXT_ALIGNMENT_CENTER" },
      {"trigger": "cc.TEXT_ALIGNMENT_RIGHT", "contents": "cc.TEXT_ALIGNMENT_RIGHT" },
      {"trigger": "cc.VERTICAL_TEXT_ALIGNMENT_TOP", "contents": "cc.VERTICAL_TEXT_ALIGNMENT_TOP" },
      {"trigger": "cc.VERTICAL_TEXT_ALIGNMENT_CENTER", "contents": "cc.VERTICAL_TEXT_ALIGNMENT_CENTER" },
      {"trigger": "cc.VERTICAL_TEXT_ALIGNMENT_BOTTOM", "contents": "cc.VERTICAL_TEXT_ALIGNMENT_BOTTOM" },
      {"trigger": "cc.Codec.GZip.LITERALS", "contents": "cc.Codec.GZip.LITERALS" },
      {"trigger": "cc.Codec.GZip.NAMEMAX", "contents": "cc.Codec.GZip.NAMEMAX" },
      {"trigger": "cc.Browser", "contents": "cc.Browser" },
      {"trigger": "cc.VERTEX_ATTRIB_POSITION", "contents": "cc.VERTEX_ATTRIB_POSITION" },
      {"trigger": "cc.VERTEX_ATTRIB_COLOR", "contents": "cc.VERTEX_ATTRIB_COLOR" },
      {"trigger": "cc.VERTEX_ATTRIB_TEX_COORDS", "contents": "cc.VERTEX_ATTRIB_TEX_COORDS" },
      {"trigger": "cc.VERTEX_ATTRIB_MAX", "contents": "cc.VERTEX_ATTRIB_MAX" },
      {"trigger": "cc.UNIFORM_PMATRIX", "contents": "cc.UNIFORM_PMATRIX" },
      {"trigger": "cc.UNIFORM_MVMATRIX", "contents": "cc.UNIFORM_MVMATRIX" },
      {"trigger": "cc.UNIFORM_MVPMATRIX", "contents": "cc.UNIFORM_MVPMATRIX" },
      {"trigger": "cc.UNIFORM_TIME", "contents": "cc.UNIFORM_TIME" },
      {"trigger": "cc.UNIFORM_SINTIME", "contents": "cc.UNIFORM_SINTIME" },
      {"trigger": "cc.UNIFORM_COSTIME", "contents": "cc.UNIFORM_COSTIME" },
      {"trigger": "cc.UNIFORM_RANDOM01", "contents": "cc.UNIFORM_RANDOM01" },
      {"trigger": "cc.UNIFORM_SAMPLER", "contents": "cc.UNIFORM_SAMPLER" },
      {"trigger": "cc.UNIFORM_MAX", "contents": "cc.UNIFORM_MAX" },
      {"trigger": "cc.SHADER_POSITION_TEXTURECOLOR", "contents": "cc.SHADER_POSITION_TEXTURECOLOR" },
      {"trigger": "cc.SHADER_POSITION_TEXTURECOLORALPHATEST", "contents": "cc.SHADER_POSITION_TEXTURECOLORALPHATEST" },
      {"trigger": "cc.SHADER_POSITION_COLOR", "contents": "cc.SHADER_POSITION_COLOR" },
      {"trigger": "cc.SHADER_POSITION_TEXTURE", "contents": "cc.SHADER_POSITION_TEXTURE" },
      {"trigger": "cc.SHADER_POSITION_TEXTURE_UCOLOR", "contents": "cc.SHADER_POSITION_TEXTURE_UCOLOR" },
      {"trigger": "cc.SHADER_POSITION_TEXTUREA8COLOR", "contents": "cc.SHADER_POSITION_TEXTUREA8COLOR" },
      {"trigger": "cc.SHADER_POSITION_UCOLOR", "contents": "cc.SHADER_POSITION_UCOLOR" },
      {"trigger": "cc.SHADER_POSITION_LENGTHTEXTURECOLOR", "contents": "cc.SHADER_POSITION_LENGTHTEXTURECOLOR" },
      {"trigger": "cc.UNIFORM_PMATRIX_S", "contents": "cc.UNIFORM_PMATRIX_S" },
      {"trigger": "cc.UNIFORM_MVMATRIX_S", "contents": "cc.UNIFORM_MVMATRIX_S" },
      {"trigger": "cc.UNIFORM_MVPMATRIX_S", "contents": "cc.UNIFORM_MVPMATRIX_S" },
      {"trigger": "cc.UNIFORM_TIME_S", "contents": "cc.UNIFORM_TIME_S" },
      {"trigger": "cc.UNIFORM_SINTIME_S", "contents": "cc.UNIFORM_SINTIME_S" },
      {"trigger": "cc.UNIFORM_COSTIME_S", "contents": "cc.UNIFORM_COSTIME_S" },
      {"trigger": "cc.UNIFORM_RANDOM01_S", "contents": "cc.UNIFORM_RANDOM01_S" },
      {"trigger": "cc.UNIFORM_SAMPLER_S", "contents": "cc.UNIFORM_SAMPLER_S" },
      {"trigger": "cc.UNIFORM_ALPHA_TEST_VALUE_S", "contents": "cc.UNIFORM_ALPHA_TEST_VALUE_S" },
      {"trigger": "cc.ATTRIBUTE_NAME_COLOR", "contents": "cc.ATTRIBUTE_NAME_COLOR" },
      {"trigger": "cc.ATTRIBUTE_NAME_POSITION", "contents": "cc.ATTRIBUTE_NAME_POSITION" },
      {"trigger": "cc.ATTRIBUTE_NAME_TEX_COORD", "contents": "cc.ATTRIBUTE_NAME_TEX_COORD" },
      {"trigger": "cc.VERTEX_ATTRIB_FLAG_NONE", "contents": "cc.VERTEX_ATTRIB_FLAG_NONE" },
      {"trigger": "cc.VERTEX_ATTRIB_FLAG_POSITION", "contents": "cc.VERTEX_ATTRIB_FLAG_POSITION" },
      {"trigger": "cc.VERTEX_ATTRIB_FLAG_COLOR", "contents": "cc.VERTEX_ATTRIB_FLAG_COLOR" },
      {"trigger": "cc.VERTEX_ATTRIB_FLAG_TEXCOORDS", "contents": "cc.VERTEX_ATTRIB_FLAG_TEXCOORDS" },
      {"trigger": "cc.VERTEX_ATTRIB_FLAG_POSCOLORTEX", "contents": "cc.VERTEX_ATTRIB_FLAG_POSCOLORTEX" },
      {"trigger": "cc.GL_ALL", "contents": "cc.GL_ALL" },
      {"trigger": "cc.SHADERTYPE_POSITION_TEXTURECOLOR", "contents": "cc.SHADERTYPE_POSITION_TEXTURECOLOR" },
      {"trigger": "cc.SHADERTYPE_POSITION_TEXTURECOLOR_ALPHATEST", "contents": "cc.SHADERTYPE_POSITION_TEXTURECOLOR_ALPHATEST" },
      {"trigger": "cc.SHADERTYPE_POSITION_COLOR", "contents": "cc.SHADERTYPE_POSITION_COLOR" },
      {"trigger": "cc.SHADERTYPE_POSITION_TEXTURE", "contents": "cc.SHADERTYPE_POSITION_TEXTURE" },
      {"trigger": "cc.SHADERTYPE_POSITION_TEXTURE_UCOLOR", "contents": "cc.SHADERTYPE_POSITION_TEXTURE_UCOLOR" },
      {"trigger": "cc.SHADERTYPE_POSITION_TEXTURE_A8COLOR", "contents": "cc.SHADERTYPE_POSITION_TEXTURE_A8COLOR" },
      {"trigger": "cc.SHADERTYPE_POSITION_UCOLOR", "contents": "cc.SHADERTYPE_POSITION_UCOLOR" },
      {"trigger": "cc.SHADERTYPE_POSITION_LENGTH_TEXTURECOLOR", "contents": "cc.SHADERTYPE_POSITION_LENGTH_TEXTURECOLOR" },
      {"trigger": "cc.SHADERTYPE_MAX", "contents": "cc.SHADERTYPE_MAX" },
      {"trigger": "cc.SPRITE_INDEX_NOT_INITIALIZED", "contents": "cc.SPRITE_INDEX_NOT_INITIALIZED" },
      {"trigger": "cc.DEFAULT_SPRITE_BATCH_CAPACITY", "contents": "cc.DEFAULT_SPRITE_BATCH_CAPACITY" },
      {"trigger": "cc.POINT_EPSILON", "contents": "cc.POINT_EPSILON" },
      {"trigger": "cc.TGA_OK", "contents": "cc.TGA_OK" },
      {"trigger": "cc.TGA_ERROR_FILE_OPEN", "contents": "cc.TGA_ERROR_FILE_OPEN" },
      {"trigger": "cc.TGA_ERROR_READING_FILE", "contents": "cc.TGA_ERROR_READING_FILE" },
      {"trigger": "cc.TGA_ERROR_INDEXED_COLOR", "contents": "cc.TGA_ERROR_INDEXED_COLOR" },
      {"trigger": "cc.TGA_ERROR_MEMORY", "contents": "cc.TGA_ERROR_MEMORY" },
      {"trigger": "cc.TGA_ERROR_COMPRESSED_FILE", "contents": "cc.TGA_ERROR_COMPRESSED_FILE" },
      {"trigger": "cc.IMEDispatcher.instance", "contents": "cc.IMEDispatcher.instance" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_RGBA8888", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_RGBA8888" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_RGB888", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_RGB888" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_RGB565", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_RGB565" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_A8", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_A8" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_I8", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_I8" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_AI88", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_AI88" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_RGBA4444", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_RGBA4444" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_RGB5A1", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_RGB5A1" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_PVRTC4", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_PVRTC4" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_PVRTC2", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_PVRTC2" },
      {"trigger": "cc.TEXTURE_2D_PIXEL_FORMAT_DEFAULT", "contents": "cc.TEXTURE_2D_PIXEL_FORMAT_DEFAULT" },
      {"trigger": "cc.g_sharedTextureCache", "contents": "cc.g_sharedTextureCache" },
      {"trigger": "cc.TMX_ORIENTATION_ORTHO", "contents": "cc.TMX_ORIENTATION_ORTHO" },
      {"trigger": "cc.TMX_ORIENTATION_ISO", "contents": "cc.TMX_ORIENTATION_ISO" },
      {"trigger": "cc.TMX_LAYER_ATTRIB_NONE", "contents": "cc.TMX_LAYER_ATTRIB_NONE" },
      {"trigger": "cc.TMX_LAYER_ATTRIB_BASE64", "contents": "cc.TMX_LAYER_ATTRIB_BASE64" },
      {"trigger": "cc.TMX_LAYER_ATTRIB_GZIP", "contents": "cc.TMX_LAYER_ATTRIB_GZIP" },
      {"trigger": "cc.TMX_LAYER_ATTRIB_ZLIB", "contents": "cc.TMX_LAYER_ATTRIB_ZLIB" },
      {"trigger": "cc.TMX_PROPERTY_NONE", "contents": "cc.TMX_PROPERTY_NONE" },
      {"trigger": "cc.TMX_PROPERTY_MAP", "contents": "cc.TMX_PROPERTY_MAP" },
      {"trigger": "cc.TMX_PROPERTY_LAYER", "contents": "cc.TMX_PROPERTY_LAYER" },
      {"trigger": "cc.TMX_PROPERTY_OBJECTGROUP", "contents": "cc.TMX_PROPERTY_OBJECTGROUP" },
      {"trigger": "cc.TMX_PROPERTY_OBJECT", "contents": "cc.TMX_PROPERTY_OBJECT" },
      {"trigger": "cc.TMX_PROPERTY_TILE", "contents": "cc.TMX_PROPERTY_TILE" },
      {"trigger": "cc.TMX_TILE_HORIZONTAL_FLAG", "contents": "cc.TMX_TILE_HORIZONTAL_FLAG" },
      {"trigger": "cc.TMX_TILE_VERTICAL_FLAG", "contents": "cc.TMX_TILE_VERTICAL_FLAG" },
      {"trigger": "cc.TMX_TILE_DIAGONAL_FLAG", "contents": "cc.TMX_TILE_DIAGONAL_FLAG" },
      {"trigger": "cc.TMX_TILE_FLIPPED_ALL", "contents": "cc.TMX_TILE_FLIPPED_ALL" },
      {"trigger": "cc.TMX_TILE_FLIPPED_MASK", "contents": "cc.TMX_TILE_FLIPPED_MASK" },
      {"trigger": "cc.MOUSE_DOWN", "contents": "cc.MOUSE_DOWN" },
      {"trigger": "cc.MOUSE_MOVED", "contents": "cc.MOUSE_MOVED" },
      {"trigger": "cc.MOUSE_DRAGGED", "contents": "cc.MOUSE_DRAGGED" },
      {"trigger": "cc.MOUSE_UP", "contents": "cc.MOUSE_UP" },
      {"trigger": "cc.RIGHT_MOUSE_DOWN", "contents": "cc.RIGHT_MOUSE_DOWN" },
      {"trigger": "cc.RIGHT_MOUSE_DRAGGED", "contents": "cc.RIGHT_MOUSE_DRAGGED" },
      {"trigger": "cc.RIGHT_MOUSE_UP", "contents": "cc.RIGHT_MOUSE_UP" },
      {"trigger": "cc.OTHER_MOUSE_DOWN", "contents": "cc.OTHER_MOUSE_DOWN" },
      {"trigger": "cc.OTHER_MOUSE_DRAGGED", "contents": "cc.OTHER_MOUSE_DRAGGED" },
      {"trigger": "cc.OTHER_MOUSE_UP", "contents": "cc.OTHER_MOUSE_UP" },
      {"trigger": "cc.SCROLL_WHEEL", "contents": "cc.SCROLL_WHEEL" },
      {"trigger": "cc.MOUSE_ENTERED", "contents": "cc.MOUSE_ENTERED" },
      {"trigger": "cc.MOUSE_EXITED", "contents": "cc.MOUSE_EXITED" },
      {"trigger": "cc.MOUSE_LEFTBUTTON", "contents": "cc.MOUSE_LEFTBUTTON" },
      {"trigger": "cc.MOUSE_MIDDLEBUTTON", "contents": "cc.MOUSE_MIDDLEBUTTON" },
      {"trigger": "cc.MOUSE_RIGHTBUTTON", "contents": "cc.MOUSE_RIGHTBUTTON" },
      {"trigger": "cc.TouchSelectorBeganBit", "contents": "cc.TouchSelectorBeganBit" },
      {"trigger": "cc.TouchSelectorMovedBit", "contents": "cc.TouchSelectorMovedBit" },
      {"trigger": "cc.TouchSelectorEndedBit", "contents": "cc.TouchSelectorEndedBit" },
      {"trigger": "cc.TouchSelectorCancelledBit", "contents": "cc.TouchSelectorCancelledBit" },
      {"trigger": "cc.TouchSelectorAllBits", "contents": "cc.TouchSelectorAllBits" },
      {"trigger": "cc.TOUCH_BEGAN", "contents": "cc.TOUCH_BEGAN" },
      {"trigger": "cc.TOUCH_MOVED", "contents": "cc.TOUCH_MOVED" },
      {"trigger": "cc.TOUCH_ENDED", "contents": "cc.TOUCH_ENDED" },
      {"trigger": "cc.TOUCH_CANCELLED", "contents": "cc.TOUCH_CANCELLED" },
      {"trigger": "cc.TouchMax", "contents": "cc.TouchMax" },
      {"trigger": "cc.TouchDispatcher.preTouchPoint", "contents": "cc.TouchDispatcher.preTouchPoint" },
      {"trigger": "cc.TouchDispatcher._preTouchPool", "contents": "cc.TouchDispatcher._preTouchPool" },
      {"trigger": "cc.TouchDispatcher._preTouchPoolPointer", "contents": "cc.TouchDispatcher._preTouchPoolPointer" }
  ]
}
